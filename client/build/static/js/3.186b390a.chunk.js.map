{"version":3,"sources":["pages/HomeDesktop.tsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_users_actions__WEBPACK_IMPORTED_MODULE_2__","_style_HomeDesktop_module_scss__WEBPACK_IMPORTED_MODULE_3__","_style_HomeDesktop_module_scss__WEBPACK_IMPORTED_MODULE_3___default","_components_Button__WEBPACK_IMPORTED_MODULE_4__","_data_charts_json__WEBPACK_IMPORTED_MODULE_5__","connect","state","locations","auth","language","posts","pinned","news","filter","el","active","logOff","props","user","text","charts","chartsData","location","_id","a","createElement","className","style","desktop","header","mode","action","content","graphs","map","chart","chartTitle","name","title","src","url"],"mappings":"0rBAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAAK,EAAAG,GAAAE,EAAAV,EAAA,GAAAW,EAAAX,EAAA,KAmFeY,sBAVS,SAACC,GACvB,MAAO,CACLC,UAAWD,EAAMC,UACjBC,KAAMF,EAAME,KACZC,SAAUH,EAAMG,SAChBC,MAAOJ,EAAMI,MACbC,OAAQL,EAAMM,KAAKC,OAAO,SAACC,GAAD,OAAaA,EAAGC,QAAUD,EAAGH,WAMzD,CAACK,YAFYX,CA/DF,SAACY,GAOR,IACIV,EAAoBU,EAApBV,UACDW,EADqBD,EAATT,KACZU,KACCC,EAASF,EAAMR,SAAfU,KACJC,EAAqBC,EACnBC,EAAWf,EAAUM,OAAO,SAACC,GAAD,OAAaA,EAAGS,MAAQL,EAAKI,WAAU,GAUzE,OACEzB,EAAA2B,EAAAC,cAAA,OAAKC,UAAWC,IAAMC,SACpB/B,EAAA2B,EAAAC,cAAA,OAAKC,UAAWC,IAAME,QACpBhC,EAAA2B,EAAAC,cAAA,SACGH,GAEHzB,EAAA2B,EAAAC,cAAA,WACE5B,EAAA2B,EAAAC,cAACtB,EAAA,EAAD,CAAQ2B,KAAK,eAAeC,OAAQd,EAAMD,QACvCG,EAAK,4BAIZtB,EAAA2B,EAAAC,cAAA,OAAKC,UAAWC,IAAMK,SACpBnC,EAAA2B,EAAAC,cAAA,OAAKC,UAAWC,IAAMM,QAASb,EAAOF,EAAKI,UAAUY,IAAI,SAACC,GAAD,OACvDtC,EAAA2B,EAAAC,cAAA,WACE5B,EAAA2B,EAAAC,cAAA,OAAKC,UAAWC,IAAMS,YAAaD,EAAME,MACzCxC,EAAA2B,EAAAC,cAAA,UAAQa,MAAM,cAAcZ,UAAWC,IAAMQ,MAAOI,IAAKJ,EAAMK","file":"static/js/3.186b390a.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../store\";\n\nimport {logOff }from '../store/users/actions'\nimport PinnedCard from \"../components/Card/PinnedCard\";\n\nimport Header from \"../components/Header\";\nimport PostList from \"../components/PostList\";\n\nimport Page from \"../layout/Page\";\nimport Content from \"../layout/Content\";\nimport { data, post, indexedObjAny } from \"../store/types\";\nimport style from \"./style/HomeDesktop.module.scss\";\nimport Card from \"../components/Card\";\nimport Button from \"../components/Button\";\nimport chartsData from '../data/charts.json'\nimport { AuthState } from \"../models\";\n\nconst Home = (props: {\n  posts: post[];\n  pinned: any;\n  language: data;\n  locations: data;\n  auth:AuthState\n  logOff: () => {}\n}) => {\n  const { locations, auth } = props\n  const {user} = auth\n  const { text } = props.language;\nconst charts:indexedObjAny=chartsData\n  const location = locations.filter((el: any) => el._id === user.location)[0];\n\n\n\n  const sortPostList = (posts: post[]) => {\n    return posts.sort((a: post, b: post) =>\n      a.votes.length < b.votes.length ? 1 : -1\n    );\n  };\n\n  return (\n    <div className={style.desktop}>\n      <div className={style.header}>\n        <p>\n          {location}\n        </p>\n        <div>\n          <Button mode='primarySmall' action={props.logOff}>\n            {text[\"profile.button.logOff\"]}\n          </Button>\n        </div>\n      </div>\n      <div className={style.content}>\n        <div className={style.graphs}>{charts[user.location].map((chart: any) =>\n          <div>\n            <div className={style.chartTitle}>{chart.name}</div>\n            <iframe title=\"static_html\" className={style.chart} src={chart.url}/>\n         </div>\n        )}</div>\n        {/* <div className={style.posts}>\n          {props.posts.map((post: any) => (\n            <div key={post._id} className={style.post}>\n              <Card post={post} />\n            </div>\n          ))}\n        </div> */}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    locations: state.locations,\n    auth: state.auth,\n    language: state.language,\n    posts: state.posts,\n    pinned: state.news.filter((el: any) => el.active && el.pinned)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {logOff}\n)(Home);\n"],"sourceRoot":""}