{"version":3,"sources":["features/Post/index.tsx","modules/reply_style_generator.ts","features/Post/PostMuni.tsx","pages/Post.tsx","icons/Help.tsx","components/Title.tsx","components/Header.tsx","components/styles/Title.module.scss","components/style/Header.module.scss","components/VoteButton.tsx","components/style/VoteButton.module.scss"],"names":["connect","state","language","location","locationData","post","posts","filter","_id","mode","prevModule","vote","updatePost","setModule","props","categories","_props$language","direction","text","short","_useState","useState","_useState2","Object","slicedToArray","textOpened","setTextOpened","_useState3","_useState4","replyOpened","setReplyOpened","_useState5","_useState6","showConfirm","setShowConfirm","_useState7","_useState8","newReply","setNewReply","_useState9","_useState10","showNewReply","setShowNewReply","_useState11","_useState12","title","photo","link","problem","solution","votes","createdBy","date","reply","showStyle","style","textClosed","voterText","length","category","categoryIdToName","showMoreLessText","more","less","handleVoteClick","numbersLine","react_default","a","createElement","components","daysText","modal","close","includes","author","muniUser","type","voteButton","className","onClick","VoteButton","newReplyButton","newReplyComponent","handleNewReplySubmit","fields","Date","ReplyMessage","setOfThumbs","action","Modal","disabled","label","value","placeholder","event","target","name","submit","submitText","_replyCardStyleUtil","opened","up","down","replyCardColor","replyCardStyle","t1","t2","t3","styleName","toUpperCase","slice","generateStyleName","replyCardStyleUtil","fill","replyVotes","replies","styleFactory","replyCardTitle","replyMessage","color","edit","right","icon","iconEdit","noRtl","headerObject","objectSpread","left","goBack","Content","header","Header","wrapper","data-testid","id","src","primary","step","back","voted","municipality","Block","muni","component","Post_PostMuni","features_Post","console","log","Page","Help","width","height","viewBox","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","d","colorsArray","Title","titleR","_React$useState","React","_React$useState2","showHelp","setShowHelp","makeIcon","styles","icons_Help","Button","components_Title","module","exports","plank","plankRTL","iconRTL","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_style_VoteButton_module_scss__WEBPACK_IMPORTED_MODULE_2__","_style_VoteButton_module_scss__WEBPACK_IMPORTED_MODULE_2___default","inner"],"mappings":"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","file":"static/js/10.f65470c2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { categoryIdToName } from \"../../modules/category_processor\";\nimport { replyCardStyleUtil } from \"../../modules/reply_style_generator\";\nimport { goBack, iconEdit } from \"../../icons\";\n\nimport { AppState } from \"../../store\";\nimport { vote, setModule } from \"../../store/users/actions\";\nimport { updatePost } from \"../../store/post/actions\";\nimport { indexedObjAny, post, data } from \"../../store/types\";\n\nimport VoteButton from \"../../components/VoteButton\";\nimport Header from \"../../components/Header\";\nimport Modal from \"../../components/Modal\";\n\nimport {\n  Photo,\n  Link,\n  Text,\n  TopBlock,\n  ShowMore,\n  NumbersLine,\n  NewReply,\n  Voted,\n  SetOfThumbs,\n  ReplyVotes,\n  NewReplyButton,\n  ModalView\n} from \"./components\";\n\nimport Line from \"../../layout/Line\";\nimport Content from \"../../layout/Content\";\n\nimport style from \"./style/Post.module.scss\";\nimport styleFactory from \"../../modules/style_factory\";\n\nconst Post = (props: {\n  post: post;\n  language: indexedObjAny;\n  location: data;\n  vote: (arg0: string, arg1: string) => void;\n  updatePost: (arg0: any) => void;\n  setModule: (arg0: string) => void;\n  prevModule: string;\n}) => {\n  const { categories } = props.location;\n\n  const { direction, text, short } = props.language;\n\n  const [textOpened, setTextOpened] = useState(false);\n  const [replyOpened, setReplyOpened] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [newReply, setNewReply] = useState(\"\");\n  const [showNewReply, setShowNewReply] = useState(false);\n  const [post, setPost] = useState(props.post);\n  const {\n    _id,\n    title,\n    photo,\n    link,\n    problem,\n    solution,\n    votes,\n    createdBy,\n    date,\n    reply\n  } = post;\n  // } = props.post;\n\n  const showStyle = textOpened ? style.text : style.textClosed;\n  const voterText =\n    votes.length === 1 ? text[\"post.voter\"] : text[\"post.voters\"];\n  const category = categoryIdToName(categories, short, props.post.category);\n  const showMoreLessText = {\n    more: text[\"post.show-more\"],\n    less: text[\"post.show-less\"]\n  };\n\n  const handleVoteClick = () => {\n    setShowConfirm(!showConfirm);\n    props.vote(_id, props.location._id);\n  };\n\n  const numbersLine = (\n    <NumbersLine\n      date={date}\n      daysText={[text[\"post.age.day\"], text[\"post.age.days\"]]}\n      direction={direction}\n      votes={votes.length}\n      voterText={voterText}\n    />\n  );\n\n  const modal = showConfirm ? (\n    <ModalView close={handleVoteClick} text={text[\"vote.thanks\"]} />\n  ) : null;\n\n  const includes = votes.includes(props.location._id);\n  const author = createdBy === props.location._id;\n  const muniUser = props.location.type === \"muni\";\n\n  let voteButton =\n    includes || author || muniUser ? null : (\n      <div className={style.voteButton} onClick={() => handleVoteClick()}>\n        <VoteButton />\n      </div>\n    );\n\n  if (votes.includes(props.location._id))\n    voteButton = <Voted text={text[\"post.voted\"]} direction={direction} />;\n\n  const handleNewReplyChange = (event: any) => {\n    switch (event.target.name) {\n      case \"replyText\":\n        setNewReply(event.target.value);\n        break;\n    }\n  };\n\n  const handleNewReplySubmit = () => {\n    if (newReply) {\n      props.updatePost({\n        _id: _id,\n        fields: { reply: { text: newReply, date: new Date() } }\n      });\n    }\n    setShowNewReply(false);\n  };\n\n  const toggleShowNewReplyButton = () => {\n    setShowNewReply(!showNewReply);\n  };\n\n  let newReplyButton: any = \"\";\n  let newReplyComponent: any = \"\";\n  let ReplyMessage: any = \"\";\n  let setOfThumbs: any = \"\";\n\n  newReplyButton =\n    muniUser && !reply ? (\n      <NewReplyButton action={toggleShowNewReplyButton} />\n    ) : null;\n  newReplyComponent = showNewReply ? (\n    <Modal disabled close={handleNewReplySubmit}>\n      <NewReply\n        label={text[\"newreply.label\"]}\n        value={newReply}\n        placeholder={text[\"newreply.placeholder\"]}\n        action={handleNewReplyChange}\n        direction={direction}\n        submit={handleNewReplySubmit}\n        submitText={text[\"login.button.submit\"]}\n      />\n    </Modal>\n  ) : null;\n\n  if (reply) {\n    const { replyCardStyle, replyCardColor } = replyCardStyleUtil(\n      reply,\n      replyOpened\n    );\n\n    setOfThumbs = reply.text ? <SetOfThumbs fill={replyCardColor} /> : null;\n    const replyVotes = (\n      <ReplyVotes replies={{ up: reply.up, down: reply.down }} />\n    );\n\n    ReplyMessage = reply.text ? (\n      <div className={style[replyCardStyle]}>\n        <div className={style[styleFactory('replyTitleLine',direction)]}>\n          {replyVotes}\n          <span className={style.replyCardTitle}>\n            {text[\"munireply.title\"]}\n          </span>\n        </div>\n        <div className={style.replyMessage}>{reply.text}</div>\n        {reply.text.length > 50 ? (\n          <ShowMore\n            color='white'\n            title={showMoreLessText}\n            direction={direction}\n            opened={replyOpened}\n            action={setReplyOpened}\n          />\n        ) : null}\n      </div>\n    ) : null;\n  }\n\n  // TODO: change\n  const mockEdit = false;\n  const mockFnEdit = () => {};\n  const goHome = () => {\n    props.setModule(props.prevModule);\n  };\n\n  const edit =\n    !author && !muniUser\n      ? {\n          right: { icon: iconEdit(\"primary\"), action: mockFnEdit, noRtl: true }\n        }\n      : null;\n  const headerObject = {\n    name: props.location.name[props.language.short],\n    ...edit,\n    left: { icon: goBack(\"primary\"), action: goHome }\n  };\n  return (\n    <Content header>\n      <Header {...headerObject} />\n      <div className={style.wrapper}>\n        <div data-testid='post__view' id={_id} className={style.post}>\n          <TopBlock\n            category={category}\n            title={title}\n            numbersLine={numbersLine}\n          />\n          <Photo src={photo} edit={mockEdit} />\n          <Link primary text={link} direction={direction} edit={mockEdit} />\n          <div className={showStyle}>\n            <Text\n              step\n              title={text[\"post.problem\"]}\n              text={problem}\n              direction={direction}\n            />\n            <Text\n              back\n              title={text[\"post.solution\"]}\n              text={solution}\n              direction={direction}\n            />\n          </div>\n          <ShowMore\n            color='primary'\n            title={showMoreLessText}\n            direction={direction}\n            opened={textOpened}\n            action={setTextOpened}\n          />\n        </div>\n        <div className={style.voted}>{voteButton}</div>\n        {modal}\n        {newReplyButton}\n        {newReplyComponent}\n        {ReplyMessage}\n        {setOfThumbs}\n      </div>\n    </Content>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    language: state.language,\n    location: state.locationData,\n    // @ts-ignore\n    post: state.posts.filter((post: any) => post._id === state.post._id)[0],\n    mode: state.mode,\n    prevModule: state.prevModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { vote, updatePost, setModule }\n)(Post);\n","const generateStyleName = (t1: string, t2: string, t3?: string) => {\n  let styleName = t1 + t2[0].toUpperCase() + t2.slice(1);\n  if (t3) styleName = styleName + t3[0].toUpperCase() + t3.slice(1);\n  return styleName;\n};\n\nexport const replyCardStyleUtil = (\n  reply: {\n    up: string[];\n    down: string[];\n  },\n  opened: boolean\n) => {\n  const up = reply.up.length;\n  const down = reply.down.length;\n\n  let replyCardColor = \"secondary\";\n  if (up < down) replyCardColor = \"attention\";\n  if (up === down) replyCardColor = \"white\";\n\n  const replyHeight = opened ? \"open\" : \"closed\";\n  const replyCardStyle = generateStyleName(\"card\", replyCardColor, replyHeight);\n  return { replyCardStyle, replyCardColor };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../../store\";\nimport { setModule } from \"../../store/users/actions\";\nimport { indexedObjAny } from \"../../store/types\";\n\nimport { Photo, Link, Text } from \"./components\";\n\nimport Block from \"../../layout/Block\";\n\nimport style from \"./style/Post.module.scss\";\nimport Content from \"../../layout/Content\";\nimport Header from \"../../components/Header\";\nimport { goBack } from \"../../icons\";\n\nconst PostMuni = (props: {\n  post: any;\n  language: indexedObjAny;\n  location: indexedObjAny;\n  setModule: (arg0: string) => void;\n  prevModule: string;\n}) => {\n  const { post } = props;\n  const { direction } = props.language;\n\n  const goHome = () => {\n    props.setModule(props.prevModule);\n  };\n  const headerObject = {\n    name: props.location.name[props.language.short],\n    left: { icon: goBack(\"primary\"), action: goHome }\n  };\n\n  return (\n    <Content header>\n      <Header {...headerObject} />\n      <div className={style.wrapper}>\n        <div data-testid='post__view' id={post._id} className={style.post}>\n          <Photo src={post.photo} />\n          <Block>\n            <Link primary text={post.link} direction={direction} />\n          </Block>\n          <Text muni text={post.text} direction={direction} />\n        </div>\n      </div>\n    </Content>\n  );\n\n  // <Content header>\n  //   <Header {...headerObject} />\n  //   <div className={style.wrapper}>\n  //     <div data-testid='post__view' id={_id} className={style.post}>\n  //       <TopBlock\n  //         category={category}\n  //         title={title}\n  //         numbersLine={numbersLine}\n  //       />\n  //       <Photo src={photo} edit={mockEdit} />\n  //       <Link primary text={link} direction={direction} edit={mockEdit} />\n  //       <div className={showStyle}>\n  //         <Text\n  //           step\n  //           title={text[\"post.problem\"]}\n  //           text={problem}\n  //           direction={direction}\n  //         />\n  //         <Text\n  //           back\n  //           title={text[\"post.solution\"]}\n  //           text={solution}\n  //           direction={direction}\n  //         />\n  //       </div>\n  //       <ShowMore\n  //         color='primary'\n  //         title={showMoreLessText}\n  //         direction={direction}\n  //         opened={textOpened}\n  //         action={setTextOpened}\n  //       />\n  //     </div>\n  //     <div className={style.voted}>{voteButton}</div>\n  //     {modal}\n  //     {newReplyButton}\n  //     {newReplyComponent}\n  //     {ReplyMessage}\n  //     {setOfThumbs}\n  //   </div>\n  // </Content>;\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    language: state.language,\n    location: state.locationData,\n    prevModule: state.prevModule,\n    post: state.locationData.municipality.filter(\n      // @ts-ignore\n      (post: any) => post._id === state.post._id\n    )[0]\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setModule }\n)(PostMuni);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../store\";\n\nimport PostUser from \"../features/Post/\";\nimport PostMuni from \"../features/Post/PostMuni\";\n\nimport Page from \"../layout/Page\";\n\n/** Functional component to render Post page\n * @returns {JSX.Element} - Post page\n */\nconst Post = (props: { muni?: boolean }) => {\n  // TODO: change\n  const component = props.muni ? <PostMuni /> : <PostUser />;\nconsole.log(props.muni)\n  return <Page>{component}</Page>;\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    // @ts-ignore\n    muni: state.post.type === \"muni\"\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Post);\n","import React from \"react\";\n\nimport { colorsArray } from \"../style/_colors\";\n\nconst Help = (props: { color: string }) => (\n  <svg\n    width='100%'\n    height='100%'\n    viewBox='0 0 300 300'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.41421'>\n    <path\n      d='M150,0c82.787,0 150,67.213 150,150c0,82.787 -67.213,150 -150,150c-82.787,0 -150,-67.213 -150,-150c0,-82.787 67.213,-150 150,-150Zm0,16.42c73.725,0 133.58,59.855 133.58,133.58c0,73.725 -59.855,133.58 -133.58,133.58c-73.725,0 -133.58,-59.855 -133.58,-133.58c0,-73.725 59.855,-133.58 133.58,-133.58Z'\n      fill={colorsArray[props.color]}\n    />\n    <path\n      d='M111.256,103.147c-2.669,0.668 -5.172,0.167 -7.508,-1.501c-2.336,-1.669 -3.504,-3.905 -3.504,-6.708l0,-1.602c0,-3.337 1.068,-6.34 3.204,-9.01c2.135,-2.67 4.805,-4.271 8.009,-4.805c12.414,-2.403 24.894,-3.604 37.442,-3.604c16.151,0 28.665,3.17 37.542,9.51c8.877,6.341 13.315,14.717 13.315,25.129c0,4.805 -0.634,9.11 -1.902,12.914c-1.268,3.804 -3.27,7.242 -6.007,10.312c-2.736,3.07 -5.206,5.473 -7.408,7.208c-2.203,1.735 -5.239,3.938 -9.11,6.607c-3.605,2.536 -6.408,4.539 -8.41,6.007c-2.002,1.468 -4.171,3.537 -6.507,6.207c-2.336,2.67 -4.105,5.473 -5.306,8.41c-2.937,7.475 -7.409,11.212 -13.415,11.212l-4.005,0c-3.203,0 -5.873,-1.168 -8.009,-3.504c-2.136,-2.336 -2.87,-4.972 -2.202,-7.909c1.201,-4.805 3.37,-9.377 6.507,-13.715c3.137,-4.338 5.873,-7.442 8.209,-9.311c2.336,-1.868 5.907,-4.605 10.712,-8.209c4.138,-2.937 7.175,-5.239 9.111,-6.908c1.935,-1.668 3.804,-3.937 5.606,-6.807c1.802,-2.87 2.703,-5.907 2.703,-9.111c0,-10.278 -8.476,-15.417 -25.429,-15.417c-9.878,0 -21.09,1.535 -33.638,4.605Zm25.029,92.905l6.607,0c3.07,0 5.74,1.134 8.009,3.404c2.269,2.269 3.404,4.939 3.404,8.009l0,5.206c0,3.07 -1.135,5.739 -3.404,8.009c-2.269,2.269 -4.939,3.403 -8.009,3.403l-6.607,0c-3.071,0 -5.74,-1.134 -8.009,-3.403c-2.27,-2.27 -3.404,-4.939 -3.404,-8.009l0,-5.206c0,-3.07 1.134,-5.74 3.404,-8.009c2.269,-2.27 4.938,-3.404 8.009,-3.404Z'\n      fill={colorsArray[props.color]}\n      fillRule='nonzero'\n    />\n  </svg>\n);\n\nexport default Help\n","import React from \"react\";\n\nimport style from \"./styles/Title.module.scss\";\n\nconst Title = (props: { title: string; direction: string }) => {\n  return (\n    <h1 className={props.direction === \"rtl\" ? style.titleR : style.title}>\n      {props.title}\n    </h1>\n  );\n};\n\nexport default Title;\n","import { indexedObj } from \"../store/types\";\n\nimport { AppState } from \"../store\";\nimport styleFactory from \"../modules/style_factory\";\nimport Button from \"./Button\";\nimport Help from \"../icons/Help\";\nimport React from \"react\";\nimport Title from \"./Title\";\nimport { connect } from \"react-redux\";\nimport styles from \"./style/Header.module.scss\";\n\nconst Header = (props: {\n  language: indexedObj;\n  name: string;\n  right?: {\n    icon: JSX.Element;\n    action: () => void;\n    noRtl?: boolean;\n  };\n  left?: {\n    icon: JSX.Element;\n    action: () => void;\n    noRtl?: boolean;\n  };\n}) => {\n  const [showHelp, setShowHelp] = React.useState(false);\n  const { direction } = props.language;\n  const { name } = props;\n\n  const makeIcon = (icon: any, noRtl?: boolean) => {\n    const style = noRtl\n      ? styles[\"icon\"]\n      : styles[styleFactory(\"icon\", direction)];\n    return <div className={style}>{icon}</div>;\n  };\n\n  const handleLeftAction = () => {\n    props.left ? props.left.action() : setShowHelp(!showHelp);\n  };\n  const handleRightAction = () => {\n    if (props.right) props.right.action();\n  };\n\n  const left = props.left\n    ? makeIcon(props.left.icon, props.left.noRtl)\n    : makeIcon(<Help color='primary' />, true);\n\n  const right = props.right ? (\n    makeIcon(props.right.icon, props.right.noRtl)\n  ) : (\n    <div />\n  );\n\n  return (\n    <header className={styles[styleFactory(\"plank\", direction)]}>\n      <Button mode='minimal' action={handleLeftAction}>\n        {left}\n      </Button>\n      <Title title={name} direction={direction} />\n      <Button mode='minimal' action={handleRightAction}>\n        {right}\n      </Button>\n    </header>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    language: state.language\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Header);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__3E1da\",\"titleR\":\"Title_titleR__2xWHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plank\":\"Header_plank__1Xkcj\",\"plankRTL\":\"Header_plankRTL__22swp\",\"icon\":\"Header_icon__1KqqL\",\"iconRTL\":\"Header_iconRTL__2ufUE\"};","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../store\";\nimport { indexedObjAny } from \"../store/types\";\n\nimport style from \"./style/VoteButton.module.scss\";\n\nconst CardVoteButton = (props: { language: indexedObjAny }) => {\n  const { text } = props.language;\n  return (\n    <button className={style.vote}>\n      <div className={style.inner}>\n        <span>{text[\"card.button.vote\"]}</span>\n      </div>\n    </button>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    language: state.language\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(CardVoteButton);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"vote\":\"VoteButton_vote__lXrZs\",\"inner\":\"VoteButton_inner__2gQwD\"};"],"sourceRoot":""}