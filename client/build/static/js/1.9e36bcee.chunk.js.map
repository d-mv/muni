{"version":3,"sources":["features/Register/index.tsx","pages/Enter.tsx"],"names":["connect","state","locations","registerResult","register","language","message","loading","typed","setModule","setMessage","props","_props$language","text","direction","_useState","useState","email","_useState2","Object","slicedToArray","setEmail","_useState3","pass","_useState4","setPass","_useState5","_useState6","secondPass","setSecondPass","defaultLocation","length","value","_useState7","location","_useState8","setLocation","_useState9","fName","_useState10","setFname","_useState11","lName","_useState12","setLname","_useState13","_useState14","errorMessage","setErrorMessage","handleInputChange","event","_event$target","target","name","showElement","react_default","a","createElement","className","Loading","emailElement","formSection","label","type","placeholder","action","passwordElement","passwordSecondElement","locationsElement","formSelection","list","fNameElement","focus","lNameElement","onSubmit","preventDefault","lang","short","ButtonsWrapper","column","Button","mode","submit","disabled","aria-label","button","primary","id","Enter","features_Register","storedLocations","show","Login","Page","opposite"],"mappings":"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","file":"static/js/1.9e36bcee.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { formSection, formSelection } from \"../../components/formSection\";\n\nimport { AppState } from \"../../store\";\nimport * as TYPE from \"../../store/types\";\nimport { register, setModule, setMessage } from \"../../store/users/actions\";\n\nimport Loading from \"../../components/Loading\";\nimport ButtonsWrapper from \"../../layout/ButtonsWrapper\";\nimport Button from \"../../components/Button\";\nimport button from \"../../components/style/Button.module.scss\";\n\n/** Functional component to render Register page content\n * @param {object} props - Object, containing functions & state from Redux\n * @returns {JSX.Element} - Register content\n */\nconst Register = (props: {\n  locations: { value: string; label: string }[];\n  storedLocations?: TYPE.data;\n  language: TYPE.indexedObjAny;\n  message: string;\n  loading: boolean;\n  register: (arg0: TYPE.register) => void;\n  setModule: (arg0: string) => void;\n  setMessage: (arg0: string) => void;\n  typed: TYPE.indexedObj;\n}) => {\n  // get the language\n  const { text, direction } = props.language;\n  const { locations } = props;\n\n  const [email, setEmail] = useState(props.typed ? props.typed.email : \"\");\n  const [pass, setPass] = useState(props.typed ? props.typed.pass : \"\");\n  const [secondPass, setSecondPass] = useState(\"\");\n  // if there are locations - use the first one\n  const defaultLocation = locations.length > 0 ? locations[0].value : \"\";\n  const [location, setLocation] = useState(\n    props.typed ? props.typed.location : defaultLocation\n  );\n  const [fName, setFname] = useState(props.typed ? props.typed.fName : \"\");\n  const [lName, setLname] = useState(props.typed ? props.typed.lName : \"\");\n\n  const [errorMessage, setErrorMessage] = useState(props.message);\n\n  // * form methods\n  // handle data submit\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (pass !== secondPass) {\n      setMessage(text[\"register.passwords.dont-match\"]);\n    } else {\n      props.register({\n        email,\n        pass,\n        location,\n        fName,\n        lName,\n        lang: props.language.short\n      });\n    }\n  };\n  // handle fields input changes\n  const handleInputChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setErrorMessage(\"\");\n    const { value, name } = event.target;\n    switch (name) {\n      case \"fName\":\n        setFname(value);\n        break;\n      case \"lName\":\n        setLname(value);\n        break;\n      case \"pass\":\n        setPass(value);\n        break;\n      case \"secondPass\":\n        setSecondPass(value);\n        break;\n      default:\n        setEmail(value);\n        break;\n    }\n  };\n  // handle location choice\n  const handleSelectChange = (event: any) => {\n    setLocation(event.target.value);\n  };\n\n  // set the form elements\n  const showElement = props.loading ? (\n    <div className='formLoading'>\n      <Loading />\n    </div>\n  ) : (\n    <div className='formMessage'>{errorMessage}</div>\n  );\n\n  let emailElement = formSection({\n    label: text[\"login.label.email\"],\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    placeholder: text[\"login.prompt.email\"],\n    action: handleInputChange\n  });\n\n  let passwordElement = formSection({\n    label: text[\"login.label.password\"],\n    type: \"password\",\n    name: \"pass\",\n    value: pass,\n    placeholder: text[\"login.prompt.password\"],\n    action: handleInputChange,\n    length: 7\n  });\n  let passwordSecondElement = formSection({\n    label: text[\"login.label.password.repeat\"],\n    type: \"password\",\n    name: \"secondPass\",\n    value: secondPass,\n    placeholder: text[\"login.prompt.password.repeat\"],\n    action: handleInputChange,\n    length: 7\n  });\n\n  const locationsElement = formSelection({\n    list: locations,\n    direction,\n    label: text[\"login.label.location\"],\n    action: handleSelectChange\n  });\n\n  const fNameElement = formSection({\n    label: text[\"login.label.fname\"],\n    type: \"text\",\n    name: \"fName\",\n    value: fName,\n    placeholder: text[\"login.prompt.fname\"],\n    action: handleInputChange,\n    length: 2,\n    focus: !props.loading\n  });\n  const lNameElement = formSection({\n    label: text[\"login.label.lname\"],\n    type: \"text\",\n    name: \"lName\",\n    value: lName,\n    placeholder: text[\"login.prompt.lname\"],\n    action: handleInputChange,\n    length: 3\n  });\n\n  return (\n    <form\n      className={direction === \"rtl\" ? \"formRight\" : \"formLeft\"}\n      onSubmit={handleSubmit}>\n      {/* visible during registration */}\n      {locationsElement}\n      {fNameElement}\n      {lNameElement}\n      {emailElement}\n      {passwordElement}\n      {passwordSecondElement}\n      {/* message & loading */}\n      {showElement}\n      {/* buttons */}\n      <ButtonsWrapper column direction={direction}>\n        <Button mode='form' submit disabled={props.loading} aria-label='Submit'>\n          <input\n            className={button.primary}\n            type='button'\n            value={text[\"login.button.register\"]}\n            id='submit_button'\n          />\n        </Button>\n      </ButtonsWrapper>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    locations: state.locations,\n    registerResult: state.register,\n    language: state.language,\n    message: state.message,\n    loading: state.loading,\n    typed: state.typed\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { register, setModule, setMessage }\n)(Register);\n","import React from \"react\";\n\nimport Login from \"../features/Login\";\nimport Register from \"../features/Register\";\n\nimport LangSwitch from \"../components/LangSwitch\";\n\nimport Page from \"../layout/Page\";\n\nimport style from \"./style/Login.module.scss\";\nimport { data } from \"../store/types\";\n\n/** Functional component to render login/register page\n * @returns {JSX.Element} - Login page\n */\nconst Enter = (props: { register?: boolean; locations?: data }) => {\n  const register = props.locations ? (\n    <Register storedLocations={props.locations} />\n  ) : (\n    <Register />\n  );\n  const show = props.register ? register : <Login />;\n  return (\n    <Page opposite>\n      {show}\n    </Page>\n  );\n};\n\nexport default Enter;\n"],"sourceRoot":""}