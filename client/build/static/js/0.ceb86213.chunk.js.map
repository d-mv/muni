{"version":3,"sources":["layout/style/Label.module.scss","components/formSection.tsx","components/Loading.tsx","layout/ButtonsWrapper.tsx","components/style/Loading.module.scss","components/LangSwitch.tsx","pages/style/Login.module.scss","features/Login/index.tsx","features/Register/index.tsx","pages/Enter.tsx","components/Button.tsx","components/style/Button.module.scss","layout/Label.tsx"],"names":["module","exports","label","labelRTL","__webpack_require__","d","__webpack_exports__","formSection","formSelection","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layout_Label__WEBPACK_IMPORTED_MODULE_1__","_icons__WEBPACK_IMPORTED_MODULE_2__","_modules_style_factory__WEBPACK_IMPORTED_MODULE_3__","props","input","type","a","createElement","autoFocus","focus","name","value","onChange","event","action","placeholder","minLength","length","rows","required","className","direction","styleFactory","list","map","location","key","down","_style_Loading_module_scss__WEBPACK_IMPORTED_MODULE_1__","_style_Loading_module_scss__WEBPACK_IMPORTED_MODULE_1___default","Loading","style","loading","_modules_style_factory__WEBPACK_IMPORTED_MODULE_1__","ButtonsWrapper","orientation","column","wrapStyle","children","left-swing","right-swing","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_users_actions__WEBPACK_IMPORTED_MODULE_2__","connect","state","language","data","user","locationData","_id","setLanguage","short","e","target","Object","keys","lang","langSwitch","registerResult","register","message","login","setModule","setMessage","setLoading","_props$language","text","_useState","useState","_useState2","slicedToArray","email","setEmail","_useState3","_useState4","pass","setPass","_useState5","_useState6","errorMessage","setErrorMessage","handleInputChange","_event$target","showElement","react_default","emailElement","passwordElement","onSubmit","preventDefault","handleSubmit","Button","mode","submit","disabled","aria-label","button","primary","id","locations","defaultLocation","setLocation","_useState7","_useState8","fName","setFname","_useState9","_useState10","lName","setLname","_useState11","_useState12","locationsElement","fNameElement","lNameElement","Enter","features_Register","storedLocations","show","features_Login","Page","opposite","LangSwitch","_style_Button_module_scss__WEBPACK_IMPORTED_MODULE_1__","_style_Button_module_scss__WEBPACK_IMPORTED_MODULE_1___default","buttonStyle","trans","onClick","undefined","title","minimal","button-template","secondary","secondaryFlat","attention","cancel","primarySmall","form","_style_Label_module_scss__WEBPACK_IMPORTED_MODULE_2__","_style_Label_module_scss__WEBPACK_IMPORTED_MODULE_2___default","Label","hStyle","styles"],"mappings":"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","file":"static/js/0.ceb86213.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__3w2w6\",\"labelRTL\":\"Label_labelRTL__1NIfD\"};","import React from \"react\";\n\nimport Label from \"../layout/Label\";\nimport { down } from \"../icons\";\nimport styleFactory from \"../modules/style_factory\";\n\nexport const formSection = (props: {\n  label: string;\n  type: string;\n  name: string;\n  value: string;\n  placeholder: string;\n  action: (\n    arg0: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => void;\n  length?: number;\n  direction?: string;\n  focus?: boolean;\n}) => {\n  const input =\n    props.type === \"textarea\" ? (\n      <textarea\n        autoFocus={props.focus}\n        name={props.name}\n        value={props.value}\n        onChange={(event: React.ChangeEvent<HTMLTextAreaElement>) =>\n          props.action(event)\n        }\n        placeholder={props.value ? \"\" : props.placeholder}\n        minLength={props.length ? props.length : 0}\n        rows={10}\n        required\n      />\n    ) : (\n      <input\n        autoFocus={props.focus}\n        type={props.type}\n        name={props.name}\n        value={props.value}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          props.action(event)\n        }\n        placeholder={props.value ? \"\" : props.placeholder}\n        minLength={props.length ? props.length : 0}\n        required\n      />\n    );\n  return (\n    <section className='section'>\n      <Label direction={props.direction || \"ltr\"} value={props.label} />\n      {input}\n    </section>\n  );\n};\n\nexport const formSelection = (props: {\n  list: { value: string; label: string }[];\n  direction: string;\n  label: string;\n  action: (arg0: React.FormEvent<Element>) => void;\n  focus?: boolean;\n}) => {\n\n  return (\n    <section\n      className={styleFactory(\"section\", props.direction)}\n      onChange={(event: React.FormEvent<Element>) => props.action(event)}>\n      <Label direction={props.direction || \"ltr\"} value={props.label} />\n      <div className='inline'>\n        <select autoFocus={props.focus}>\n          {props.list.map((location: { value: string; label: string }) => {\n            return (\n              <option key={location.value} value={location.value}>\n                {location.label}\n              </option>\n            );\n          })}\n        </select>\n        {down}\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\n\nimport style from \"./style/Loading.module.scss\";\n\nconst Loading = () => {\n  return (\n    <div className={style.loading}>\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\n\nimport styleFactory from \"../modules/style_factory\";\n\n/**\n * Component to wrap buttons and arrange then vertically/horizontally/RTL\n *\n * @param {object} props - Children, direction, column/row arrangement\n *\n * @returns {JSX.Element}\n */\nconst ButtonsWrapper = (props: {\n  children: any;\n  direction: string;\n  column?: boolean;\n  row?: boolean;\n}): JSX.Element => {\n  const orientation = props.column ? \"vertical\" : \"horizontal\";\n  const wrapStyle = props.column\n    ? \"vertical\"\n    : styleFactory(orientation, props.direction);\n  return <section className={wrapStyle}>{props.children}</section>;\n};\n\nexport default ButtonsWrapper;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__2BKoV\",\"left-swing\":\"Loading_left-swing__hRiH5\",\"right-swing\":\"Loading_right-swing__2CuJs\"};","import { AppState } from \"../store\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setLanguage } from \"../store/users/actions\";\nimport { data, indexedObjAny } from \"../store/types\";\n\nconst LangSwitch = (props: {\n  language: indexedObjAny;\n  data: indexedObjAny;\n  user: string;\n  setLanguage: (arg0: string, arg1: string) => void;\n}) => {\n  return (\n    <select\n      className='langSwitch'\n      value={props.language.short}\n      onChange={e => props.setLanguage(e.target.value, props.user)}>\n      {Object.keys(props.data.language).map((lang: string) => (\n        <option key={lang}>{lang}</option>\n      ))}\n    </select>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    language: state.language,\n    data: state.data,\n    user: state.locationData._id\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setLanguage }\n)(LangSwitch);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"langSwitch\":\"Login_langSwitch__1_wiY\"};","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { formSection } from \"../../components/formSection\";\n\nimport { AppState } from \"../../store\";\nimport * as TYPE from \"../../store/types\";\nimport {\n  login,\n  setModule,\n  setMessage,\n  setLoading\n} from \"../../store/users/actions\";\n\nimport Loading from \"../../components/Loading\";\nimport ButtonsWrapper from \"../../layout/ButtonsWrapper\";\nimport Button from \"../../components/Button\";\n\nimport button from \"../../components/style/Button.module.scss\";\n\n/** Functional component to render login page content\n * @param {object} props - Object, containing functions & state from Redux\n * @returns {JSX.Element} - Login content\n */\nconst Login = (props: {\n  registerResult: TYPE.apiResponse;\n  language: TYPE.indexedObjAny;\n  message: string;\n  loading: boolean;\n  login: (arg0: TYPE.login) => void;\n  setModule: (arg0: string) => void;\n  setMessage: (arg0: string) => void;\n  setLoading: (arg0: boolean) => void;\n}) => {\n  // get the language\n  const { text, direction } = props.language;\n  // set local hooks\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  // set message\n  const [errorMessage, setErrorMessage] = useState(props.message);\n\n  // handle data submit\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const login: TYPE.login = { email: email, pass: pass };\n    props.login(login);\n  };\n\n  // handle fields input changes\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { value, name } = event.target;\n    setErrorMessage(\"\");\n    if (name === \"email\") {\n      setEmail(value);\n    } else {\n      setPass(value);\n    }\n  };\n\n  const handleSecondaryButton = () => {\n    props.setModule(\"register\");\n    props.setMessage(\"\");\n  };\n\n  // set the form elements\n  const showElement = props.loading ? (\n    <div className='formLoading'>\n      <Loading />\n    </div>\n  ) : (\n    <div className='formMessage'>{errorMessage}</div>\n  );\n\n  let emailElement = formSection({\n    label: text[\"login.label.email\"],\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    placeholder: text[\"login.prompt.email\"],\n    action: handleInputChange,\n    focus: true\n  });\n\n  let passwordElement = formSection({\n    label: text[\"login.label.password\"],\n    type: \"password\",\n    name: \"pass\",\n    value: pass,\n    placeholder: text[\"login.prompt.password\"],\n    action: handleInputChange,\n    length: 7\n  });\n\n  return (\n    <form\n      className={direction === \"rtl\" ? \"formRight\" : \"formLeft\"}\n      onSubmit={(event: React.FormEvent<HTMLFormElement>) =>\n        handleSubmit(event)\n      }>\n      {emailElement}\n      {passwordElement}\n      {/* message & loading */}\n      {showElement}\n      {/* buttons */}\n      <ButtonsWrapper column direction={direction}>\n        <Button mode='form' submit disabled={props.loading} aria-label='Submit'>\n          <input\n            className={button.primary}\n            type='button'\n            value={text[\"login.button.login\"]}\n            id='submit_button'\n          />\n        </Button>\n        <Button mode='secondaryFlat' action={handleSecondaryButton}>\n          {text[\"login.button.register\"]}\n        </Button>\n      </ButtonsWrapper>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    registerResult: state.register,\n    language: state.language,\n    message: state.message,\n    loading: state.loading\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { login, setModule, setMessage, setLoading }\n)(Login);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { formSection, formSelection } from \"../../components/formSection\";\n\nimport { AppState } from \"../../store\";\nimport * as TYPE from \"../../store/types\";\nimport { register, setModule, setMessage } from \"../../store/users/actions\";\n\nimport Loading from \"../../components/Loading\";\nimport ButtonsWrapper from \"../../layout/ButtonsWrapper\";\nimport Button from \"../../components/Button\";\nimport button from \"../../components/style/Button.module.scss\";\n\n/** Functional component to render Register page content\n * @param {object} props - Object, containing functions & state from Redux\n * @returns {JSX.Element} - Register content\n */\nconst Register = (props: {\n  locations: { value: string; label: string }[];\n  storedLocations?: TYPE.data;\n  language: TYPE.indexedObjAny;\n  message: string;\n  loading: boolean;\n  register: (arg0: TYPE.register) => void;\n  setModule: (arg0: string) => void;\n  setMessage: (arg0: string) => void;\n}) => {\n  // get the language\n  const { text, direction } = props.language;\n  const { locations } = props;\n\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const defaultLocation = locations ? locations[0].value : \"\";\n  const [location, setLocation] = useState(defaultLocation);\n  const [fName, setFname] = useState(\"\");\n  const [lName, setLname] = useState(\"\");\n\n  const [errorMessage, setErrorMessage] = useState(props.message);\n\n  // * form methods\n  // handle data submit\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    props.register({\n      email,\n      pass,\n      location,\n      fName,\n      lName,\n      lang: props.language.short\n    });\n  };\n  // handle fields input changes\n  const handleInputChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setErrorMessage(\"\");\n    const { value, name } = event.target;\n    switch (name) {\n      case \"fName\":\n        setFname(value);\n        break;\n      case \"lName\":\n        setLname(value);\n        break;\n      case \"pass\":\n        setPass(value);\n        break;\n      default:\n        setEmail(value);\n        break;\n    }\n  };\n  // handle location choice\n  const handleSelectChange = (event: any) => {\n    setLocation(event.target.value);\n  };\n\n  // set the form elements\n  const showElement = props.loading ? (\n    <div className='formLoading'>\n      <Loading />\n    </div>\n  ) : (\n    <div className='formMessage'>{errorMessage}</div>\n  );\n\n  let emailElement = formSection({\n    label: text[\"login.label.email\"],\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    placeholder: text[\"login.prompt.email\"],\n    action: handleInputChange\n  });\n\n  let passwordElement = formSection({\n    label: text[\"login.label.password\"],\n    type: \"password\",\n    name: \"pass\",\n    value: pass,\n    placeholder: text[\"login.prompt.password\"],\n    action: handleInputChange,\n    length: 7\n  });\n\n  const locationsElement = formSelection({\n    list: locations,\n    direction,\n    label: text[\"login.label.location\"],\n    action: handleSelectChange\n  });\n\n  const fNameElement = formSection({\n    label: text[\"login.label.fname\"],\n    type: \"text\",\n    name: \"fName\",\n    value: fName,\n    placeholder: text[\"login.prompt.fname\"],\n    action: handleInputChange,\n    length: 2,\n    focus: true\n  });\n  const lNameElement = formSection({\n    label: text[\"login.label.lname\"],\n    type: \"text\",\n    name: \"lName\",\n    value: lName,\n    placeholder: text[\"login.prompt.lname\"],\n    action: handleInputChange,\n    length: 3\n  });\n\n  return (\n    <form\n      className={direction === \"rtl\" ? \"formRight\" : \"formLeft\"}\n      onSubmit={handleSubmit}>\n      {/* visible during registration */}\n      {locationsElement}\n      {fNameElement}\n      {lNameElement}\n      {emailElement}\n      {passwordElement}\n      {/* message & loading */}\n      {showElement}\n      {/* buttons */}\n      <ButtonsWrapper column direction={direction}>\n        <Button mode='form' submit disabled={props.loading} aria-label='Submit'>\n          <input\n            className={button.primary}\n            type='button'\n            value={text[\"login.button.register\"]}\n            id='submit_button'\n          />\n        </Button>\n      </ButtonsWrapper>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    locations: state.locations,\n    registerResult: state.register,\n    language: state.language,\n    message: state.message,\n    loading: state.loading\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { register, setModule, setMessage }\n)(Register);\n","import React from \"react\";\n\nimport Login from \"../features/Login\";\nimport Register from \"../features/Register\";\n\nimport LangSwitch from \"../components/LangSwitch\";\n\nimport Page from \"../layout/Page\";\n\nimport style from \"./style/Login.module.scss\";\nimport { data } from \"../store/types\";\n\n/** Functional component to render login/register page\n * @returns {JSX.Element} - Login page\n */\nconst Enter = (props: { register?: boolean; locations?: data }) => {\n  const register = props.locations ? (\n    <Register storedLocations={props.locations} />\n  ) : (\n    <Register />\n  );\n  const show = props.register ? register : <Login />;\n  return (\n    <Page opposite>\n      {show}\n      <div className={style.langSwitch}>\n        <LangSwitch />\n      </div>\n    </Page>\n  );\n};\n\nexport default Enter;\n","import React from \"react\";\n\nimport style from \"./style/Button.module.scss\";\n\nconst Button = (props: {\n  children?: any;\n  action?: () => void;\n  mode: string;\n  submit?: boolean;\n  disabled?: boolean;\n  label?: string;\n  title?: string;\n}) => {\n  let undefined;\n  const buttonStyle = style[props.mode] || style.trans;\n\n  const handleClick = () => {\n    if (props.action) props.action();\n  };\n\n  return (\n    <button\n      className={buttonStyle}\n      onClick={() => handleClick()}\n      type={props.submit ? \"submit\" : undefined}\n      disabled={props.disabled}\n      aria-label={props.label}>\n      {props.children || props.title}\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"minimal\":\"Button_minimal__298kb\",\"button-template\":\"Button_button-template__1kqd1\",\"primary\":\"Button_primary__2WdqY\",\"secondary\":\"Button_secondary__LLofr\",\"secondaryFlat\":\"Button_secondaryFlat__3tioF\",\"attention\":\"Button_attention__3GdCk\",\"cancel\":\"Button_cancel__a1znz\",\"primarySmall\":\"Button_primarySmall__3f83K\",\"trans\":\"Button_trans__3y-8c\",\"form\":\"Button_form__2hU85\"};","import React from 'react'\n\nimport styleFactory from '../modules/style_factory'\n\nimport styles from \"./style/Label.module.scss\";\n\nconst Label = (props:{direction: string, value: string}) => {\n  const hStyle = styles[styleFactory(\"label\", props.direction)];\n  return <h3 className={hStyle}>{props.value}</h3>;\n}\n\nexport default Label"],"sourceRoot":""}