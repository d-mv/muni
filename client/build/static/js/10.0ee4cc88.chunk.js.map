{"version":3,"sources":["pages/Municipality.tsx"],"names":["connect","state","language","locationData","help","showHelp","props","municipality","_useState","useState","_useState2","Object","_Users_dmitry_Desktop_Projects_muni_app_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setPosts","_useState3","_id","_useState4","post","setPost","useEffect","toggleHelp","handleAction","actions","console","log","header","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Header__WEBPACK_IMPORTED_MODULE_4__","returnTo","main","_components_PostList__WEBPACK_IMPORTED_MODULE_6__","muni","posts","action","newPost","type","edit","complain","_components_ShowPost__WEBPACK_IMPORTED_MODULE_7__","_layout_Page__WEBPACK_IMPORTED_MODULE_5__","_layout_Content__WEBPACK_IMPORTED_MODULE_8__","contentFactory"],"mappings":"sLAuFeA,sBARS,SAACC,GACvB,MAAO,CACLC,SAAUD,EAAMC,SAChBC,aAAcF,EAAME,aACpBC,KAAMH,EAAMG,OAMd,CAAEC,cAFWL,CA/DM,SAACM,GAKhB,IACIC,EAAiBD,EAAMH,aAAvBI,aADJC,EAEyBC,mBAASF,GAA8B,IAFhEG,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEaK,GAFbH,EAAA,GAAAA,EAAA,IAAAI,EAGoBL,mBAAS,CAAEM,IAAK,KAHpCC,EAAAL,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAGGG,EAHHD,EAAA,GAGSE,EAHTF,EAAA,GAKJG,oBAAU,WACJZ,GACFM,EAASN,IAEV,CAACD,EAAMH,aAAcI,IAExB,IAUMa,EAAa,WACjBd,EAAMD,UAAUC,EAAMF,OAElBiB,EAAe,SAACC,GACpBC,QAAQC,IAAIF,IAGVG,EAASC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQzB,KAAMgB,EAAYU,SAAS,iBAE5CC,EAAOL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAUC,MAAI,EAACC,MAAO3B,EAAc4B,OAnBzB,SAACC,GACjBnB,IAASmB,GACXlB,EAAQkB,MAmBQ,KAAhBnB,EAAI,MAENQ,EADyC,cAA5BnB,EAAMH,aAAakC,KAE9BX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQzB,KAAMgB,EAAYU,SAAS,OAAOQ,MAAI,EAACH,OAAQd,IAEvDK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEzB,KAAMgB,EACNU,SAAS,OACTS,UAAQ,EACRJ,OAAQd,IAGZU,EAAOL,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUP,MAAI,EAAChB,KAAMA,KAG9B,OA9DqB,SAACX,GAAD,OAIrBoB,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACGnC,EAAMmB,OACPC,EAAAC,EAAAC,cAACc,EAAA,EAAD,KAAUpC,EAAMyB,OAwDXY,CAAe,CAAElB,SAAQM","file":"static/js/10.0ee4cc88.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../store\";\nimport { data, indexedObjAny } from \"../store/types\";\nimport { showHelp } from \"../store/app/actions\";\n\nimport Header from \"../components/Header\";\n\nimport Page from \"../layout/Page\";\nimport PostList from \"../components/PostList\";\nimport ShowPost from \"../components/ShowPost\";\nimport Content from \"../layout/Content\";\n\nconst contentFactory = (props: {\n  header: React.ClassicElement<any>;\n  main: React.ClassicElement<any>;\n}) => (\n  <Page>\n    {props.header}\n    <Content>{props.main}</Content>\n  </Page>\n);\n\nconst Municipality = (props: {\n  language: data;\n  locationData: indexedObjAny;\n  help: boolean;\n  showHelp: (arg0: boolean) => void;\n}) => {\n  const { municipality } = props.locationData;\n  const [postsLcl, setPosts] = useState(municipality ? municipality : []);\n  const [post, setPost] = useState({ _id: \"\" });\n\n  useEffect(() => {\n    if (municipality) {\n      setPosts(municipality);\n    }\n  }, [props.locationData, municipality]);\n\n  const handleSetPost = (newPost: any) => {\n    if (post !== newPost) {\n      setPost(newPost);\n    }\n  };\n\n  const handleClearPost = () => {\n    setPost({ _id: \"\" });\n  };\n\n  const toggleHelp = () => {\n    props.showHelp(!props.help);\n  };\n  const handleAction = (actions: { mode: string; details: string }) => {\n    console.log(actions);\n  };\n\n  let header = <Header help={toggleHelp} returnTo='municipality' />;\n\n  let main = <PostList muni posts={municipality} action={handleSetPost} />;\n\n  if (post[\"_id\"] !== \"\") {\n    const user = props.locationData.type === \"muni_user\";\n    header = user ? (\n      <Header help={toggleHelp} returnTo='home' edit action={handleAction} />\n    ) : (\n      <Header\n        help={toggleHelp}\n        returnTo='home'\n        complain\n        action={handleAction}\n      />\n    );\n    main = <ShowPost muni post={post} />;\n  }\n\n  return contentFactory({ header, main });\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    language: state.language,\n    locationData: state.locationData,\n    help: state.help\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { showHelp }\n)(Municipality);\n"],"sourceRoot":""}