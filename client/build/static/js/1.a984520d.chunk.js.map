{"version":3,"sources":["components/formSection.tsx","components/Loading.tsx","layout/ButtonsWrapper.tsx","layout/style/Label.module.scss","components/style/Loading.module.scss","features/Login/index.tsx","features/Register/index.tsx","pages/Enter.tsx","components/Button.tsx","components/style/Button.module.scss","layout/Label.tsx"],"names":["__webpack_require__","d","__webpack_exports__","formSection","formSelection","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layout_Label__WEBPACK_IMPORTED_MODULE_1__","_icons__WEBPACK_IMPORTED_MODULE_2__","_modules_style_factory__WEBPACK_IMPORTED_MODULE_3__","props","input","type","a","createElement","autoFocus","focus","name","value","onChange","event","action","placeholder","minLength","length","rows","required","className","direction","label","styleFactory","list","map","location","key","down","_style_Loading_module_scss__WEBPACK_IMPORTED_MODULE_1__","_style_Loading_module_scss__WEBPACK_IMPORTED_MODULE_1___default","Loading","style","loading","_modules_style_factory__WEBPACK_IMPORTED_MODULE_1__","ButtonsWrapper","orientation","column","wrapStyle","children","module","exports","labelRTL","left-swing","right-swing","connect","state","registerResult","register","language","message","typed","login","setModule","setMessage","setLoading","typingData","_props$language","text","_useState","useState","email","_useState2","Object","slicedToArray","setEmail","_useState3","pass","_useState4","setPass","_useState5","_useState6","errorMessage","setErrorMessage","handleInputChange","_event$target","target","showElement","react_default","emailElement","passwordElement","onSubmit","preventDefault","handleSubmit","Button","mode","submit","disabled","aria-label","button","primary","id","locations","secondPass","setSecondPass","defaultLocation","_useState7","_useState8","setLocation","_useState9","fName","_useState10","setFname","_useState11","lName","_useState12","setLname","_useState13","_useState14","passwordSecondElement","locationsElement","fNameElement","lNameElement","lang","short","Enter","features_Register","storedLocations","show","features_Login","Page","opposite","_style_Button_module_scss__WEBPACK_IMPORTED_MODULE_1__","_style_Button_module_scss__WEBPACK_IMPORTED_MODULE_1___default","buttonStyle","trans","onClick","actionMessage","undefined","title","minimal","button-template","secondary","secondaryFlat","attention","cancel","primarySmall","form","_style_Label_module_scss__WEBPACK_IMPORTED_MODULE_2__","_style_Label_module_scss__WEBPACK_IMPORTED_MODULE_2___default","Label","hStyle","styles"],"mappings":"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","file":"static/js/1.a984520d.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Label from \"../layout/Label\";\nimport { down } from \"../icons\";\nimport styleFactory from \"../modules/style_factory\";\n\nexport const formSection = (props: {\n  label: string;\n  type: string;\n  name: string;\n  value: string;\n  placeholder: string;\n  action: (\n    arg0: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => void;\n  length?: number;\n  direction?: string;\n  focus?: boolean;\n}) => {\n  const input =\n    props.type === \"textarea\" ? (\n      <textarea\n        autoFocus={props.focus}\n        name={props.name}\n        value={props.value}\n        onChange={(event: React.ChangeEvent<HTMLTextAreaElement>) =>\n          props.action(event)\n        }\n        placeholder={props.value ? \"\" : props.placeholder}\n        minLength={props.length ? props.length : 0}\n        rows={10}\n        required\n      />\n    ) : (\n      <input\n        autoFocus={props.focus}\n        type={props.type}\n        name={props.name}\n        value={props.value}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          props.action(event)\n        }\n        placeholder={props.value ? \"\" : props.placeholder}\n        minLength={props.length ? props.length : 0}\n        required\n      />\n    );\n  return (\n    <section className='section'>\n      <Label direction={props.direction || \"ltr\"} value={props.label} />\n      {input}\n    </section>\n  );\n};\n\nexport const formSelection = (props: {\n  list: { value: string; label: string }[];\n  direction: string;\n  label: string;\n  action: (arg0: React.FormEvent<Element>) => void;\n  focus?: boolean;\n}) => {\n\n  return (\n    <section\n      className={styleFactory(\"section\", props.direction)}\n      onChange={(event: React.FormEvent<Element>) => props.action(event)}>\n      <Label direction={props.direction || \"ltr\"} value={props.label} />\n      <div className='inline'>\n        <select autoFocus={props.focus}>\n          {props.list.map((location: { value: string; label: string }) => {\n            return (\n              <option key={location.value} value={location.value}>\n                {location.label}\n              </option>\n            );\n          })}\n        </select>\n        {down}\n      </div>\n    </section>\n  );\n};\n","import React from \"react\";\n\nimport style from \"./style/Loading.module.scss\";\n\nconst Loading = () => {\n  return (\n    <div className={style.loading}>\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\n\nimport styleFactory from \"../modules/style_factory\";\n\n/**\n * Component to wrap buttons and arrange then vertically/horizontally/RTL\n *\n * @param {object} props - Children, direction, column/row arrangement\n *\n * @returns {JSX.Element}\n */\nconst ButtonsWrapper = (props: {\n  children: any;\n  direction: string;\n  column?: boolean;\n  row?: boolean;\n}): JSX.Element => {\n  const orientation = props.column ? \"vertical\" : \"horizontal\";\n  const wrapStyle = props.column\n    ? \"vertical\"\n    : styleFactory(orientation, props.direction);\n  return <section className={wrapStyle}>{props.children}</section>;\n};\n\nexport default ButtonsWrapper;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__3w2w6\",\"labelRTL\":\"Label_labelRTL__1NIfD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__2BKoV\",\"left-swing\":\"Loading_left-swing__hRiH5\",\"right-swing\":\"Loading_right-swing__2CuJs\"};","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { formSection } from \"../../components/formSection\";\n\nimport { AppState } from \"../../store\";\nimport * as TYPE from \"../../store/types\";\nimport {\n  login,\n  setModule,\n  setMessage,\n  setLoading,\n  typingData\n} from \"../../store/users/actions\";\n\nimport Loading from \"../../components/Loading\";\nimport ButtonsWrapper from \"../../layout/ButtonsWrapper\";\nimport Button from \"../../components/Button\";\n\nimport button from \"../../components/style/Button.module.scss\";\nimport { type } from \"os\";\n\n/** Functional component to render login page content\n * @param {object} props - Object, containing functions & state from Redux\n * @returns {JSX.Element} - Login content\n */\nconst Login = (props: {\n  registerResult: TYPE.apiResponse;\n  language: TYPE.indexedObjAny;\n  message: string;\n  loading: boolean;\n  typed: TYPE.indexedObj;\n  login: (arg0: TYPE.login) => void;\n  setModule: (arg0: string) => void;\n  setMessage: (arg0: string) => void;\n  setLoading: (arg0: boolean) => void;\n  typingData: (arg0: TYPE.data) => void;\n}) => {\n  // get the language[]\n  const { text, direction } = props.language;\n  // set local hooks\n  const [email, setEmail] = useState(props.typed?props.typed.email:'');\n  const [pass, setPass] = useState(props.typed ? props.typed.pass : \"\");\n  // set message\n  const [errorMessage, setErrorMessage] = useState(props.message);\n  // console.log(props.typed);\n  // handle data submit\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const login: TYPE.login = {\n      email,\n      pass\n    }\n    props.login(login);\n  };\n\n  // handle fields input changes\n  const handleInputChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const { value, name } = event.target;\n    setErrorMessage(\"\");\n    if (name === \"email\") {\n      setEmail(value);\n      // props.typingData({ email: value });\n    } else {\n      setPass(value);\n      // props.typingData({ pass: value });\n    }\n  };\n\n  const handleSecondaryButton = () => {\n    props.setModule(\"register\");\n    props.setMessage(\"\");\n  };\n\n  // set the form elements\n  const showElement = props.loading ? (\n    <div className='formLoading'>\n      <Loading />\n    </div>\n  ) : (\n    <div className='formMessage'>{errorMessage}</div>\n  );\n\n  let emailElement = formSection({\n    label: text[\"login.label.email\"],\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    placeholder: text[\"login.prompt.email\"],\n    action: handleInputChange,\n    focus: !props.loading\n  });\n\n  let passwordElement = formSection({\n    label: text[\"login.label.password\"],\n    type: \"password\",\n    name: \"pass\",\n    value: pass,\n    placeholder: text[\"login.prompt.password\"],\n    action: handleInputChange,\n    length: 7\n  });\n\n  return (\n    <form\n      className={direction === \"rtl\" ? \"formRight\" : \"formLeft\"}\n      onSubmit={(event: React.FormEvent<HTMLFormElement>) =>\n        handleSubmit(event)\n      }>\n      {emailElement}\n      {passwordElement}\n      {/* message & loading */}\n      {showElement}\n      {/* buttons */}\n      <ButtonsWrapper column direction={direction}>\n        <Button mode='form' submit disabled={props.loading} aria-label='Submit'>\n          <input\n            className={button.primary}\n            type='button'\n            value={text[\"login.button.login\"]}\n            id='submit_button'\n          />\n        </Button>\n        <Button mode='secondaryFlat' action={handleSecondaryButton}>\n          {text[\"login.button.register\"]}\n        </Button>\n      </ButtonsWrapper>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    registerResult: state.register,\n    language: state.language,\n    message: state.message,\n    loading: state.loading,\n    typed: state.typed\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { login, setModule, setMessage, setLoading, typingData }\n)(Login);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { formSection, formSelection } from \"../../components/formSection\";\n\nimport { AppState } from \"../../store\";\nimport * as TYPE from \"../../store/types\";\nimport { register, setModule, setMessage } from \"../../store/users/actions\";\n\nimport Loading from \"../../components/Loading\";\nimport ButtonsWrapper from \"../../layout/ButtonsWrapper\";\nimport Button from \"../../components/Button\";\nimport button from \"../../components/style/Button.module.scss\";\n\n/** Functional component to render Register page content\n * @param {object} props - Object, containing functions & state from Redux\n * @returns {JSX.Element} - Register content\n */\nconst Register = (props: {\n  locations: { value: string; label: string }[];\n  storedLocations?: TYPE.data;\n  language: TYPE.indexedObjAny;\n  message: string;\n  loading: boolean;\n  register: (arg0: TYPE.register) => void;\n  setModule: (arg0: string) => void;\n  setMessage: (arg0: string) => void;\n  typed: TYPE.indexedObj;\n}) => {\n  // get the language\n  const { text, direction } = props.language;\n  const { locations } = props;\n\n  const [email, setEmail] = useState(props.typed ? props.typed.email : \"\");\n  const [pass, setPass] = useState(props.typed ? props.typed.pass : \"\");\n  const [secondPass, setSecondPass] = useState(\"\");\n  // if there are locations - use the first one\n  const defaultLocation = locations.length > 0 ? locations[0].value : \"\";\n  const [location, setLocation] = useState(\n    props.typed ? props.typed.location : defaultLocation\n  );\n  const [fName, setFname] = useState(props.typed ? props.typed.fName : \"\");\n  const [lName, setLname] = useState(props.typed ? props.typed.lName : \"\");\n\n  const [errorMessage, setErrorMessage] = useState(props.message);\n\n  // * form methods\n  // handle data submit\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (pass !== secondPass) {\n      setMessage(text[\"register.passwords.dont-match\"]);\n    } else {\n      props.register({\n        email,\n        pass,\n        location,\n        fName,\n        lName,\n        lang: props.language.short\n      });\n    }\n  };\n  // handle fields input changes\n  const handleInputChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setErrorMessage(\"\");\n    const { value, name } = event.target;\n    switch (name) {\n      case \"fName\":\n        setFname(value);\n        break;\n      case \"lName\":\n        setLname(value);\n        break;\n      case \"pass\":\n        setPass(value);\n        break;\n      case \"secondPass\":\n        setSecondPass(value);\n        break;\n      default:\n        setEmail(value);\n        break;\n    }\n  };\n  // handle location choice\n  const handleSelectChange = (event: any) => {\n    setLocation(event.target.value);\n  };\n\n  // set the form elements\n  const showElement = props.loading ? (\n    <div className='formLoading'>\n      <Loading />\n    </div>\n  ) : (\n    <div className='formMessage'>{errorMessage}</div>\n  );\n\n  let emailElement = formSection({\n    label: text[\"login.label.email\"],\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    placeholder: text[\"login.prompt.email\"],\n    action: handleInputChange\n  });\n\n  let passwordElement = formSection({\n    label: text[\"login.label.password\"],\n    type: \"password\",\n    name: \"pass\",\n    value: pass,\n    placeholder: text[\"login.prompt.password\"],\n    action: handleInputChange,\n    length: 7\n  });\n  let passwordSecondElement = formSection({\n    label: text[\"login.label.password.repeat\"],\n    type: \"password\",\n    name: \"secondPass\",\n    value: secondPass,\n    placeholder: text[\"login.prompt.password.repeat\"],\n    action: handleInputChange,\n    length: 7\n  });\n\n  const locationsElement = formSelection({\n    list: locations,\n    direction,\n    label: text[\"login.label.location\"],\n    action: handleSelectChange\n  });\n\n  const fNameElement = formSection({\n    label: text[\"login.label.fname\"],\n    type: \"text\",\n    name: \"fName\",\n    value: fName,\n    placeholder: text[\"login.prompt.fname\"],\n    action: handleInputChange,\n    length: 2,\n    focus: !props.loading\n  });\n  const lNameElement = formSection({\n    label: text[\"login.label.lname\"],\n    type: \"text\",\n    name: \"lName\",\n    value: lName,\n    placeholder: text[\"login.prompt.lname\"],\n    action: handleInputChange,\n    length: 3\n  });\n\n  return (\n    <form\n      className={direction === \"rtl\" ? \"formRight\" : \"formLeft\"}\n      onSubmit={handleSubmit}>\n      {/* visible during registration */}\n      {locationsElement}\n      {fNameElement}\n      {lNameElement}\n      {emailElement}\n      {passwordElement}\n      {passwordSecondElement}\n      {/* message & loading */}\n      {showElement}\n      {/* buttons */}\n      <ButtonsWrapper column direction={direction}>\n        <Button mode='form' submit disabled={props.loading} aria-label='Submit'>\n          <input\n            className={button.primary}\n            type='button'\n            value={text[\"login.button.register\"]}\n            id='submit_button'\n          />\n        </Button>\n      </ButtonsWrapper>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    locations: state.locations,\n    registerResult: state.register,\n    language: state.language,\n    message: state.message,\n    loading: state.loading,\n    typed: state.typed\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { register, setModule, setMessage }\n)(Register);\n","import React from \"react\";\n\nimport Login from \"../features/Login\";\nimport Register from \"../features/Register\";\n\nimport LangSwitch from \"../components/LangSwitch\";\n\nimport Page from \"../layout/Page\";\n\nimport style from \"./style/Login.module.scss\";\nimport { data } from \"../store/types\";\n\n/** Functional component to render login/register page\n * @returns {JSX.Element} - Login page\n */\nconst Enter = (props: { register?: boolean; locations?: data }) => {\n  const register = props.locations ? (\n    <Register storedLocations={props.locations} />\n  ) : (\n    <Register />\n  );\n  const show = props.register ? register : <Login />;\n  return (\n    <Page opposite>\n      {show}\n    </Page>\n  );\n};\n\nexport default Enter;\n","import React from \"react\";\n\nimport style from \"./style/Button.module.scss\";\n\nconst Button = (props: {\n  children?: any;\n  action?: () => void;\n  mode: string;\n  submit?: boolean;\n  disabled?: boolean;\n  label?: string;\n  title?: string;\n  actionMessage?: (arg0: string) => void;\n}) => {\n  let undefined;\n  const buttonStyle = style[props.mode] || style.trans;\n\n  const handleClick = () => {\n    if (props.action) props.action();\n    if (props.actionMessage) props.actionMessage(props.mode);\n  };\n\n  return (\n    <button\n      className={buttonStyle}\n      onClick={() => handleClick()}\n      type={props.submit ? \"submit\" : undefined}\n      disabled={props.disabled}\n      aria-label={props.label}>\n      {props.children || props.title}\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"minimal\":\"Button_minimal__298kb\",\"button-template\":\"Button_button-template__1kqd1\",\"primary\":\"Button_primary__2WdqY\",\"secondary\":\"Button_secondary__LLofr\",\"secondaryFlat\":\"Button_secondaryFlat__3tioF\",\"attention\":\"Button_attention__3GdCk\",\"cancel\":\"Button_cancel__a1znz\",\"primarySmall\":\"Button_primarySmall__3f83K\",\"trans\":\"Button_trans__3y-8c\",\"form\":\"Button_form__2hU85\"};","import React from 'react'\n\nimport styleFactory from '../modules/style_factory'\n\nimport styles from \"./style/Label.module.scss\";\n\nconst Label = (props:{direction: string, value: string}) => {\n  const hStyle = styles[styleFactory(\"label\", props.direction)];\n  return <h3 className={hStyle}>{props.value}</h3>;\n}\n\nexport default Label"],"sourceRoot":""}