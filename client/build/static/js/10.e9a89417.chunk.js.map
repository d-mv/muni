{"version":3,"sources":["pages/style/HomeDesktop.module.scss","modules/locations_list.ts","features/Register/index.tsx","pages/Enter.tsx"],"names":["module","exports","desktop","header","content","graphs","posts","post","chartBlock","chartTitle","chart","locationsList","locations","language","arguments","length","undefined","filter","el","Object","keys","name","includes","unsortedResult","map","_id","push","result","sort","value","label","connect","state","message","loading","typed","register","setModule","setMessage","setLoading","typingData","props","text","direction","short","location","fName","lName","pass","secondPass","email","_useState","useState","_useState2","slicedToArray","disabled","setDisabled","useEffect","handleInputChange","event","target","defineProperty","showElement","react_default","a","createElement","className","Loading","emailElement","formSection","type","placeholder","action","passwordElement","styles","regular","notMatching","border","locationsElement","formSelection","list","fNameElement","focus","lNameElement","onSubmit","preventDefault","settings","Label","onChange","minLength","required","style","ButtonsWrapper","column","Button","mode","submit","aria-label","button","primary","id","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_features_Login__WEBPACK_IMPORTED_MODULE_1__","_features_Register__WEBPACK_IMPORTED_MODULE_2__","_layout_Page__WEBPACK_IMPORTED_MODULE_3__","_style_HomeDesktop_module_scss__WEBPACK_IMPORTED_MODULE_4__","_style_HomeDesktop_module_scss__WEBPACK_IMPORTED_MODULE_4___default","React","lazy","Promise","resolve","then","bind","Enter","fallback","show","pageStyle","opposite"],"mappings":"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","file":"static/js/10.e9a89417.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"desktop\":\"HomeDesktop_desktop__1RytT\",\"header\":\"HomeDesktop_header__1iIcG\",\"content\":\"HomeDesktop_content__3mAI3\",\"graphs\":\"HomeDesktop_graphs__2fE1Q\",\"posts\":\"HomeDesktop_posts__xtMiw\",\"post\":\"HomeDesktop_post__1SodZ\",\"chartBlock\":\"HomeDesktop_chartBlock__3d-Ds\",\"chartTitle\":\"HomeDesktop_chartTitle__2W4PA\",\"chart\":\"HomeDesktop_chart__2ER1n\"};","import { indexedObjAny } from \"../store/types\";\n\n/**\n * Function to process locations object to provide array of location names\n * @function locations\n * @param {Array} locations\n * @param {string} language\n * @returns {Object} - in the form of {location:id}\n */\nexport const locationsList = (\n  locations: any,\n  language: string = \"\"\n): Array<any> => {\n  // return empty array if empty params supplied\n  if (locations.length === 0 || language === \"\") return [];\n  // check if names contain language requested\n  const check = locations.filter((el: any) =>\n    Object.keys(el.name).includes(language)\n  );\n  // return empty array if not\n  if (check.length !== locations.length) return [];\n  // process the names as per language request\n  const unsortedResult: indexedObjAny = {};\n  const locationsList: Array<string> = [];\n  locations.map((el: any) => {\n    // add to unsorted list\n    unsortedResult[el.name[language]] = el._id;\n    // add to array of locations to be sorted\n    locationsList.push(el.name[language]);\n    return null;\n  });\n  // sort locations and push appropriate pair to the result\n  const result: Array<indexedObjAny> = [];\n  locationsList.sort().map((el: any) => {\n    // add a pair to the resulting array\n    result.push({ value: unsortedResult[el], label: el });\n    return null;\n  });\n  return result;\n};\n\nexport default locationsList;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { formSection, formSelection } from \"../../components/formSection\";\n\nimport { AppState } from \"../../store\";\nimport * as TYPE from \"../../store/types\";\nimport {\n  register,\n  setModule,\n  setMessage,\n  setLoading,\n  typingData\n} from \"../../store/users/actions\";\n\nimport Loading from \"../../components/Loading\";\nimport ButtonsWrapper from \"../../layout/ButtonsWrapper\";\nimport Button from \"../../components/Button\";\nimport button from \"../../components/style/Button.module.scss\";\nimport Label from \"../../layout/Label\";\nimport locationsList from \"../../modules/locations_list\";\nimport { LocationState } from \"../../models\";\nimport { indexedObjAny } from \"../../store/types\";\n\nconst Register = (props: {\n  locations: LocationState;\n  // storedLocations?: TYPE.data;\n  language: indexedObjAny;\n  message: string;\n  loading: boolean;\n  register: (arg0: TYPE.registerType) => void;\n  setModule: (arg0: string) => void;\n  setMessage: (arg0: string) => void;\n  typed: TYPE.indexedObj;\n  setLoading: (arg0: boolean) => void;\n  typingData: (arg0: { [index: string]: any }) => void;\n}) => {\n  // get the language\n  const { locations, language, message, loading, typed } = props;\n  const { text, direction, short } = language;\n  const { location, fName, lName, pass, secondPass, email } = typed;\n\n  const [disabled, setDisabled] = useState(true);\n\n  useEffect(() => {\n    props.typingData({ location: locations[0]._id });\n  }, []);\n\n  useEffect(() => {\n    if (!fName && !lName && !location && !email && !pass && !secondPass) {\n      setDisabled(true);\n    } else if (\n      fName &&\n      lName &&\n      location &&\n      email &&\n      pass &&\n      secondPass &&\n      pass === secondPass\n    ) {\n      setDisabled(false);\n    }\n  }, [fName, lName, location, email, pass, secondPass]);\n\n  // * form methods\n  // handle data submit\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // only if not loading & not disabled\n    if (!loading && !disabled) {\n      if (pass !== secondPass) {\n        setMessage(text[\"register.passwords.dont-match\"]);\n      } else {\n        // export interface UserType {\n        //   _id: ObjectID;\n        //   location: ObjectID;\n        //   fName: string;\n        //   lName: string;\n        //   email: string;\n        //   pass: string;\n        //   type: UserKind;\n        //   tokens: string[];\n        //   settings: UserSettings;\n        //   status: boolean;\n        //   createdAt: Date;\n        // }\n\n        // props.setLoading(true);\n        props.register({\n          email,\n          pass,\n          location,\n          fName,\n          lName,\n          settings: {\n            language: props.language.short\n          }\n        });\n      }\n    }\n  };\n\n  // handle fields input changes\n  const handleInputChange = (event: any) => {\n    if (message) {\n      props.setMessage(\"\");\n    }\n    const { value } = event.target;\n    let name = event.target.name;\n    if (!name) name = \"location\";\n    props.typingData({ [name]: value });\n  };\n\n  // set the form elements\n  const showElement = loading ? (\n    <div className='formLoading'>\n      <Loading />\n    </div>\n  ) : (\n    <div className='formMessage'>{message}</div>\n  );\n\n  let emailElement = formSection({\n    label: text[\"login.label.email\"],\n    type: \"email\",\n    name: \"email\",\n    value: typed[email],\n    placeholder: text[\"login.prompt.email\"],\n    action: handleInputChange\n  });\n\n  let passwordElement = formSection({\n    label: text[\"login.label.password\"],\n    type: \"password\",\n    name: \"pass\",\n    value: typed[pass],\n    placeholder: text[\"login.prompt.password\"],\n    action: handleInputChange,\n    length: 7\n  });\n\n  const styles = {\n    regular: {},\n    notMatching: {\n      border: \".1rem solid var(--colorAttention)\"\n    }\n  };\n\n  const locationsElement = formSelection({\n    list: locationsList(locations, short),\n    value: typed[location],\n    direction,\n    label: text[\"login.label.location\"],\n    action: handleInputChange\n  });\n\n  const fNameElement = formSection({\n    label: text[\"login.label.fname\"],\n    type: \"text\",\n    name: \"fName\",\n    value: typed[fName],\n    placeholder: text[\"login.prompt.fname\"],\n    action: handleInputChange,\n    length: 2,\n    focus: !props.loading\n  });\n  const lNameElement = formSection({\n    label: text[\"login.label.lname\"],\n    type: \"text\",\n    name: \"lName\",\n    value: typed[lName],\n    placeholder: text[\"login.prompt.lname\"],\n    action: handleInputChange,\n    length: 3\n  });\n  return (\n    <form\n      className={direction === \"rtl\" ? \"formRight\" : \"formLeft\"}\n      onSubmit={handleSubmit}>\n      {/* visible during registration */}\n      {locationsElement}\n      {fNameElement}\n      {lNameElement}\n      {emailElement}\n      {passwordElement}\n      <section className='section'>\n        <Label\n          direction={direction}\n          value={text[\"login.label.password.repeat\"]}\n        />\n        <input\n          type='password'\n          name='secondPass'\n          value={typed[secondPass]}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            handleInputChange(event)\n          }\n          placeholder={text[\"login.prompt.password.repeat\"]}\n          minLength={7}\n          required\n          style={pass === secondPass ? styles.regular : styles.notMatching}\n        />\n      </section>\n      {/* message & loading */}\n      {showElement}\n      {/* buttons */}\n      <ButtonsWrapper column direction={direction}>\n        <Button\n          mode='form'\n          submit\n          disabled={disabled || loading}\n          aria-label='Submit'>\n          <input\n            className={disabled ? button.disabled : button.primary}\n            type='button'\n            value={text[\"login.button.register\"]}\n            id='submit_button'\n          />\n        </Button>\n      </ButtonsWrapper>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    locations: state.locations,\n    language: state.language,\n    message: state.message,\n    loading: state.loading,\n    typed: state.typed\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { register, setModule, setMessage, setLoading, typingData }\n)(Register);\n","import React, { Suspense } from \"react\";\n\nimport Login from \"../features/Login\";\nimport Register from \"../features/Register\";\n\nimport LangSwitch from \"../components/LangSwitch\";\n\nimport Page from \"../layout/Page\";\n\nimport style from \"./style/Login.module.scss\";\nimport pageStyle from \"./style/HomeDesktop.module.scss\";\nimport { data } from \"../store/types\";\n\nconst regPage = React.lazy(() => import(\"../features/Register\"));\n\n/** Functional component to render login/register page\n * @returns {JSX.Element} - Login page\n */\nconst Enter = (props: {\n  register?: boolean;\n  locations?: data;\n  desktop?: boolean;\n}) => {\n  const register = (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Register />\n    </Suspense>\n  );\n  const show = props.register ? register : <Login />;\n  const content = props.desktop ? (\n    <div className={pageStyle.desktop}>\n      <Login desktop />\n    </div>\n  ) : (\n    <Page opposite>{show}</Page>\n  );\n  return content;\n};\n\nexport default Enter;\n"],"sourceRoot":""}