{"version":3,"sources":["modules/locations_list.ts","store/users/actions.ts","store/defaults.ts","modules/style_factory.ts","style/_colors.ts","components/formSection.tsx","components/style/Button.module.scss","pages/style/Loading.module.scss","components/Button.tsx","icons/index.tsx","layout/Page.tsx","layout/Utils.tsx","components/Loading.tsx","layout/ButtonsWrapper.tsx","features/Navigation/components/styles/NavButton.module.scss","layout/Label.tsx","pages/style/Welcome.module.scss","components/LangSwitch.tsx","features/New/components/styles/NewButton.module.scss","layout/style/Label.module.scss","components/style/Loading.module.scss","pages/style/Login.module.scss","features/Login/index.tsx","features/Register/index.tsx","pages/Enter.tsx","features/Navigation/components/NavIcons.tsx","features/New/components/NewButton.tsx","features/Navigation/components/NavButton.tsx","features/Navigation/components/EntranceButton.tsx","features/Navigation/index.tsx","icons/Welcome.tsx","pages/Loading.tsx","pages/Welcome.tsx","App.tsx","serviceWorker.ts","store/index.ts","store/users/reducers.ts","store/post/reducers.ts","store/app/reducers.ts","index.tsx"],"names":["locationsList","locations","arguments","length","undefined","language","filter","el","Object","keys","name","includes","unsortedResult","map","_id","push","result","sort","value","label","importedData","data","setToken","token","type","setLoading","loading","checkToken","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","method","url","headers","then","response","payload","console","log","status","objectSpread","code","module","catch","error","stop","_x","apply","this","setModule","_ref2","_callee2","_context2","mode","_x2","login","props","concat","pass","email","_ref3","_callee3","_context3","apiState","message","posts","lang","toString","_x3","logOff","_ref4","_callee4","_context4","_x4","register","location","fName","lName","_ref5","_callee5","_context5","_x5","setMessage","fetchLocations","_ref6","_callee6","_context6","_x6","setPosts","setLanguage","user","_ref7","_callee7","_context7","_x7","vote","id","_ref8","_callee8","_context8","_x8","fetchData","_ref9","_callee9","_context9","_x9","__webpack_require__","d","__webpack_exports__","styleFactory","style","direction","colorsArray","primary","secondary","white","dark","grey","attention","formSection","formSelection","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layout_Label__WEBPACK_IMPORTED_MODULE_1__","_icons__WEBPACK_IMPORTED_MODULE_2__","_modules_style_factory__WEBPACK_IMPORTED_MODULE_3__","input","createElement","autoFocus","focus","onChange","event","action","placeholder","minLength","rows","required","className","list","key","down","exports","minimal","button-template","secondaryFlat","cancel","primarySmall","trans","form","wrapper","logo","loader","outer","middle","inner","spin","_style_Button_module_scss__WEBPACK_IMPORTED_MODULE_1__","_style_Button_module_scss__WEBPACK_IMPORTED_MODULE_1___default","Button","buttonStyle","onClick","submit","disabled","aria-label","children","title","votersSecondary","goBack","iconCreateNew","IconLink","DownArrow","IconEdit","IconDelete","_style_colors__WEBPACK_IMPORTED_MODULE_1__","width","height","viewBox","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","fill","x","y","color","xmlns","transform","Page","pageStyle","opposite","welcome","Spacer","Zero","Separator","styleZero","display","styleSeparator","borderLeft","borderRight","marginRight","marginLeft","size","units","spacerFactory","_style_Loading_module_scss__WEBPACK_IMPORTED_MODULE_1__","_style_Loading_module_scss__WEBPACK_IMPORTED_MODULE_1___default","Loading","_modules_style_factory__WEBPACK_IMPORTED_MODULE_1__","ButtonsWrapper","orientation","column","wrapStyle","navButton","navButtonEmpty","welcomeButton","return","_style_Label_module_scss__WEBPACK_IMPORTED_MODULE_2__","_style_Label_module_scss__WEBPACK_IMPORTED_MODULE_2___default","Label","hStyle","styles","pageContent","divider","react_redux__WEBPACK_IMPORTED_MODULE_1__","_store_users_actions__WEBPACK_IMPORTED_MODULE_2__","connect","state","locationData","short","e","target","new","labelRTL","left-swing","right-swing","langSwitch","registerResult","_props$language","text","_useState","useState","_useState2","slicedToArray","setEmail","_useState3","_useState4","setPass","_useState5","_useState6","errorMessage","setErrorMessage","handleInputChange","_event$target","showElement","react_default","emailElement","passwordElement","onSubmit","preventDefault","handleSubmit","button","setLocation","_useState7","_useState8","setFname","_useState9","_useState10","setLname","_useState11","_useState12","locationsElement","fNameElement","lNameElement","Enter","show","Register","Login","LangSwitch","r","municipalityRegular","municipalityActive","homeRegular","homeActive","newRegular","newActive","profileRegular","profileActive","mineRegular","mineActive","stroke","strokeWidth","strokeLinecap","NewButton","component","testId","buttonFactory","data-testid","actionHandler","icon","iconName","require","iconFactory","modeDetails","split","EntranceButton","components_EntranceButton","components_NavButton","Utils","active","VectorTitle","VectorSubTitle","VectorLogo","cx","cy","Welcome_VectorLogo","Welcome_VectorTitle","Welcome_VectorSubTitle","loginResult","help","check","checkTokenResult","withCookies","cookies","defaults","useEffect","set","get","handleNewButtonClick","AppComponent","LazyComponent","react","fallback","pages_Loading","componentFactory","CFProps","Help","React","lazy","bind","nav","features_Navigation","newButton","components_NewButton","pages_Welcome","Confirmation","Municipality","Promise","all","New","Profile","Home","Mine","resolve","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","self","process","REACT_APP_SELF","baseURL","rootReducer","combineReducers","auth","submitPost","step","update","store","middlewares","thunk","logger","middleWareEnhancer","applyMiddleware","initialState","en","createStore","configureStore","ReactDOM","render","es6","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.40057504.chunk.js","sourcesContent":["import { indexedObj } from \"../store/types\";\n\n/**\n * Function to process locations object to provide array of location names\n * @function locations\n * @param {Array} locations\n * @param {string} language\n * @returns {Object} - in the form of {location:id}\n */\nexport const locationsList = (\n  locations: Array<any> = [],\n  language: string = \"\"\n): Array<any> => {\n  // return empty array if empty params supplied\n  if (locations.length === 0 || language === \"\") return [];\n  // check if names contain language requested\n  const check = locations.filter(el => Object.keys(el.name).includes(language));\n  // return empty array if not\n  if (check.length !== locations.length) return [];\n\n  // process the names as per language request\n  const unsortedResult: indexedObj = {};\n  const locationsList: Array<string> = [];\n  locations.map(el => {\n    // add to unsorted list\n    unsortedResult[el.name[language]] = el._id;\n    // add to array of locations to be sorted\n    locationsList.push(el.name[language]);\n    return null;\n  });\n  // sort locations and push appropriate pair to the result\n  const result: Array<indexedObj> = [];\n  locationsList.sort().map((el: any) => {\n    // add a pair to the resulting array\n    result.push({ value: unsortedResult[el], label: el });\n    return null;\n  });\n  return result;\n};\n\nexport default locationsList;\n","import { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { Action } from \"./types\";\nimport * as TYPE from \"../types\";\nimport locationsList from \"../../modules/locations_list\";\n\nimport { AnyAction } from \"redux\";\nimport { apiState } from \"../defaults\";\n\nimport data from \"../../data/translation.json\";\n\nconst importedData: TYPE.indexedObjAny = data;\n\n/**\n * Action function to set the token in the state\n * @function setToken\n * @param {string} token\n * @return {Object} - Returns object of action type and token\n */\nexport const setToken = (token: string): Action => {\n  return { type: \"SET\", token };\n};\n/**\n * Action function to set the token in the state\n * @function setLoading\n * @param {boolean} loading\n * @return {Object} - Returns object of action type and token\n */\nexport const setLoading = (loading: boolean = false): Action => {\n  return { type: \"SET_LOADING\", loading };\n};\n\nexport const changeMode = (mode: string): Action => {\n  return { type: \"CHANGE_MODE\", mode };\n};\n\n/**\n * Action function to verify the token with API\n * @function checkToken\n * @param {string} token\n * @return {Promise} - Returns promise resolved with the help of Thunk\n */\nexport const checkToken = (\n  token: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  const url = \"/user/check\";\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    axios({\n      method: \"get\",\n      url,\n      headers: { token }\n    })\n      .then(response => {\n        const payload = response.data;\n        console.log(response.data);\n        console.log(\"checktoken - payload.status: \" + payload.status);\n        if (payload.status) {\n          dispatch({ type: \"SET\", token });\n          dispatch({ type: \"SET_AUTH\", status: true });\n          dispatch({\n            type: \"LOGIN\",\n            payload: { ...response.data, code: response.status }\n          });\n        } else {\n          dispatch({ type: \"SET\", token: \"clear\" });\n          dispatch({\n            type: \"SET_LOCATION_DATA\",\n            data: \"\"\n          });\n          dispatch({ type: \"SET_AUTH\", status: false });\n          dispatch({ type: \"SET_MODULE\", module: \"login\" });\n        }\n        // if negative - return the data\n        dispatch({\n          type: \"CHECK\",\n          payload: { ...response.data, code: response.status }\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n};\n\nexport const setAuth = (status: boolean): Action => {\n  return { type: \"SET_AUTH\", status };\n};\n\nexport const setModule = (\n  module: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    if (module === \"login\") {\n      dispatch({ type: \"CHANGE_MODE\", mode: \"login\" });\n    }\n    dispatch({ type: \"SET_MODULE\", module });\n  };\n};\n\n/**\n * Action function to login with API\n * @function login\n * @param {string} email - Email\n * @param {string} pass - Password\n * @return {Promise} - Returns promise resolved with the help of Thunk\n */\nexport const login = (\n  props: TYPE.login\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  const url = `/user/login?pass=${props.pass}&email=${props.email}`;\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    // clear state\n    dispatch({\n      type: \"LOGIN\",\n      payload: apiState\n    });\n    dispatch({\n      type: \"SET_MESSAGE\",\n      message: \"\"\n    });\n    dispatch({\n      type: \"SET_LOADING\",\n      loading: true\n    });\n    // proceed with request\n    axios({\n      method: \"get\",\n      url\n      // withCredentials: true\n    })\n      .then(response => {\n        // if successful change page\n        const module = \"home\";\n        const token = response.data.token;\n\n        console.log(response);\n        console.log(response.data);\n\n        dispatch({ type: \"SET_MODULE\", module });\n        dispatch({ type: \"SET_AUTH\", status: true });\n        dispatch({ type: \"SET_LOCATION_DATA\", data: response.data.payload });\n        dispatch({\n          type: \"SET_POSTS\",\n          posts: response.data.payload.posts\n        });\n\n        // dispatch({\n        //   type: \"SET_MESSAGE\",\n        //   message: response.data.message || response.data.payload.message\n        // });\n        dispatch({\n          type: \"SET_LANGUAGE\",\n          data: importedData.language[response.data.payload.lang]\n        });\n        dispatch({ type: \"SET\", token: response.data.token });\n        dispatch({\n          type: \"LOGIN\",\n          payload: { ...response.data, code: response.status }\n        });\n        dispatch({\n          type: \"SET_LOADING\",\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n        const payload = error.response ? error.response.data : error.toString();\n        if (payload.code === 404) {\n          dispatch({\n            type: \"SET_LOADING\",\n            loading: false\n          });\n          dispatch({\n            type: \"CHANGE_MODE\",\n            mode: \"register\"\n          });\n        } else {\n          dispatch({\n            type: \"SET_MESSAGE\",\n            message: payload.message || \"\"\n          });\n        }\n        dispatch({\n          type: \"LOGIN\",\n          payload\n        });\n      });\n  };\n};\n\nexport const logOff = (): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    dispatch({ type: \"SET_AUTH\", status: false });\n    dispatch({ type: \"SET_MODULE\", module: \"welcome\" });\n    dispatch({ type: \"SET\", token: \"clear\" });\n    dispatch({\n      type: \"SET_MESSAGE\",\n      message: \"\"\n    });\n    dispatch({\n      type: \"LOGIN\",\n      payload: { ...apiState }\n    });\n  };\n};\n\n/**\n * Action function to register with API\n * @function register\n * @param {string} location - Location ID\n * @param {string} fName - User's first name\n * @param {string} lName - User's last name\n * @param {string} email - User's email\n * @param {string} pass - User's password\n * @param {string} avatar - Avatar's URL\n * @return {Promise} - Returns promise resolved with the help of Thunk\n */\nexport const register = (\n  props: TYPE.register\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  console.log(props);\n  const url = `/user/create?email=${props.email}&location=${props.location}&pass=${props.pass}&fName=${props.fName}&lName=${props.lName}&lang=${props.lang}`;\n  console.log(url);\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    // clear state\n    dispatch({\n      type: \"REGISTER\",\n      payload: apiState\n    });\n    dispatch({\n      type: \"SET_MESSAGE\",\n      message: \"\"\n    });\n    dispatch({\n      type: \"SET_LOADING\",\n      loading: true\n    });\n    // proceed with request\n    axios({\n      method: \"post\",\n      url\n      // withCredentials: true\n    })\n      .then(response => {\n        console.log(response.data);\n        if (!response.data.status) {\n          dispatch({\n            type: \"SET_MESSAGE\",\n            message: response.data.message\n          });\n          dispatch({\n            type: \"SET_LOADING\",\n            loading: false\n          });\n        } else {\n          dispatch({\n            type: \"SET_MESSAGE\",\n            message: response.data.payload.message\n          });\n          dispatch({ type: \"SET_MODULE\", module: \"confirmation\" });\n        }\n        dispatch({\n          type: \"SET_LOADING\",\n          loading: false\n        });\n        dispatch({\n          type: \"REGISTER\",\n          payload: { ...response.data, code: response.status }\n        });\n      })\n      .catch(error => {\n        const payload = error.response ? error.response.data : error.toString();\n        dispatch({\n          type: \"SET_MESSAGE\",\n          message: payload.toString()\n        });\n        dispatch({\n          type: \"REGISTER\",\n          payload\n        });\n        dispatch({\n          type: \"SET_LOADING\",\n          loading: false\n        });\n      });\n  };\n};\n\nexport const setMessage = (message: string) => {\n  return {\n    type: \"SET_MESSAGE\",\n    message: message\n  };\n};\n\n/**\n * Action function to fetch list of locations from API\n * @function fetchLocations\n * @return {Promise} - Returns promise resolved with the help of Thunk\n */\nexport const fetchLocations = (): ThunkAction<\n  Promise<void>,\n  {},\n  {},\n  AnyAction\n> => {\n  const url = \"/location/list\";\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    axios({\n      method: \"get\",\n      url\n    })\n      .then(response => {\n        // locations\n        let locations: Array<any>[];\n        if (response.data.status && response.data.payload) {\n          locations = locationsList(response.data.payload, \"en\");\n          dispatch({\n            type: \"FETCH_LOCATIONS\",\n            payload: { payload: locations, code: response.status }\n          });\n        } else {\n          dispatch({\n            type: \"FETCH_LOCATIONS\",\n            payload: { code: response.status }\n          });\n        }\n      })\n      .catch(error => {\n        const payload = error.response ? error.response.data : error.toString();\n        dispatch({\n          type: \"FETCH_LOCATIONS\",\n          payload\n        });\n      });\n  };\n};\n\n/**\n * Action function to load built-in data\n * @function loadData\n * @param {}\n * @returns {object}\n */\nexport const loadData = (): Action => {\n  return { type: \"LOAD_DATA\", data };\n};\n\n/**\n * Action function to set preferred language\n * @function setLanguage\n * @param {string} lang - Language to choose\n * @returns {object}\n */\n// export const setLanguage = (lang: string): Action => {\n//   return { type: \"SET_LANGUAGE\", data: importedData.language[lang] };\n// };\n\n/** Action function to store location data\n * @function setLocationData\n * @param {object} data - Location data\n * @returns {object}\n */\nexport const setLocationData = (data: TYPE.data): Action => {\n  return { type: \"SET_LOCATION_DATA\", data };\n};\n\nexport const setPosts = (posts: any): Action => {\n  return { type: \"SET_POSTS\", posts };\n};\n\nexport const setLanguage = (\n  lang: string,\n  user: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    // clear state\n    dispatch({\n      type: \"SET_LANGUAGE\",\n      data: importedData.language[lang]\n    });\n    if (user) {\n      // proceed with request\n      const url = `/user/${user}/update?language=${lang}`;\n      axios({\n        method: \"post\",\n        url\n        // withCredentials: true\n      })\n        .then(response => {})\n        .catch(error => {\n          const payload = error.response\n            ? error.response.data\n            : error.toString();\n        });\n    }\n  };\n};\n\nexport const vote = (\n  id: string,\n  user: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  console.log(\"voting\");\n  const url = `/post/${id}/vote?user=${user}`;\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    // proceed with request\n    axios({\n      method: \"patch\",\n      url\n      // withCredentials: true\n    })\n      .then((response: AxiosResponse<any>) => {\n        const payload = response.data;\n        dispatch({\n          type: \"VOTE\",\n          payload: payload\n        });\n      })\n      .catch(error => {\n        // const payload = error.response ? error.response.data : error.toString();\n        dispatch({\n          type: \"VOTE\",\n          payload: error.response\n        });\n      });\n  };\n};\n\nexport const fetchData = (\n  token: string\n): ThunkAction<Promise<void>, {}, {}, AnyAction> => {\n  const url = \"/user/data\";\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    // proceed with request\n\n    axios({\n      method: \"get\",\n      url,\n      headers: { token }\n    })\n      .then((response: AxiosResponse<any>) => {\n        const payload = response.data;\n        dispatch({ type: \"SET_LOCATION_DATA\", data: payload.payload });\n        dispatch({ type: \"SET_POSTS\", posts: payload.payload.posts });\n        dispatch({\n          type: \"SET_LANGUAGE\",\n          data: importedData.language[payload.payload.lang]\n        });\n        // dispatch({\n        //   type: \"SET_LOCATION_DATA\",\n        //   // type: \"FETCH_DATA\",\n        //   payload: payload\n        // });\n      })\n      .catch(error => {\n        dispatch({\n          type: \"SET_LOCATION_DATA\",\n          // type: \"FETCH_DATA\",\n          payload: error.response\n        });\n      });\n  };\n};\n","export const apiState ={\n  status: false,\n  message: \"\",\n  code: 100\n}\n","\n/**\n * Function to convert style nme to right-to-left variant\n * @param {string} style - Original style name\n * @param {string} direction - ltr/rtl\n */\nconst styleFactory = (style: string, direction: string) => {\n  if (!style || !direction || typeof style !== \"string\") {\n    return \"\";\n  } else if (typeof direction !== \"string\" || direction !== \"rtl\") {\n    return style;\n  } else {\n    return `${style}RTL`;\n  }\n};\n\nexport default styleFactory;\n","/**\n * Defining the colors, required for inline style\n */\nexport const colorsArray: { [index: string]: string } = {\n  primary: \"#478FDF\",\n  secondary: \"#03AD24\",\n  white: \"#fff\",\n  dark: \"#444\",\n  grey: \"#777\",\n  attention: \"#FF072E\"\n};\n","import React from \"react\";\n\nimport Label from \"../layout/Label\";\nimport { indexedObj, data } from \"../store/types\";\nimport { down } from \"../icons\";\nimport styleFactory from \"../modules/style_factory\";\n\nexport const formSection = (props: {\n  label: string;\n  type: string;\n  name: string;\n  value: string;\n  placeholder: string;\n  action: (\n    arg0: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => void;\n  length?: number;\n  direction?: string;\n  focus?: boolean;\n}) => {\n  const input =\n    props.type === \"textarea\" ? (\n      <textarea\n        autoFocus={props.focus}\n        name={props.name}\n        value={props.value}\n        onChange={(event: React.ChangeEvent<HTMLTextAreaElement>) =>\n          props.action(event)\n        }\n        placeholder={props.value ? \"\" : props.placeholder}\n        minLength={props.length ? props.length : 0}\n        rows={10}\n        required\n      />\n    ) : (\n      <input\n        autoFocus={props.focus}\n        type={props.type}\n        name={props.name}\n        value={props.value}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          props.action(event)\n        }\n        placeholder={props.value ? \"\" : props.placeholder}\n        minLength={props.length ? props.length : 0}\n        required\n      />\n    );\n  return (\n    <section className='section'>\n      <Label direction={props.direction || \"ltr\"} value={props.label} />\n      {input}\n    </section>\n  );\n};\n\nexport const formSelection = (props: {\n  list: Array<indexedObj>;\n  direction: string;\n  label: string;\n  action: (arg0: React.FormEvent<Element>) => void;\n  focus?: boolean;\n}) => {\n  return (\n    <section\n      className={styleFactory(\"section\", props.direction)}\n      onChange={(event: React.FormEvent<Element>) => props.action(event)}>\n      <Label direction={props.direction || \"ltr\"} value={props.label} />\n      <div className='inline'>\n        <select autoFocus={props.focus}>\n          {props.list.map((location: data) => {\n            return (\n              <option key={location.value} value={location.value}>\n                {location.label}\n              </option>\n            );\n          })}\n        </select>\n        {down}\n      </div>\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"minimal\":\"Button_minimal__298kb\",\"button-template\":\"Button_button-template__1kqd1\",\"primary\":\"Button_primary__2WdqY\",\"secondary\":\"Button_secondary__LLofr\",\"secondaryFlat\":\"Button_secondaryFlat__3tioF\",\"attention\":\"Button_attention__3GdCk\",\"cancel\":\"Button_cancel__a1znz\",\"primarySmall\":\"Button_primarySmall__3f83K\",\"trans\":\"Button_trans__3y-8c\",\"form\":\"Button_form__2hU85\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loading_wrapper__kdeVy\",\"logo\":\"Loading_logo__1iwfn\",\"loader\":\"Loading_loader__25JmU\",\"outer\":\"Loading_outer__2txvq\",\"middle\":\"Loading_middle__FZ4gI\",\"inner\":\"Loading_inner__11opT\",\"spin\":\"Loading_spin__3iari\"};","import React from \"react\";\n\nimport style from \"./style/Button.module.scss\";\n\nconst Button = (props: {\n  children?: any;\n  action?: () => void;\n  mode: string;\n  submit?: boolean;\n  disabled?: boolean;\n  label?: string;\n  title?: string;\n}) => {\n  let undefined;\n  const buttonStyle = style[props.mode] || style.trans;\n\n  const handleClick = () => {\n    if (props.action) props.action();\n  };\n\n  return (\n    <button\n      className={buttonStyle}\n      onClick={() => handleClick()}\n      type={props.submit ? \"submit\" : undefined}\n      disabled={props.disabled}\n      aria-label={props.label}>\n      {props.children || props.title}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport { colorsArray } from \"../style/_colors\";\n\nexport const votersSecondary = (\n  <svg\n    width='100%'\n    height='100%'\n    viewBox='0 0 485 306'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.41421'>\n    <path\n      d='M242.596,0c-31.849,0.036 -58.046,26.318 -58.083,58.27l0,26.043c0.134,31.874 26.312,58.026 58.083,58.026c31.771,0 57.949,-26.152 58.082,-58.026l0,-26.043c-0.036,-31.952 -26.232,-58.234 -58.082,-58.27Z'\n      fill='#03AD24'\n      fillRule='nonzero'\n    />\n    <path\n      d='M146.213,305.357l192.767,0c3.382,0 6.165,-2.792 6.165,-6.185l0,-19.858l133.679,0c3.382,0 6.165,-2.792 6.165,-6.185l0,-51.296c-0.021,-30.17 -23.695,-55.46 -53.707,-57.372c-3.288,-0.245 -4.923,1.76 -6.654,3.88c-7.186,8.81 -17.953,13.928 -29.3,13.928c-11.996,0 -23.304,-5.719 -30.437,-15.394c-1.194,-1.62 -3.105,-2.557 -5.112,-2.508c-10.435,0.232 -20.607,3.352 -29.387,9.014c-11.374,-13.905 -28.029,-22.439 -45.925,-23.531c-3.225,-0.179 -4.766,1.725 -6.726,4.123c-8.376,10.27 -20.926,16.235 -34.153,16.235c-13.982,0 -27.163,-6.666 -35.478,-17.944c-1.2,-1.613 -3.106,-2.548 -5.112,-2.508c-16.823,0.391 -32.836,7.398 -44.566,19.502c-1.314,1.351 -2.553,2.756 -3.734,4.198c-8.196,-5.297 -17.613,-8.394 -27.344,-8.993c-3.288,-0.245 -4.922,1.76 -6.654,3.88c-7.186,8.81 -17.953,13.928 -29.3,13.928c-11.995,0 -23.303,-5.719 -30.437,-15.394c-1.196,-1.618 -3.105,-2.555 -5.113,-2.508c-30.873,0.789 -55.843,26.48 -55.85,57.464l0,51.296c0,3.393 2.783,6.185 6.165,6.185l133.885,0l0,19.858c0,3.393 2.781,6.184 6.163,6.185Z'\n      fill='#03AD24'\n      fillRule='nonzero'\n    />\n    <path\n      d='M446.064,107.856l0,-22.794c0,-28.404 -23.297,-51.776 -51.609,-51.776c-28.312,0 -51.609,23.372 -51.609,51.776c0,0 0,22.794 0,22.794c0,28.404 23.297,51.776 51.609,51.776c28.312,0 51.609,-23.372 51.609,-51.776Z'\n      fill='#03AD24'\n      fillRule='nonzero'\n    />\n    <path\n      d='M142.14,107.856l0,-22.794c0,-28.404 -23.297,-51.776 -51.609,-51.776c-28.312,0 -51.609,23.372 -51.609,51.776l0,22.794c0,28.404 23.297,51.776 51.609,51.776c28.312,0 51.609,-23.372 51.609,-51.776Z'\n      fill='#03AD24'\n      fillRule='nonzero'\n    />\n  </svg>\n);\n\nexport const goBack = (\n  <svg\n    width='100%'\n    height='100%'\n    viewBox='0 0 217 367'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.41421'>\n    <path\n      d='M21.169,247.333c-6.513,-4.54 -11.67,-11.463 -15.47,-20.77c-3.799,-9.306 -5.699,-19.862 -5.699,-31.665l0,-23.154c0,-11.804 1.9,-22.359 5.699,-31.666c3.8,-9.306 8.957,-16.23 15.47,-20.77l174.24,-117.129c5.156,-3.632 10.041,-2.724 14.655,2.724c4.614,5.448 6.921,12.712 6.921,21.792l0,2.043c0,11.803 -1.968,22.472 -5.903,32.006c-3.935,9.534 -9.16,16.343 -15.673,20.429l-162.434,101.467c-0.271,0 -0.407,0.227 -0.407,0.681c0,0.454 0.136,0.681 0.407,0.681l162.434,101.466c6.513,4.086 11.738,10.896 15.673,20.43c3.935,9.534 5.903,20.202 5.903,32.006l0,2.043c0,9.08 -2.307,16.344 -6.921,21.792c-4.614,5.448 -9.499,6.355 -14.655,2.724l-174.24,-117.13Z'\n      fill='#fff'\n      fillRule='nonzero'\n    />\n  </svg>\n);\n\nexport const down = (\n  <svg\n    width='100%'\n    height='100%'\n    viewBox='0 0 367 217'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.41421'>\n    <rect\n      id='white_frame'\n      x='-66.679'\n      y='-141.507'\n      width='500'\n      height='500'\n      fill='none'\n    />\n    <path\n      d='M247.333,195.816c-4.54,6.513 -11.463,11.67 -20.77,15.47c-9.306,3.799 -19.862,5.699 -31.665,5.699l-23.154,0c-11.804,0 -22.359,-1.9 -31.666,-5.699c-9.306,-3.8 -16.23,-8.957 -20.77,-15.47l-117.129,-174.24c-3.632,-5.156 -2.724,-10.041 2.724,-14.655c5.448,-4.614 12.712,-6.921 21.792,-6.921l2.043,0c11.803,0 22.472,1.968 32.006,5.903c9.534,3.935 16.343,9.16 20.429,15.673l101.467,162.434c0,0.271 0.227,0.407 0.681,0.407c0.454,0 0.681,-0.136 0.681,-0.407l101.466,-162.434c4.086,-6.513 10.896,-11.738 20.43,-15.673c9.534,-3.935 20.202,-5.903 32.006,-5.903l2.043,0c9.08,0 16.344,2.307 21.792,6.921c5.448,4.614 6.355,9.499 2.724,14.655l-117.13,174.24Z'\n      fill='#d3d3d3'\n      fillRule='nonzero'\n    />\n  </svg>\n);\n\nexport const iconCreateNew = (\n  <svg\n    width='100%'\n    height='100%'\n    viewBox='0 0 500 500'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.41421'>\n    <rect id='white_frame' x='0' y='0' width='500' height='500' fill='none' />\n    <g id='surface1'>\n      <g>\n        <path\n          d='M369.625,142.846c1.176,1.912 3.218,2.962 5.308,2.962c1.111,0 2.235,-0.298 3.253,-0.924l33.724,-20.743c2.926,-1.799 3.84,-5.632 2.038,-8.558c-1.798,-2.926 -5.631,-3.839 -8.561,-2.038l-33.72,20.744c-2.926,1.798 -3.84,5.631 -2.042,8.557Z'\n          fill='#fff'\n          fillRule='nonzero'\n        />\n        <path\n          d='M453.255,184.182l-49.439,-4.802c-3.419,-0.337 -6.461,2.171 -6.795,5.589c-0.33,3.422 2.171,6.464 5.593,6.795l49.436,4.802c0.207,0.019 0.408,0.029 0.609,0.029c3.165,0 5.874,-2.404 6.185,-5.619c0.331,-3.418 -2.171,-6.461 -5.589,-6.794Z'\n          fill='#fff'\n          fillRule='nonzero'\n        />\n        <path\n          d='M344.384,99.398c0.739,0.289 1.503,0.428 2.252,0.428c2.492,0 4.844,-1.507 5.8,-3.969l18.006,-46.293c1.247,-3.201 -0.34,-6.808 -3.542,-8.052c-3.201,-1.244 -6.807,0.34 -8.052,3.542l-18.009,46.293c-1.244,3.201 0.34,6.807 3.545,8.051Z'\n          fill='#fff'\n          fillRule='nonzero'\n        />\n        <path\n          d='M300.444,65.111c-4.18,-6.769 -13.084,-8.882 -19.856,-4.702l-7.443,4.591c-3.282,2.022 -5.577,5.204 -6.464,8.953c-0.888,3.752 -0.263,7.624 1.759,10.903l4.28,6.934l-97.825,121.106l-20.659,12.747c-2.923,1.805 -3.83,5.638 -2.025,8.561c1.176,1.905 3.214,2.955 5.301,2.955c1.111,0 2.242,-0.298 3.259,-0.927l16.269,-10.038l31.706,51.387c-4.582,-0.299 -9.151,0.651 -13.301,2.783c-0.075,0.036 -0.146,0.074 -0.221,0.113c-0.557,0.295 -1.111,0.603 -1.652,0.937l-18.602,11.535c-2.041,1.267 -3.924,2.764 -5.635,4.439c-2.07,2.025 -3.882,4.309 -5.346,6.804l-4.592,6.921l-3.376,5.081c-0.029,-0.01 -0.061,-0.019 -0.087,-0.029c-0.052,-0.023 -0.101,-0.049 -0.153,-0.071c-0.262,-0.117 -0.521,-0.247 -0.771,-0.386c-0.055,-0.029 -0.107,-0.058 -0.159,-0.087c-0.275,-0.166 -0.544,-0.344 -0.8,-0.535c-0.055,-0.039 -0.107,-0.081 -0.159,-0.123c-0.233,-0.182 -0.463,-0.376 -0.68,-0.583c-0.026,-0.026 -0.055,-0.049 -0.081,-0.075c-0.233,-0.227 -0.454,-0.473 -0.664,-0.726c-0.046,-0.055 -0.088,-0.113 -0.133,-0.168c-0.208,-0.266 -0.405,-0.538 -0.583,-0.826l-26.884,-43.572c-1.271,-2.057 -1.663,-4.484 -1.105,-6.833c0.557,-2.353 1.996,-4.345 4.05,-5.612l8.049,-4.964c2.922,-1.805 3.833,-5.638 2.028,-8.561c-1.805,-2.926 -5.638,-3.833 -8.561,-2.028l-8.048,4.964c-4.883,3.013 -8.302,7.747 -9.627,13.333c-0.852,3.607 -0.761,7.288 0.217,10.758l-5.984,3.694c-8.007,4.941 -10.502,15.475 -5.561,23.485l15.184,24.609c2.391,3.879 6.153,6.591 10.589,7.644c1.315,0.311 2.644,0.466 3.966,0.466c3.127,0 6.198,-0.865 8.927,-2.55l5.994,-3.697c1.251,1.137 2.621,2.119 4.092,2.929l-17.273,26.019l-4.073,2.78c-0.849,-0.431 -1.782,-0.703 -2.761,-0.787c-2.002,-0.169 -3.946,0.447 -5.479,1.737l-10.718,9.02c-2.499,-1.594 -5.775,-1.62 -8.341,0.13c-0.12,0.084 -0.24,0.168 -0.353,0.259l-60.346,47.634c-3.535,2.79 -5.56,6.973 -5.56,11.474l0,19.38c0,8.058 6.558,14.616 14.617,14.616l98.716,0c4.452,0 8.606,-1.989 11.396,-5.463l8.184,-10.184c1.433,-1.639 2.042,-3.739 1.825,-5.777l11.013,-9.27c1.076,-0.904 1.85,-2.064 2.285,-3.364l25.387,5.204c0.375,0.078 0.755,0.12 1.137,0.127c0.742,0.012 1.481,0.022 2.219,0.022c6.017,0 11.996,-0.609 18.278,-4.406l25.575,-15.233c0.428,0.026 0.856,0.042 1.28,0.042c3.691,0 7.326,-1.014 10.557,-2.99l20.546,-12.559c9.555,-5.839 12.582,-18.366 6.743,-27.921c-1.993,-3.266 -4.812,-5.826 -8.143,-7.511c3.224,-6.179 3.234,-13.855 -0.658,-20.225c-2.825,-4.624 -7.267,-7.884 -12.52,-9.199c1.086,-4.984 0.337,-10.372 -2.524,-15.057c-2.702,-4.43 -6.895,-7.586 -11.849,-9.008c1.354,-5.204 0.687,-10.929 -2.33,-15.871c-0.784,-1.283 -1.701,-2.449 -2.715,-3.512l123.27,-26.832l4.28,6.934c2.725,4.416 7.459,6.85 12.303,6.85c2.583,0 5.198,-0.691 7.553,-2.145l7.443,-4.592c3.279,-2.025 5.576,-5.204 6.464,-8.956c0.888,-3.749 0.263,-7.621 -1.762,-10.903l-112.299,-182.002Zm-167.982,251.718c-1.053,0.648 -2.294,0.849 -3.493,0.564c-1.202,-0.285 -2.22,-1.021 -2.871,-2.071l-15.184,-24.609c-1.338,-2.168 -0.661,-5.022 1.507,-6.364l5.278,-3.256l20.041,32.477l-5.278,3.259Zm16.739,128.827c-0.415,0.519 -1.031,0.814 -1.695,0.814l-98.716,0c-1.199,0 -2.174,-0.976 -2.174,-2.174l0,-19.38c0,-0.671 0.301,-1.293 0.826,-1.708l56.6,-44.679l51.014,59.844l-5.855,7.283Zm12.649,-18.491l-44.747,-52.495l6.626,-5.576l44.414,52.779l-6.293,5.292Zm60.981,-12.034c-3.798,2.297 -7.362,2.702 -13.304,2.624l-31.874,-6.535c-0.755,-0.156 -1.517,-0.169 -2.252,-0.049l-39.126,-46.49l3.545,-2.421c0.003,0 0.007,-0.003 0.013,-0.006c0.058,-0.043 0.117,-0.091 0.175,-0.133c0.133,-0.101 0.266,-0.201 0.389,-0.308c0.061,-0.055 0.12,-0.113 0.178,-0.169c0.127,-0.116 0.243,-0.236 0.357,-0.362c0.045,-0.049 0.094,-0.101 0.136,-0.153c0.139,-0.168 0.272,-0.34 0.392,-0.518c0.013,-0.016 0.026,-0.029 0.035,-0.046l0.03,-0.042c0.009,-0.016 0.019,-0.032 0.029,-0.048l32.901,-49.553c0.071,-0.107 0.139,-0.217 0.204,-0.327c1.659,-2.868 4.034,-5.311 6.869,-7.07l18.602,-11.535c0.344,-0.214 0.694,-0.405 1.047,-0.583c0.158,-0.081 0.32,-0.15 0.479,-0.224c0.188,-0.084 0.373,-0.169 0.564,-0.243c0.217,-0.088 0.434,-0.169 0.658,-0.243c0.113,-0.042 0.23,-0.078 0.347,-0.113c0.272,-0.085 0.547,-0.166 0.823,-0.234l0.003,0c1.001,-0.243 2.018,-0.363 3.033,-0.369c0.022,0 0.045,0 0.064,0c0.298,0 0.593,0.013 0.888,0.032c0.094,0.01 0.188,0.016 0.285,0.026c0.263,0.023 0.522,0.052 0.781,0.091c0.153,0.023 0.308,0.055 0.464,0.084c0.395,0.075 0.787,0.169 1.173,0.282c0.149,0.042 0.301,0.081 0.447,0.126c0.197,0.068 0.389,0.143 0.583,0.221c0.152,0.058 0.308,0.116 0.457,0.181c0.191,0.081 0.382,0.172 0.57,0.266c0.143,0.071 0.282,0.142 0.418,0.217c0.188,0.1 0.376,0.207 0.561,0.321c0.126,0.078 0.249,0.159 0.372,0.24c0.185,0.123 0.37,0.246 0.548,0.382c0.11,0.081 0.214,0.168 0.317,0.253c0.185,0.145 0.367,0.291 0.541,0.45c0.849,0.765 1.595,1.646 2.204,2.641l0.457,0.748l6.632,10.823l8.324,13.582l2.116,3.458c0.201,0.327 0.366,0.667 0.493,1.02c0.389,1.063 0.45,2.223 0.175,3.37c-0.395,1.65 -1.436,3.062 -2.926,3.973l-3.743,2.287l-0.003,0.004c-0.259,0.155 -0.521,0.288 -0.794,0.405c-0.058,0.026 -0.116,0.051 -0.175,0.074c-0.269,0.11 -0.541,0.201 -0.816,0.272c-0.033,0.01 -0.068,0.016 -0.101,0.023c-0.259,0.062 -0.518,0.107 -0.777,0.136c-0.052,0.007 -0.101,0.013 -0.153,0.02c-0.278,0.022 -0.557,0.029 -0.832,0.019c-0.052,-0.003 -0.104,-0.007 -0.156,-0.01c-0.282,-0.019 -0.56,-0.052 -0.836,-0.107c-0.003,-0.003 -0.006,-0.003 -0.009,-0.003c-0.295,-0.062 -0.58,-0.146 -0.862,-0.249c-0.026,-0.01 -0.049,-0.017 -0.075,-0.026c-0.577,-0.221 -1.121,-0.532 -1.61,-0.93c-0.004,0 -0.004,-0.004 -0.004,-0.004c-0.246,-0.2 -0.466,-0.414 -0.67,-0.641c-0.016,-0.02 -0.033,-0.039 -0.052,-0.062c-0.194,-0.226 -0.376,-0.463 -0.528,-0.716l-6.202,-10.138c-2.31,-3.778 -5.975,-6.429 -10.32,-7.459c-4.452,-1.06 -9.066,-0.302 -12.987,2.132c-1.578,0.978 -2.634,2.608 -2.887,4.445c-0.071,0.532 -0.159,1.053 -0.253,1.569c-0.071,0.375 -0.152,0.748 -0.236,1.117c-0.026,0.124 -0.052,0.25 -0.081,0.373c-0.11,0.467 -0.23,0.927 -0.363,1.38c-0.003,0.017 -0.01,0.036 -0.016,0.055c-0.697,2.389 -1.675,4.602 -2.933,6.614c-0.003,0.003 -0.003,0.006 -0.003,0.009c-2.317,3.714 -5.589,6.853 -9.879,9.462c-2.936,1.785 -3.869,5.612 -2.084,8.548c1.786,2.935 5.612,3.868 8.548,2.083c3.03,-1.844 5.716,-3.911 8.065,-6.189l25.98,40.973c4.786,7.423 13.058,11.729 21.615,11.729c0.454,0 0.908,-0.023 1.361,-0.048c0.178,0.324 0.36,0.644 0.554,0.965c0.733,1.196 1.575,2.297 2.511,3.299l-18.391,10.952Zm5.278,-45.739c0,0.003 0.004,0.006 0.004,0.01c0.103,0.291 0.217,0.576 0.336,0.865c0.013,0.032 0.026,0.068 0.043,0.103c0.107,0.26 0.223,0.516 0.343,0.771c0.029,0.056 0.052,0.117 0.081,0.175c0.113,0.24 0.24,0.477 0.363,0.713c0.039,0.072 0.071,0.143 0.11,0.211c0.165,0.305 0.34,0.606 0.522,0.904c0.311,0.512 0.651,1.001 1.001,1.477c0.126,0.169 0.256,0.334 0.386,0.499c0.23,0.292 0.466,0.574 0.709,0.853c0.172,0.194 0.34,0.395 0.519,0.583c0.133,0.142 0.278,0.272 0.418,0.411c0.502,0.503 1.027,0.976 1.578,1.423c0.058,0.045 0.113,0.094 0.171,0.136c1.07,0.849 2.217,1.584 3.438,2.203c-1.124,2.116 -1.866,4.41 -2.197,6.772c-4.102,-0.256 -7.983,-2.417 -10.271,-5.968l-28.601,-45.107c1.325,-2.738 2.346,-5.661 3.039,-8.775c0.444,-0.025 0.891,0.013 1.332,0.117c1.095,0.259 2.012,0.917 2.582,1.847l6.202,10.139c0.01,0.013 0.019,0.026 0.029,0.042c0.305,0.496 0.632,0.975 0.985,1.438c0.259,0.341 0.538,0.658 0.817,0.976c0.097,0.11 0.184,0.23 0.285,0.34c0.013,0.055 0.029,0.11 0.042,0.165c0.097,0.431 0.207,0.859 0.33,1.283c0.039,0.123 0.075,0.247 0.111,0.37c0.152,0.479 0.314,0.956 0.502,1.422c0.016,0.049 0.039,0.094 0.058,0.139c0.172,0.428 0.363,0.846 0.567,1.261c0.058,0.12 0.117,0.24 0.178,0.356c0.234,0.454 0.477,0.901 0.742,1.342c2.823,4.62 7.258,7.873 12.501,9.195c-0.81,3.707 -0.583,7.631 0.745,11.309Zm3.97,-74.042l2.089,-1.277c1.844,-1.127 4.015,-1.468 6.118,-0.962c2.1,0.509 3.875,1.801 5,3.645c2.323,3.804 1.121,8.791 -2.683,11.114l-2.077,1.27l-6.15,-10.035l-2.297,-3.755Zm46.364,74.729c2.044,0.492 3.771,1.753 4.87,3.548c2.261,3.703 1.088,8.557 -2.615,10.822l-20.546,12.559c-1.65,1.008 -3.568,1.361 -5.457,1.03c-0.107,-0.022 -0.217,-0.048 -0.327,-0.064c-0.055,-0.013 -0.114,-0.02 -0.169,-0.033c-2.047,-0.492 -3.774,-1.753 -4.873,-3.548c-0.492,-0.807 -0.81,-1.665 -0.988,-2.54c-0.003,-0.026 -0.003,-0.049 -0.01,-0.071c-0.492,-2.557 0.331,-5.169 2.087,-6.983c0.048,-0.049 0.094,-0.1 0.142,-0.146c0.091,-0.087 0.185,-0.172 0.279,-0.256c0.094,-0.084 0.191,-0.168 0.295,-0.246c0.074,-0.062 0.146,-0.12 0.224,-0.178c0.184,-0.136 0.369,-0.266 0.567,-0.389c0.006,-0.003 0.013,-0.007 0.016,-0.01l4.082,-2.495c0.72,-0.334 1.426,-0.7 2.113,-1.118l15.718,-9.61c1.458,-0.544 3.043,-0.645 4.592,-0.272Zm-14.312,-27.27c1.672,-0.8 3.551,-1.001 5.378,-0.56c2.1,0.505 3.876,1.801 5.003,3.645c2.323,3.804 1.118,8.787 -2.683,11.11l-3.7,2.262c-0.726,0.334 -1.439,0.71 -2.129,1.131l-15.637,9.555c-2.919,1.147 -6.205,0.473 -8.437,-1.587l-0.004,-0.004c-0.175,-0.162 -0.34,-0.327 -0.499,-0.505c-0.042,-0.049 -0.081,-0.101 -0.123,-0.149c-0.116,-0.136 -0.233,-0.272 -0.343,-0.418c-0.153,-0.204 -0.295,-0.415 -0.431,-0.632c-0.136,-0.227 -0.259,-0.454 -0.373,-0.687c-0.036,-0.074 -0.065,-0.149 -0.1,-0.227c-0.072,-0.158 -0.143,-0.32 -0.204,-0.486c-0.033,-0.087 -0.059,-0.171 -0.088,-0.259c-0.052,-0.159 -0.1,-0.314 -0.143,-0.473c-0.022,-0.087 -0.045,-0.178 -0.064,-0.266c-0.036,-0.158 -0.068,-0.32 -0.098,-0.486c-0.012,-0.084 -0.025,-0.168 -0.038,-0.252c-0.023,-0.169 -0.039,-0.337 -0.049,-0.506c-0.006,-0.081 -0.013,-0.162 -0.016,-0.243c-0.007,-0.175 -0.007,-0.35 0,-0.522c0,-0.077 0,-0.152 0.006,-0.226c0.007,-0.179 0.029,-0.354 0.049,-0.529c0.01,-0.074 0.013,-0.149 0.026,-0.223c0.022,-0.156 0.055,-0.311 0.087,-0.467c0.353,-1.665 1.225,-3.224 2.592,-4.419c0.056,-0.049 0.104,-0.107 0.159,-0.156c0.078,-0.068 0.153,-0.136 0.234,-0.201c0.194,-0.11 0.392,-0.21 0.583,-0.327l20.186,-12.339c0.292,-0.178 0.577,-0.363 0.856,-0.554Zm-9.666,-24.82c2.1,0.506 3.875,1.802 5.003,3.645c2.164,3.545 1.264,8.117 -1.947,10.606c-0.208,0.113 -0.412,0.23 -0.616,0.353l-15.585,9.526c0.051,-0.039 0.1,-0.084 0.152,-0.126c0.298,-0.237 0.596,-0.477 0.875,-0.729c0.175,-0.156 0.34,-0.321 0.508,-0.483c0.253,-0.246 0.506,-0.496 0.746,-0.758c0.165,-0.175 0.32,-0.36 0.476,-0.542c0.224,-0.265 0.444,-0.531 0.651,-0.806c0.146,-0.192 0.292,-0.386 0.431,-0.587c0.198,-0.282 0.386,-0.57 0.571,-0.865c0.126,-0.204 0.252,-0.405 0.369,-0.612c0.178,-0.311 0.34,-0.632 0.499,-0.953c0.1,-0.204 0.207,-0.402 0.298,-0.609c0.162,-0.36 0.305,-0.729 0.447,-1.102c0.065,-0.178 0.143,-0.353 0.204,-0.534c0.191,-0.561 0.363,-1.128 0.502,-1.708c0.133,-0.554 0.237,-1.111 0.318,-1.669c0.026,-0.178 0.039,-0.356 0.062,-0.534c0.045,-0.383 0.081,-0.762 0.103,-1.144c0.01,-0.208 0.013,-0.415 0.016,-0.622c0.01,-0.357 0.007,-0.71 -0.006,-1.063c-0.006,-0.211 -0.019,-0.421 -0.032,-0.632c-0.026,-0.356 -0.068,-0.713 -0.114,-1.066c-0.026,-0.198 -0.048,-0.395 -0.081,-0.59c-0.068,-0.401 -0.152,-0.797 -0.249,-1.192c-0.033,-0.143 -0.059,-0.288 -0.094,-0.431c-0.143,-0.535 -0.305,-1.063 -0.496,-1.584c-0.039,-0.101 -0.084,-0.201 -0.126,-0.305c-0.136,-0.35 -0.269,-0.703 -0.428,-1.047l1.429,-0.874c1.844,-1.128 4.014,-1.468 6.114,-0.963Zm147.932,-62.837c-0.072,0.298 -0.282,0.855 -0.891,1.231l-7.443,4.595c-0.93,0.573 -2.158,0.285 -2.735,-0.648l-78.358,-126.997c-1.801,-2.923 -5.634,-3.83 -8.56,-2.028c-2.923,1.805 -3.83,5.638 -2.026,8.56l67.154,108.836l-144.572,31.472l-38.289,-62.06l92.971,-115.095l7.511,12.176c1.805,2.923 5.638,3.83 8.56,2.029c2.926,-1.805 3.834,-5.638 2.029,-8.564l-18.719,-30.335c-0.376,-0.609 -0.314,-1.202 -0.243,-1.5c0.071,-0.301 0.282,-0.859 0.891,-1.235l7.443,-4.591c0.933,-0.577 2.158,-0.285 2.735,0.648l112.299,182.006c0.376,0.609 0.314,1.202 0.243,1.5Z'\n          fill='#fff'\n          fillRule='nonzero'\n        />\n        <path\n          d='M300.444,65.111c-4.18,-6.769 -13.084,-8.882 -19.856,-4.702l-7.443,4.591c-3.282,2.022 -5.577,5.204 -6.464,8.953c-0.888,3.752 -0.263,7.624 1.759,10.903l4.28,6.934l-97.825,121.106l-20.659,12.747c-2.923,1.805 -3.83,5.638 -2.025,8.561c1.176,1.905 3.214,2.955 5.301,2.955c1.111,0 2.242,-0.298 3.259,-0.927l16.269,-10.038l31.706,51.387c-4.582,-0.299 -9.151,0.651 -13.301,2.783c-0.075,0.036 -0.146,0.074 -0.221,0.113c-0.557,0.295 -1.111,0.603 -1.652,0.937l-18.602,11.535c-2.041,1.267 -3.924,2.764 -5.635,4.439c-2.07,2.025 -3.882,4.309 -5.346,6.804l-4.592,6.921l-3.376,5.081c-0.029,-0.01 -0.061,-0.019 -0.087,-0.029c-0.052,-0.023 -0.101,-0.049 -0.153,-0.071c-0.262,-0.117 -0.521,-0.247 -0.771,-0.386c-0.055,-0.029 -0.107,-0.058 -0.159,-0.087c-0.275,-0.166 -0.544,-0.344 -0.8,-0.535c-0.055,-0.039 -0.107,-0.081 -0.159,-0.123c-0.233,-0.182 -0.463,-0.376 -0.68,-0.583c-0.026,-0.026 -0.055,-0.049 -0.081,-0.075c-0.233,-0.227 -0.454,-0.473 -0.664,-0.726c-0.046,-0.055 -0.088,-0.113 -0.133,-0.168c-0.208,-0.266 -0.405,-0.538 -0.583,-0.826l-26.884,-43.572c-1.271,-2.057 -1.663,-4.484 -1.105,-6.833c0.557,-2.353 1.996,-4.345 4.05,-5.612l8.049,-4.964c2.922,-1.805 3.833,-5.638 2.028,-8.561c-1.805,-2.926 -5.638,-3.833 -8.561,-2.028l-8.048,4.964c-4.883,3.013 -8.302,7.747 -9.627,13.333c-0.852,3.607 -0.761,7.288 0.217,10.758l-5.984,3.694c-8.007,4.941 -10.502,15.475 -5.561,23.485l15.184,24.609c2.391,3.879 6.153,6.591 10.589,7.644c1.315,0.311 2.644,0.466 3.966,0.466c3.127,0 6.198,-0.865 8.927,-2.55l5.994,-3.697c1.251,1.137 2.621,2.119 4.092,2.929l-17.273,26.019l-4.073,2.78c-0.849,-0.431 -1.782,-0.703 -2.761,-0.787c-2.002,-0.169 -3.946,0.447 -5.479,1.737l-10.718,9.02c-2.499,-1.594 -5.775,-1.62 -8.341,0.13c-0.12,0.084 -0.24,0.168 -0.353,0.259l-60.346,47.634c-3.535,2.79 -5.56,6.973 -5.56,11.474l0,19.38c0,8.058 6.558,14.616 14.617,14.616l98.716,0c4.452,0 8.606,-1.989 11.396,-5.463l8.184,-10.184c1.433,-1.639 2.042,-3.739 1.825,-5.777l11.013,-9.27c1.076,-0.904 1.85,-2.064 2.285,-3.364l25.387,5.204c0.375,0.078 0.755,0.12 1.137,0.127c0.742,0.012 1.481,0.022 2.219,0.022c6.017,0 11.996,-0.609 18.278,-4.406l25.575,-15.233c0.428,0.026 0.856,0.042 1.28,0.042c3.691,0 7.326,-1.014 10.557,-2.99l20.546,-12.559c9.555,-5.839 12.582,-18.366 6.743,-27.921c-1.993,-3.266 -4.812,-5.826 -8.143,-7.511c3.224,-6.179 3.234,-13.855 -0.658,-20.225c-2.825,-4.624 -7.267,-7.884 -12.52,-9.199c1.086,-4.984 0.337,-10.372 -2.524,-15.057c-2.702,-4.43 -6.895,-7.586 -11.849,-9.008c1.354,-5.204 0.687,-10.929 -2.33,-15.871c-0.784,-1.283 -1.701,-2.449 -2.715,-3.512l123.27,-26.832l4.28,6.934c2.725,4.416 7.459,6.85 12.303,6.85c2.583,0 5.198,-0.691 7.553,-2.145l7.443,-4.592c3.279,-2.025 5.576,-5.204 6.464,-8.956c0.888,-3.749 0.263,-7.621 -1.762,-10.903l-112.299,-182.002Zm-167.982,251.718c-1.053,0.648 -2.294,0.849 -3.493,0.564c-1.202,-0.285 -2.22,-1.021 -2.871,-2.071l-15.184,-24.609c-1.338,-2.168 -0.661,-5.022 1.507,-6.364l5.278,-3.256l20.041,32.477l-5.278,3.259Zm16.739,128.827c-0.415,0.519 -1.031,0.814 -1.695,0.814l-98.716,0c-1.199,0 -2.174,-0.976 -2.174,-2.174l0,-19.38c0,-0.671 0.301,-1.293 0.826,-1.708l56.6,-44.679l51.014,59.844l-5.855,7.283Zm12.649,-18.491l-44.747,-52.495l6.626,-5.576l44.414,52.779l-6.293,5.292Zm60.981,-12.034c-3.798,2.297 -7.362,2.702 -13.304,2.624l-31.874,-6.535c-0.755,-0.156 -1.517,-0.169 -2.252,-0.049l-39.126,-46.49l3.545,-2.421c0.003,0 0.007,-0.003 0.013,-0.006c0.058,-0.043 0.117,-0.091 0.175,-0.133c0.133,-0.101 0.266,-0.201 0.389,-0.308c0.061,-0.055 0.12,-0.113 0.178,-0.169c0.127,-0.116 0.243,-0.236 0.357,-0.362c0.045,-0.049 0.094,-0.101 0.136,-0.153c0.139,-0.168 0.272,-0.34 0.392,-0.518c0.013,-0.016 0.026,-0.029 0.035,-0.046l0.03,-0.042c0.009,-0.016 0.019,-0.032 0.029,-0.048l32.901,-49.553c0.071,-0.107 0.139,-0.217 0.204,-0.327c1.659,-2.868 4.034,-5.311 6.869,-7.07l18.602,-11.535c0.344,-0.214 0.694,-0.405 1.047,-0.583c0.158,-0.081 0.32,-0.15 0.479,-0.224c0.188,-0.084 0.373,-0.169 0.564,-0.243c0.217,-0.088 0.434,-0.169 0.658,-0.243c0.113,-0.042 0.23,-0.078 0.347,-0.113c0.272,-0.085 0.547,-0.166 0.823,-0.234l0.003,0c1.001,-0.243 2.018,-0.363 3.033,-0.369c0.022,0 0.045,0 0.064,0c0.298,0 0.593,0.013 0.888,0.032c0.094,0.01 0.188,0.016 0.285,0.026c0.263,0.023 0.522,0.052 0.781,0.091c0.153,0.023 0.308,0.055 0.464,0.084c0.395,0.075 0.787,0.169 1.173,0.282c0.149,0.042 0.301,0.081 0.447,0.126c0.197,0.068 0.389,0.143 0.583,0.221c0.152,0.058 0.308,0.116 0.457,0.181c0.191,0.081 0.382,0.172 0.57,0.266c0.143,0.071 0.282,0.142 0.418,0.217c0.188,0.1 0.376,0.207 0.561,0.321c0.126,0.078 0.249,0.159 0.372,0.24c0.185,0.123 0.37,0.246 0.548,0.382c0.11,0.081 0.214,0.168 0.317,0.253c0.185,0.145 0.367,0.291 0.541,0.45c0.849,0.765 1.595,1.646 2.204,2.641l0.457,0.748l6.632,10.823l8.324,13.582l2.116,3.458c0.201,0.327 0.366,0.667 0.493,1.02c0.389,1.063 0.45,2.223 0.175,3.37c-0.395,1.65 -1.436,3.062 -2.926,3.973l-3.743,2.287l-0.003,0.004c-0.259,0.155 -0.521,0.288 -0.794,0.405c-0.058,0.026 -0.116,0.051 -0.175,0.074c-0.269,0.11 -0.541,0.201 -0.816,0.272c-0.033,0.01 -0.068,0.016 -0.101,0.023c-0.259,0.062 -0.518,0.107 -0.777,0.136c-0.052,0.007 -0.101,0.013 -0.153,0.02c-0.278,0.022 -0.557,0.029 -0.832,0.019c-0.052,-0.003 -0.104,-0.007 -0.156,-0.01c-0.282,-0.019 -0.56,-0.052 -0.836,-0.107c-0.003,-0.003 -0.006,-0.003 -0.009,-0.003c-0.295,-0.062 -0.58,-0.146 -0.862,-0.249c-0.026,-0.01 -0.049,-0.017 -0.075,-0.026c-0.577,-0.221 -1.121,-0.532 -1.61,-0.93c-0.004,0 -0.004,-0.004 -0.004,-0.004c-0.246,-0.2 -0.466,-0.414 -0.67,-0.641c-0.016,-0.02 -0.033,-0.039 -0.052,-0.062c-0.194,-0.226 -0.376,-0.463 -0.528,-0.716l-6.202,-10.138c-2.31,-3.778 -5.975,-6.429 -10.32,-7.459c-4.452,-1.06 -9.066,-0.302 -12.987,2.132c-1.578,0.978 -2.634,2.608 -2.887,4.445c-0.071,0.532 -0.159,1.053 -0.253,1.569c-0.071,0.375 -0.152,0.748 -0.236,1.117c-0.026,0.124 -0.052,0.25 -0.081,0.373c-0.11,0.467 -0.23,0.927 -0.363,1.38c-0.003,0.017 -0.01,0.036 -0.016,0.055c-0.697,2.389 -1.675,4.602 -2.933,6.614c-0.003,0.003 -0.003,0.006 -0.003,0.009c-2.317,3.714 -5.589,6.853 -9.879,9.462c-2.936,1.785 -3.869,5.612 -2.084,8.548c1.786,2.935 5.612,3.868 8.548,2.083c3.03,-1.844 5.716,-3.911 8.065,-6.189l25.98,40.973c4.786,7.423 13.058,11.729 21.615,11.729c0.454,0 0.908,-0.023 1.361,-0.048c0.178,0.324 0.36,0.644 0.554,0.965c0.733,1.196 1.575,2.297 2.511,3.299l-18.391,10.952Zm5.278,-45.739c0,0.003 0.004,0.006 0.004,0.01c0.103,0.291 0.217,0.576 0.336,0.865c0.013,0.032 0.026,0.068 0.043,0.103c0.107,0.26 0.223,0.516 0.343,0.771c0.029,0.056 0.052,0.117 0.081,0.175c0.113,0.24 0.24,0.477 0.363,0.713c0.039,0.072 0.071,0.143 0.11,0.211c0.165,0.305 0.34,0.606 0.522,0.904c0.311,0.512 0.651,1.001 1.001,1.477c0.126,0.169 0.256,0.334 0.386,0.499c0.23,0.292 0.466,0.574 0.709,0.853c0.172,0.194 0.34,0.395 0.519,0.583c0.133,0.142 0.278,0.272 0.418,0.411c0.502,0.503 1.027,0.976 1.578,1.423c0.058,0.045 0.113,0.094 0.171,0.136c1.07,0.849 2.217,1.584 3.438,2.203c-1.124,2.116 -1.866,4.41 -2.197,6.772c-4.102,-0.256 -7.983,-2.417 -10.271,-5.968l-28.601,-45.107c1.325,-2.738 2.346,-5.661 3.039,-8.775c0.444,-0.025 0.891,0.013 1.332,0.117c1.095,0.259 2.012,0.917 2.582,1.847l6.202,10.139c0.01,0.013 0.019,0.026 0.029,0.042c0.305,0.496 0.632,0.975 0.985,1.438c0.259,0.341 0.538,0.658 0.817,0.976c0.097,0.11 0.184,0.23 0.285,0.34c0.013,0.055 0.029,0.11 0.042,0.165c0.097,0.431 0.207,0.859 0.33,1.283c0.039,0.123 0.075,0.247 0.111,0.37c0.152,0.479 0.314,0.956 0.502,1.422c0.016,0.049 0.039,0.094 0.058,0.139c0.172,0.428 0.363,0.846 0.567,1.261c0.058,0.12 0.117,0.24 0.178,0.356c0.234,0.454 0.477,0.901 0.742,1.342c2.823,4.62 7.258,7.873 12.501,9.195c-0.81,3.707 -0.583,7.631 0.745,11.309Zm3.97,-74.042l2.089,-1.277c1.844,-1.127 4.015,-1.468 6.118,-0.962c2.1,0.509 3.875,1.801 5,3.645c2.323,3.804 1.121,8.791 -2.683,11.114l-2.077,1.27l-6.15,-10.035l-2.297,-3.755Zm46.364,74.729c2.044,0.492 3.771,1.753 4.87,3.548c2.261,3.703 1.088,8.557 -2.615,10.822l-20.546,12.559c-1.65,1.008 -3.568,1.361 -5.457,1.03c-0.107,-0.022 -0.217,-0.048 -0.327,-0.064c-0.055,-0.013 -0.114,-0.02 -0.169,-0.033c-2.047,-0.492 -3.774,-1.753 -4.873,-3.548c-0.492,-0.807 -0.81,-1.665 -0.988,-2.54c-0.003,-0.026 -0.003,-0.049 -0.01,-0.071c-0.492,-2.557 0.331,-5.169 2.087,-6.983c0.048,-0.049 0.094,-0.1 0.142,-0.146c0.091,-0.087 0.185,-0.172 0.279,-0.256c0.094,-0.084 0.191,-0.168 0.295,-0.246c0.074,-0.062 0.146,-0.12 0.224,-0.178c0.184,-0.136 0.369,-0.266 0.567,-0.389c0.006,-0.003 0.013,-0.007 0.016,-0.01l4.082,-2.495c0.72,-0.334 1.426,-0.7 2.113,-1.118l15.718,-9.61c1.458,-0.544 3.043,-0.645 4.592,-0.272Zm-14.312,-27.27c1.672,-0.8 3.551,-1.001 5.378,-0.56c2.1,0.505 3.876,1.801 5.003,3.645c2.323,3.804 1.118,8.787 -2.683,11.11l-3.7,2.262c-0.726,0.334 -1.439,0.71 -2.129,1.131l-15.637,9.555c-2.919,1.147 -6.205,0.473 -8.437,-1.587l-0.004,-0.004c-0.175,-0.162 -0.34,-0.327 -0.499,-0.505c-0.042,-0.049 -0.081,-0.101 -0.123,-0.149c-0.116,-0.136 -0.233,-0.272 -0.343,-0.418c-0.153,-0.204 -0.295,-0.415 -0.431,-0.632c-0.136,-0.227 -0.259,-0.454 -0.373,-0.687c-0.036,-0.074 -0.065,-0.149 -0.1,-0.227c-0.072,-0.158 -0.143,-0.32 -0.204,-0.486c-0.033,-0.087 -0.059,-0.171 -0.088,-0.259c-0.052,-0.159 -0.1,-0.314 -0.143,-0.473c-0.022,-0.087 -0.045,-0.178 -0.064,-0.266c-0.036,-0.158 -0.068,-0.32 -0.098,-0.486c-0.012,-0.084 -0.025,-0.168 -0.038,-0.252c-0.023,-0.169 -0.039,-0.337 -0.049,-0.506c-0.006,-0.081 -0.013,-0.162 -0.016,-0.243c-0.007,-0.175 -0.007,-0.35 0,-0.522c0,-0.077 0,-0.152 0.006,-0.226c0.007,-0.179 0.029,-0.354 0.049,-0.529c0.01,-0.074 0.013,-0.149 0.026,-0.223c0.022,-0.156 0.055,-0.311 0.087,-0.467c0.353,-1.665 1.225,-3.224 2.592,-4.419c0.056,-0.049 0.104,-0.107 0.159,-0.156c0.078,-0.068 0.153,-0.136 0.234,-0.201c0.194,-0.11 0.392,-0.21 0.583,-0.327l20.186,-12.339c0.292,-0.178 0.577,-0.363 0.856,-0.554Zm-9.666,-24.82c2.1,0.506 3.875,1.802 5.003,3.645c2.164,3.545 1.264,8.117 -1.947,10.606c-0.208,0.113 -0.412,0.23 -0.616,0.353l-15.585,9.526c0.051,-0.039 0.1,-0.084 0.152,-0.126c0.298,-0.237 0.596,-0.477 0.875,-0.729c0.175,-0.156 0.34,-0.321 0.508,-0.483c0.253,-0.246 0.506,-0.496 0.746,-0.758c0.165,-0.175 0.32,-0.36 0.476,-0.542c0.224,-0.265 0.444,-0.531 0.651,-0.806c0.146,-0.192 0.292,-0.386 0.431,-0.587c0.198,-0.282 0.386,-0.57 0.571,-0.865c0.126,-0.204 0.252,-0.405 0.369,-0.612c0.178,-0.311 0.34,-0.632 0.499,-0.953c0.1,-0.204 0.207,-0.402 0.298,-0.609c0.162,-0.36 0.305,-0.729 0.447,-1.102c0.065,-0.178 0.143,-0.353 0.204,-0.534c0.191,-0.561 0.363,-1.128 0.502,-1.708c0.133,-0.554 0.237,-1.111 0.318,-1.669c0.026,-0.178 0.039,-0.356 0.062,-0.534c0.045,-0.383 0.081,-0.762 0.103,-1.144c0.01,-0.208 0.013,-0.415 0.016,-0.622c0.01,-0.357 0.007,-0.71 -0.006,-1.063c-0.006,-0.211 -0.019,-0.421 -0.032,-0.632c-0.026,-0.356 -0.068,-0.713 -0.114,-1.066c-0.026,-0.198 -0.048,-0.395 -0.081,-0.59c-0.068,-0.401 -0.152,-0.797 -0.249,-1.192c-0.033,-0.143 -0.059,-0.288 -0.094,-0.431c-0.143,-0.535 -0.305,-1.063 -0.496,-1.584c-0.039,-0.101 -0.084,-0.201 -0.126,-0.305c-0.136,-0.35 -0.269,-0.703 -0.428,-1.047l1.429,-0.874c1.844,-1.128 4.014,-1.468 6.114,-0.963Zm147.932,-62.837c-0.072,0.298 -0.282,0.855 -0.891,1.231l-7.443,4.595c-0.93,0.573 -2.158,0.285 -2.735,-0.648l-78.358,-126.997c-1.801,-2.923 -5.634,-3.83 -8.56,-2.028c-2.923,1.805 -3.83,5.638 -2.026,8.56l67.154,108.836l-144.572,31.472l-38.289,-62.06l92.971,-115.095l7.511,12.176c1.805,2.923 5.638,3.83 8.56,2.029c2.926,-1.805 3.834,-5.638 2.029,-8.564l-18.719,-30.335c-0.376,-0.609 -0.314,-1.202 -0.243,-1.5c0.071,-0.301 0.282,-0.859 0.891,-1.235l7.443,-4.591c0.933,-0.577 2.158,-0.285 2.735,0.648l112.299,182.006c0.376,0.609 0.314,1.202 0.243,1.5Z'\n          fill='#fff'\n          fillRule='nonzero'\n        />\n      </g>\n    </g>\n  </svg>\n);\n\nexport const IconLink = (props: { color: string }) => {\n         return (\n           <svg\n             viewBox='0 0 208 208'\n             fillRule='evenodd'\n             clipRule='evenodd'\n             strokeLinejoin='round'\n             strokeMiterlimit='1.414'>\n             <path\n               d='M193.202,14.349c-19.135,-19.136 -50.273,-19.128 -69.412,0l-34.706,34.706c-2.949,2.949 -2.949,7.729 0,10.677c2.949,2.949 7.729,2.949 10.677,0l34.707,-34.706c6.384,-6.381 14.917,-9.9 24.024,-9.9c9.111,0 17.644,3.519 24.029,9.904c6.385,6.385 9.904,14.918 9.904,24.029c0,9.107 -3.519,17.64 -9.904,24.024l-45.38,45.392c-13.253,13.245 -34.808,13.245 -48.061,0c-2.949,-2.949 -7.729,-2.949 -10.678,0c-2.949,2.949 -2.949,7.732 0,10.677c9.568,9.568 22.137,14.352 34.706,14.352c12.57,0 25.139,-4.784 34.707,-14.352l45.387,-45.387c9.239,-9.236 14.329,-21.563 14.329,-34.706c0,-13.147 -5.09,-25.471 -14.329,-34.71Z'\n               fill={colorsArray[props.color]}\n               fillRule='nonzero'\n             />\n             <path\n               d='M102.431,153.177l-29.368,29.367c-6.384,6.385 -14.917,9.904 -24.028,9.904c-9.107,0 -17.644,-3.519 -24.029,-9.904c-13.248,-13.248 -13.248,-34.808 0,-48.057l42.719,-42.718c6.384,-6.381 14.917,-9.9 24.028,-9.9c9.107,0 17.64,3.519 24.025,9.9c2.949,2.949 7.729,2.949 10.678,0c2.948,-2.949 2.948,-7.729 0,-10.677c-19.132,-19.132 -50.27,-19.136 -69.413,0l-42.718,42.722c-9.235,9.235 -14.325,21.563 -14.325,34.706c0,13.139 5.09,25.467 14.329,34.702c9.235,9.239 21.563,14.329 34.702,14.329c13.143,0 25.471,-5.09 34.706,-14.329l29.368,-29.367c2.949,-2.949 2.949,-7.729 0,-10.678c-2.949,-2.949 -7.725,-2.949 -10.674,0Z'\n               fill={colorsArray[props.color]}\n               fillRule='nonzero'\n             />\n           </svg>\n           // </span>\n         );\n       };\n\nexport const DownArrow = (props: { color: string }) => {\n\n         return (\n           <svg\n             viewBox='0 0 367 253'\n             xmlns='http://www.w3.org/2000/svg'\n             fillRule='evenodd'\n             clipRule='evenodd'\n             strokeLinejoin='round'\n             strokeMiterlimit='1.414'>\n             <path\n               d='M142.082,194.676C139.778,193.716 137.954,192.252 136.61,190.284C135.266,188.316 134.594,186.084 134.594,183.588L134.594,178.692C134.594,176.196 135.266,173.964 136.61,171.996C137.954,170.028 139.778,168.564 142.082,167.604L203.714,142.836C205.538,142.068 207.266,142.26 208.898,143.412C210.53,144.564 211.346,146.1 211.346,148.02L211.346,148.452C211.346,150.948 210.65,153.204 209.258,155.22C207.866,157.236 206.018,158.676 203.714,159.54L146.258,180.996C146.162,180.996 146.114,181.044 146.114,181.14C146.114,181.236 146.162,181.284 146.258,181.284L203.714,202.74C206.018,203.604 207.866,205.044 209.258,207.06C210.65,209.076 211.346,211.332 211.346,213.828L211.346,214.26C211.346,216.18 210.53,217.716 208.898,218.868C207.266,220.02 205.538,220.212 203.714,219.444L142.082,194.676Z'\n               fill={colorsArray[props.color]}\n               fillRule='nonzero'\n               transform='matrix(0 -1.85282 4.72905 0 -673.298 502.308)'\n             />\n             <path\n               d='M142.082,194.676C139.778,193.716 137.954,192.252 136.61,190.284C135.266,188.316 134.594,186.084 134.594,183.588L134.594,178.692C134.594,176.196 135.266,173.964 136.61,171.996C137.954,170.028 139.778,168.564 142.082,167.604L203.714,142.836C205.538,142.068 207.266,142.26 208.898,143.412C210.53,144.564 211.346,146.1 211.346,148.02L211.346,148.452C211.346,150.948 210.65,153.204 209.258,155.22C207.866,157.236 206.018,158.676 203.714,159.54L146.258,180.996C146.162,180.996 146.114,181.044 146.114,181.14C146.114,181.236 146.162,181.284 146.258,181.284L203.714,202.74C206.018,203.604 207.866,205.044 209.258,207.06C210.65,209.076 211.346,211.332 211.346,213.828L211.346,214.26C211.346,216.18 210.53,217.716 208.898,218.868C207.266,220.02 205.538,220.212 203.714,219.444L142.082,194.676Z'\n               fill={colorsArray[props.color]}\n               fillRule='nonzero'\n               transform='matrix(0 -1.85282 4.72905 0 -673.298 391.586)'\n             />\n           </svg>\n         );\n       };\n\nexport const IconEdit = (props: { color: string }) => {\n  return (\n    <svg\n      viewBox='0 0 221 221'\n      xmlns='http://www.w3.org/2000/svg'\n      fillRule='evenodd'\n      clipRule='evenodd'\n      strokeLinejoin='round'\n      strokeMiterlimit='1.414'>\n      <path\n        d='M376.138,14.684C358.587,-2.868 330.132,-2.868 312.581,14.684L134.407,192.858C133.186,194.079 132.304,195.592 131.844,197.254L108.413,281.843C107.45,285.311 108.429,289.025 110.972,291.573C113.52,294.116 117.234,295.095 120.702,294.136L205.291,270.701C206.953,270.241 208.466,269.359 209.688,268.138L387.858,89.961C405.382,72.398 405.382,43.966 387.858,26.403L376.138,14.684ZM156.167,199.349L301.989,53.524L349.018,100.552L203.192,246.378L156.167,199.349ZM146.773,218.2L184.346,255.776L132.374,270.175L146.773,218.2ZM373.735,75.838L363.144,86.43L316.111,39.398L326.707,28.806C336.456,19.057 352.263,19.057 362.012,28.806L373.735,40.525C383.469,50.286 383.469,66.082 373.735,75.838Z'\n        fill={colorsArray[props.color]}\n        fillRule='nonzero'\n        transform='matrix(.7519 0 0 .7519 -81.243 -1.143)'\n      />\n    </svg>\n  );\n};\nexport const IconDelete = (props: { color: string }) => {\n  return (\n    <svg\n      viewBox='0 0 244 300'\n      xmlns='http://www.w3.org/2000/svg'\n      fillRule='evenodd'\n      clipRule='evenodd'\n      strokeLinejoin='round'\n      strokeMiterlimit='1.414'>\n      <g fill={colorsArray[props.color]} fillRule='nonzero'>\n        <path\n          d='M272.398,154.703C266.875,154.703 262.398,159.179 262.398,164.703L262.398,353.702C262.398,359.222 266.875,363.702 272.398,363.702C277.922,363.702 282.398,359.222 282.398,353.702L282.398,164.703C282.398,159.179 277.922,154.703 272.398,154.703Z'\n          transform='matrix(.70258 0 0 .70258 -28.103 0)'\n        />\n        <path\n          d='M154.399,154.703C148.875,154.703 144.399,159.179 144.399,164.703L144.399,353.702C144.399,359.222 148.875,363.702 154.399,363.702C159.922,363.702 164.399,359.222 164.399,353.702L164.399,164.703C164.399,159.179 159.922,154.703 154.399,154.703Z'\n          transform='matrix(.70258 0 0 .70258 -28.103 0)'\n        />\n        <path\n          d='M68.399,127.121L68.399,373.499C68.399,388.061 73.739,401.737 83.067,411.55C92.352,421.389 105.274,426.975 118.797,426.999L308,426.999C321.527,426.975 334.449,421.389 343.73,411.55C353.058,401.737 358.398,388.061 358.398,373.499L358.398,127.121C376.941,122.199 388.956,104.285 386.476,85.258C383.992,66.234 367.785,52.004 348.597,52L297.398,52L297.398,39.5C297.457,28.988 293.301,18.894 285.859,11.469C278.418,4.047 268.308,-0.086 257.797,0L169,0C158.488,-0.086 148.379,4.047 140.938,11.469C133.496,18.894 129.34,28.988 129.399,39.5L129.399,52L78.2,52C59.012,52.004 42.805,66.234 40.321,85.258C37.84,104.285 49.856,122.199 68.399,127.121ZM308,406.999L118.797,406.999C101.7,406.999 88.399,392.311 88.399,373.499L88.399,128L338.398,128L338.398,373.499C338.398,392.311 325.097,406.999 308,406.999ZM149.399,39.5C149.332,34.293 151.379,29.281 155.074,25.605C158.766,21.93 163.789,19.91 169,20L257.797,20C263.008,19.91 268.031,21.93 271.722,25.605C275.418,29.277 277.465,34.293 277.398,39.5L277.398,52L149.399,52L149.399,39.5ZM78.2,72L348.597,72C358.539,72 366.597,80.058 366.597,90C366.597,99.941 358.539,108 348.597,108L78.2,108C68.258,108 60.2,99.941 60.2,90C60.2,80.058 68.258,72 78.2,72Z'\n          transform='matrix(.70258 0 0 .70258 -28.103 0)'\n        />\n        <path\n          d='M213.398,154.703C207.875,154.703 203.398,159.179 203.398,164.703L203.398,353.702C203.398,359.222 207.875,363.702 213.398,363.702C218.922,363.702 223.398,359.222 223.398,353.702L223.398,164.703C223.398,159.179 218.922,154.703 213.398,154.703Z'\n          transform='matrix(.70258 0 0 .70258 -28.103 0)'\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport const iconClose = (color: string) => <svg />;\n","import React from \"react\";\n\n/**\n * React JSX component to wrap page\n *\n * @param {object} props - Children to display, boolean labels - opposite and welcome\n *\n * @returns {JSX.Element}\n *\n */\nconst Page = (props: {\n  children: any;\n  opposite?: boolean;\n  welcome?: boolean;\n}): JSX.Element => {\n  let pageStyle = props.opposite\n    ? \"pageOpposite\"\n    : props.welcome\n    ? \"welcome\"\n    : \"pageWithContent\";\n  return <main className={pageStyle}>{props.children}</main>;\n};\n\nexport default Page;\n","import React from \"react\";\n\nimport { colorsArray } from \"../style/_colors\";\n\nconst styleZero = {\n  display: \"none\"\n};\n\nconst styleSeparator = {\n  borderLeft: `.05rem solid ${colorsArray.grey}`,\n  borderRight: `.05rem solid ${colorsArray.grey}`,\n  height: \"1rem\",\n  width: \".3rem\",\n  marginRight: \".7rem\",\n  marginLeft: '.7rem'\n};\n\nconst spacerFactory = (size: number, units: string) => {\n  const style = {\n    height: `${size}${units}`,\n    width: `${size}${units}`\n  };\n  return <span style={style} />;\n};\n\nexport const Spacer = (props: { size: number; units: string }) =>\n  spacerFactory(props.size, props.units);\n\nexport const Zero = () => <span style={styleZero} />;\n\nexport const Separator = () => <span style={styleSeparator} />;\n","import React from \"react\";\n\nimport style from \"./style/Loading.module.scss\";\n\nconst Loading = () => {\n  return (\n    <div className={style.loading}>\n      <div />\n      <div />\n      <div />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\n\nimport styleFactory from \"../modules/style_factory\";\n\n/**\n * Component to wrap buttons and arrange then vertically/horizontally/RTL\n *\n * @param {object} props - Children, direction, column/row arrangement\n *\n * @returns {JSX.Element}\n */\nconst ButtonsWrapper = (props: {\n  children: any;\n  direction: string;\n  column?: boolean;\n  row?: boolean;\n}): JSX.Element => {\n  const orientation = props.column ? \"vertical\" : \"horizontal\";\n  const wrapStyle = props.column\n    ? \"vertical\"\n    : styleFactory(orientation, props.direction);\n  return <section className={wrapStyle}>{props.children}</section>;\n};\n\nexport default ButtonsWrapper;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button-template\":\"NavButton_button-template__2NRFK\",\"navButton\":\"NavButton_navButton__3_h2y\",\"navButtonEmpty\":\"NavButton_navButtonEmpty__1uTA3\",\"welcomeButton\":\"NavButton_welcomeButton__1HzJ5\",\"return\":\"NavButton_return__1gyED\"};","import React from 'react'\n\nimport styleFactory from '../modules/style_factory'\n\nimport styles from \"./style/Label.module.scss\";\n\nconst Label = (props:{direction: string, value: string}) => {\n  const hStyle = styles[styleFactory(\"label\", props.direction)];\n  return <h3 className={hStyle}>{props.value}</h3>;\n}\n\nexport default Label","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContent\":\"Welcome_pageContent__1HM2b\",\"divider\":\"Welcome_divider__yozX3\"};","import { AppState } from \"../store\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setLanguage } from \"../store/users/actions\";\nimport { data, indexedObjAny } from \"../store/types\";\n\nconst LangSwitch = (props: {\n  language: indexedObjAny;\n  data: indexedObjAny;\n  user: string;\n  setLanguage: (arg0: string, arg1: string) => void;\n}) => {\n  return (\n    <select\n      className='langSwitch'\n      value={props.language.short}\n      onChange={e => props.setLanguage(e.target.value, props.user)}>\n      {Object.keys(props.data.language).map((lang: string) => (\n        <option key={lang}>{lang}</option>\n      ))}\n    </select>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    language: state.language,\n    data: state.data,\n    user: state.locationData._id\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setLanguage }\n)(LangSwitch);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new\":\"NewButton_new__2lL64\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__3w2w6\",\"labelRTL\":\"Label_labelRTL__1NIfD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__2BKoV\",\"left-swing\":\"Loading_left-swing__hRiH5\",\"right-swing\":\"Loading_right-swing__2CuJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"langSwitch\":\"Login_langSwitch__1_wiY\"};","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { formSection } from \"../../components/formSection\";\n\nimport { AppState } from \"../../store\";\nimport * as TYPE from \"../../store/types\";\nimport {\n  login,\n  setModule,\n  setMessage,\n  setLoading\n} from \"../../store/users/actions\";\n\nimport Loading from \"../../components/Loading\";\nimport ButtonsWrapper from \"../../layout/ButtonsWrapper\";\nimport Button from \"../../components/Button\";\n\nimport button from \"../../components/style/Button.module.scss\";\n\n/** Functional component to render login/register page\n *\n * @param {object} props - Object, containing functions & state from Redux\n * @returns {JSX.Element} - Login page\n */\nconst LoginUser = (props: {\n  registerResult: TYPE.apiResponse;\n  language: TYPE.indexedObjAny;\n  message: string;\n  loading: boolean;\n  login: (arg0: TYPE.login) => void;\n  setModule: (arg0: string) => void;\n  setMessage: (arg0: string) => void;\n  setLoading: (arg0: boolean) => void;\n}) => {\n  // get the language\n  const { text, direction } = props.language;\n  // set local hooks\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  // set message\n  const [errorMessage, setErrorMessage] = useState(props.message);\n\n  // handle data submit\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const login: TYPE.login = { email: email, pass: pass };\n    props.login(login);\n  };\n\n  // handle fields input changes\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { value, name } = event.target;\n    setErrorMessage(\"\");\n    if (name === \"email\") {\n      setEmail(value);\n    } else {\n      setPass(value);\n    }\n  };\n\n  const handleSecondaryButton = () => {\n    props.setModule(\"register\");\n    props.setMessage(\"\");\n  };\n\n  // set the form elements\n  const showElement = props.loading ? (\n    <div className='formLoading'>\n      <Loading />\n    </div>\n  ) : (\n    <div className='formMessage'>{errorMessage}</div>\n  );\n\n  let emailElement = formSection({\n    label: text[\"login.label.email\"],\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    placeholder: text[\"login.prompt.email\"],\n    action: handleInputChange,\n    focus: true\n  });\n\n  let passwordElement = formSection({\n    label: text[\"login.label.password\"],\n    type: \"password\",\n    name: \"pass\",\n    value: pass,\n    placeholder: text[\"login.prompt.password\"],\n    action: handleInputChange,\n    length: 7\n  });\n\n  return (\n    <form\n      className={direction === \"rtl\" ? \"formRight\" : \"formLeft\"}\n      onSubmit={(event: React.FormEvent<HTMLFormElement>) =>\n        handleSubmit(event)\n      }>\n      {emailElement}\n      {passwordElement}\n      {/* message & loading */}\n      {showElement}\n      {/* buttons */}\n      <ButtonsWrapper column direction={direction}>\n        <Button mode='form' submit disabled={props.loading} aria-label='Submit'>\n          <input\n            className={button.primary}\n            type='button'\n            value={text[\"login.button.login\"]}\n            id='submit_button'\n          />\n        </Button>\n        <Button mode='secondaryFlat' action={handleSecondaryButton}>\n          {text[\"login.button.register\"]}\n        </Button>\n      </ButtonsWrapper>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    registerResult: state.register,\n    language: state.language,\n    message: state.message,\n    loading: state.loading\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { login, setModule, setMessage, setLoading }\n)(LoginUser);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { formSection, formSelection } from \"../../components/formSection\";\n\nimport { AppState } from \"../../store\";\nimport * as TYPE from \"../../store/types\";\nimport {\n  register,\n  setModule,\n  setMessage,\n} from \"../../store/users/actions\";\n\nimport Loading from \"../../components/Loading\";\nimport ButtonsWrapper from \"../../layout/ButtonsWrapper\";\nimport Button from \"../../components/Button\";\nimport button from \"../../components/style/Button.module.scss\";\n\n/** Functional component to render login/register page\n *\n * @param {object} props - Object, containing functions & state from Redux\n * @returns {JSX.Element} - Login page\n */\nconst LoginUser = (props: {\n  locations: TYPE.apiResponse;\n  language: TYPE.indexedObjAny;\n  message: string;\n  loading: boolean;\n  register: (arg0: TYPE.register) => void;\n  setModule: (arg0: string) => void;\n  setMessage: (arg0: string) => void;\n\n}) => {\n  // get the language\n  const { text, direction } = props.language;\n\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [location, setLocation] = useState(props.locations.payload[0].value);\n  const [fName, setFname] = useState(\"\");\n  const [lName, setLname] = useState(\"\");\n\n  const [errorMessage, setErrorMessage] = useState(props.message);\n\n  // * form methods\n  // handle data submit\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    props.register({\n      email,\n      pass,\n      location,\n      fName,\n      lName,\n      lang: props.language.short\n    });\n  };\n  // handle fields input changes\n  const handleInputChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    setErrorMessage(\"\");\n    const { value, name } = event.target\n    switch (name) {\n      case \"fName\":\n        setFname(value);\n        break;\n      case \"lName\":\n        setLname(value);\n        break;\n      case \"pass\":\n        setPass(value);\n        break;\n      default:\n        setEmail(value);\n        break;\n    }\n  };\n  // handle location choice\n  const handleSelectChange = (event: any) => {\n    setLocation(event.target.value);\n  };\n\n  const handleSecondaryButton = () => {\n    props.setModule(\"login\");\n    props.setMessage(\"\");\n  };\n\n  // set the form elements\n  const showElement = props.loading ? (\n    <div className='formLoading'>\n      <Loading />\n    </div>\n  ) : (\n    <div className='formMessage'>{errorMessage}</div>\n  );\n\n  let emailElement = formSection({\n    label: text[\"login.label.email\"],\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    placeholder: text[\"login.prompt.email\"],\n    action: handleInputChange\n  });\n\n  let passwordElement = formSection({\n    label: text[\"login.label.password\"],\n    type: \"password\",\n    name: \"pass\",\n    value: pass,\n    placeholder: text[\"login.prompt.password\"],\n    action: handleInputChange,\n    length: 7\n  });\n\n  const locationsElement = formSelection({\n    list: props.locations.payload,\n    direction,\n    label: text[\"login.label.location\"],\n    action: handleSelectChange\n  });\n\n  const fNameElement = formSection({\n    label: text[\"login.label.fname\"],\n    type: \"text\",\n    name: \"fName\",\n    value: fName,\n    placeholder: text[\"login.prompt.fname\"],\n    action: handleInputChange,\n    length: 2,\n    focus: true\n  });\n  const lNameElement = formSection({\n    label: text[\"login.label.lname\"],\n    type: \"text\",\n    name: \"lName\",\n    value: lName,\n    placeholder: text[\"login.prompt.lname\"],\n    action: handleInputChange,\n    length: 3\n  });\n\n  return (\n    <form\n      className={direction === \"rtl\" ? \"formRight\" : \"formLeft\"}\n      onSubmit={handleSubmit}>\n      {/* visible during registration */}\n      {locationsElement}\n      {fNameElement}\n      {lNameElement}\n      {emailElement}\n      {passwordElement}\n      {/* message & loading */}\n      {showElement}\n      {/* buttons */}\n      <ButtonsWrapper column direction={direction}>\n        <Button mode='form' submit disabled={props.loading} aria-label='Submit'>\n          <input\n            className={button.primary}\n            type='button'\n            value={text[\"login.button.register\"]}\n            id='submit_button'\n          />\n        </Button>\n        <Button mode='secondaryFlat' action={handleSecondaryButton}>\n          {text[\"login.button.login\"]}\n        </Button>\n      </ButtonsWrapper>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    locations: state.locations,\n    registerResult: state.register,\n    language: state.language,\n    message: state.message,\n    loading: state.loading,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { register, setModule, setMessage,  }\n)(LoginUser);\n","import React from \"react\";\n\nimport Login from \"../features/Login\";\nimport Register from \"../features/Register\";\n\nimport LangSwitch from \"../components/LangSwitch\";\n\nimport Page from \"../layout/Page\";\n\nimport style from \"./style/Login.module.scss\";\n\n/** Functional component to render login/register page\n *\n * @returns {JSX.Element} - Login page\n */\nconst Enter = (props: { register?: boolean }) => {\n  const show = props.register? <Register /> : <Login />\n  return (\n    <Page opposite>\n      {show}\n      <div className={style.langSwitch}>\n        <LangSwitch />\n      </div>\n    </Page>\n  );\n};\n\nexport default Enter;\n","import React from \"react\";\n\nexport const municipalityRegular = (\n  <svg\n    width='90%'\n    height='90%'\n    viewBox='0 0 379 418'\n    xmlns='http://www.w3.org/2000/svg'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.414'>\n    <g fill='#fff'>\n      <rect x='157.057' y='150.972' width='13.088' height='12.241' />\n      <rect x='183.234' y='150.972' width='13.088' height='12.241' />\n      <rect x='209.41' y='150.972' width='13.088' height='12.241' />\n      <path\n        d='M352.561,379.469l0,-150.971l26.177,0l0,-38.355l-30.046,0l-153.188,-101.612l0,-29.774l52.352,0l0,-51.412l-52.352,0l0,-7.345l-12.27,0l0,88.531l-152.371,101.612l-30.863,0l0,38.355l26.176,0l0,150.971l-26.176,0l0,38.355l378.738,0l0,-38.355l-26.177,0Zm-12.27,0l-26.994,0l0,-150.971l26.994,0l0,150.971Zm-222.498,-150.971l0,137.098l12.27,0l0,-137.098l26.994,0l0,150.971l-79.346,0l0,-150.971l40.082,0Zm51.535,0l40.082,0l0,150.971l-40.082,0l0,-150.971Zm52.352,0l26.994,0l0,150.971l-26.994,0l0,-150.971Zm39.264,0l40.083,0l0,150.971l-40.083,0l0,-150.971Zm-25.358,-208.912l0,26.93l-40.082,0l0,-26.93l40.082,0Zm-45.808,79.577l136.794,90.98l-273.59,0l136.796,-90.98Zm-177.508,103.221l354.197,0l0,13.873l-354.197,0l0,-13.873Zm26.176,26.114l26.995,0l0,150.971l-26.995,0l0,-150.971Zm328.021,177.085l-354.197,0l0,-13.873l354.197,0l0,13.873Z'\n        fillRule='nonzero'\n      />\n    </g>\n  </svg>\n);\nexport const municipalityActive = (\n  <svg\n    width='90%'\n    height='90%'\n    viewBox='0 0 390 429'\n    xmlns='http://www.w3.org/2000/svg'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeMiterlimit='1.414'>\n    <path\n      d='M369.367,408.915l-349.467,0l0,-13.721l349.467,0l0,13.721Zm-25.826,-25.827l-26.634,0l0,-149.311l26.634,0l0,149.311Zm-180.787,0l-78.287,0l0,-149.311l39.547,0l0,135.59l12.106,0l0,-135.59l26.634,0l0,149.311Zm51.653,0l-39.547,0l0,-149.311l39.547,0l0,149.311Zm38.74,0l-26.633,0l0,-149.311l26.633,0l0,149.311Zm51.654,0l-39.547,0l0,-149.311l39.547,0l0,149.311Zm-232.44,0l-26.634,0l0,-149.311l26.634,0l0,149.311Zm297.006,-161.417l-349.467,0l0,-13.72l349.467,0l0,13.72Zm-39.362,-25.826l-269.936,0l134.968,-89.979l134.968,89.979Zm-154.337,-38.74l-12.914,0l0,12.106l12.914,0l0,-12.106Zm51.653,0l-12.914,0l0,12.106l12.914,0l0,-12.106Zm-25.827,0l-12.913,0l0,12.106l12.913,0l0,-12.106Zm38.74,-103.307l-39.547,0l0,-26.634l39.547,0l0,26.634Z'\n      fill='#fff'\n    />\n    <path\n      d='M355.647,383.088l0,-149.311l25.827,0l0,-37.932l-29.644,0l-151.143,-100.494l0,-29.447l51.653,0l0,-50.846l-51.653,0l0,-7.264l-12.106,0l0,87.557l-150.336,100.494l-30.451,0l0,37.932l25.827,0l0,149.311l-25.827,0l0,37.933l373.68,0l0,-37.933l-25.827,0Zm-115.413,-355.924l0,26.634l-39.547,0l0,-26.634l39.547,0Zm-220.334,180.787l349.467,0l0,13.72l-349.467,0l0,-13.72Zm349.467,200.964l-349.467,0l0,-13.721l349.467,0l0,13.721Z'\n      fill='none'\n      fillRule='nonzero'\n      stroke='#fff'\n      strokeWidth='9'\n    />\n  </svg>\n);\n\nexport const homeRegular = (\n  <svg\n    width='100%'\n    height='100%'\n    viewBox='0 0 464 385'\n    xmlns='http://www.w3.org/2000/svg'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.414'>\n    <g fill='#fff' fillRule='nonzero'>\n      <path d='M229.949,99.819c-29.686,0.033 -54.104,24.53 -54.138,54.312l0,24.274c0.125,29.709 24.525,54.085 54.138,54.085c29.613,0 54.013,-24.376 54.137,-54.085l0,-24.274c-0.033,-29.782 -24.451,-54.279 -54.137,-54.312Zm42.645,78.586c-0.111,23.393 -19.327,42.58 -42.645,42.58c-23.318,0 -42.535,-19.187 -42.645,-42.58l0,-24.274c0.11,-23.394 19.327,-42.581 42.645,-42.581c23.318,0 42.534,19.187 42.645,42.581l0,24.274Z' />\n      <path d='M140.112,384.435l179.674,0c3.152,0 5.746,-2.602 5.746,-5.765l0,-18.509l124.6,0c3.152,0 5.746,-2.602 5.746,-5.765l0,-47.812c-0.019,-28.121 -22.086,-51.693 -50.059,-53.475c-3.065,-0.228 -4.588,1.641 -6.202,3.616c-6.698,8.212 -16.734,12.982 -27.31,12.982c-11.181,0 -21.721,-5.33 -28.37,-14.348c-1.113,-1.51 -2.893,-2.384 -4.765,-2.338c-9.726,0.217 -19.206,3.125 -27.39,8.402c-10.602,-12.961 -26.125,-20.915 -42.806,-21.933c-3.006,-0.166 -4.443,1.608 -6.269,3.843c-7.807,9.572 -19.505,15.133 -31.833,15.133c-13.033,0 -25.318,-6.214 -33.069,-16.726c-1.118,-1.503 -2.895,-2.375 -4.764,-2.338c-15.68,0.365 -30.606,6.897 -41.539,18.178c-1.225,1.259 -2.379,2.568 -3.481,3.913c-7.639,-4.938 -16.416,-7.824 -25.487,-8.383c-3.064,-0.227 -4.587,1.642 -6.202,3.617c-6.698,8.212 -16.733,12.982 -27.309,12.982c-11.181,0 -21.721,-5.331 -28.37,-14.348c-1.114,-1.509 -2.894,-2.382 -4.765,-2.338c-28.777,0.736 -52.05,24.682 -52.057,53.561l0,47.812c0,3.163 2.594,5.765 5.746,5.765l124.791,0l0,18.509c0,3.162 2.593,5.764 5.744,5.765Zm196.546,-119.726c8.884,10.479 21.926,16.528 35.639,16.528c13.639,0 26.618,-5.983 35.501,-16.366c20.809,2.7 36.563,20.662 36.584,41.713l0,42.047l-118.852,0l0,-48.858c0.004,-10.062 -2.512,-19.965 -7.317,-28.796c5.562,-3.534 11.887,-5.683 18.445,-6.268Zm-146.148,-13.631c9.994,11.982 24.79,18.916 40.362,18.916c15.496,0 30.226,-6.866 40.22,-18.746c24.37,2.937 42.923,23.898 42.949,48.522l0,73.133l-168.182,0l0,-73.13c0.006,-25.272 19.548,-46.584 44.65,-48.695l0.001,0Zm-175.186,97.553l0,-42.047c0.006,-21.61 16.609,-39.878 38.057,-41.875c8.884,10.48 21.926,16.528 35.639,16.528c13.638,0 26.616,-5.983 35.5,-16.365c6.077,0.775 11.91,2.885 17.083,6.179c-4.764,8.817 -7.252,18.693 -7.237,28.722l0,48.858l-119.042,0Z' />\n      <path d='M419.597,200.349l0,-21.247c0,-26.474 -21.715,-48.259 -48.104,-48.259c-26.388,0 -48.103,21.785 -48.103,48.259l0,21.247c0,26.474 21.715,48.259 48.103,48.259c26.389,0 48.104,-21.785 48.104,-48.259Zm-84.714,0l0,-21.247c0,-20.149 16.526,-36.729 36.61,-36.729c20.084,0 36.611,16.58 36.611,36.729l0,21.247c-0.022,20.141 -16.535,36.707 -36.611,36.729c-20.075,-0.022 -36.589,-16.588 -36.611,-36.729l0.001,0Z' />\n      <path d='M136.316,200.349l0,-21.247c0,-26.474 -21.715,-48.259 -48.103,-48.259c-26.389,0 -48.104,21.785 -48.104,48.259l0,21.247c0,26.474 21.715,48.259 48.104,48.259c26.388,0 48.103,-21.785 48.103,-48.259Zm-84.714,0l0,-21.247c0,-20.149 16.527,-36.729 36.611,-36.729c20.084,0 36.61,16.58 36.61,36.729l0,21.247c-0.022,20.141 -16.535,36.707 -36.61,36.729c-20.076,-0.022 -36.589,-16.588 -36.611,-36.729Z' />\n      <path d='M463.768,91.894l0,-60.051c-0.014,-12.192 -10.009,-22.219 -22.161,-22.233l-150.466,0c-12.152,0.014 -22.147,10.041 -22.161,22.233l0,60.051c0.014,12.191 10.009,22.218 22.161,22.232l6.675,0.014c3.863,21.511 17.957,28.441 21.549,29.871c1.075,0.553 2.296,0.754 3.491,0.577c2.395,-0.372 4.339,-2.17 4.902,-4.535c0.405,-1.75 0.661,-3.531 0.766,-5.324c1.245,-13.365 4.088,-20.608 15.523,-20.608l97.56,0c12.15,-0.013 22.144,-10.038 22.161,-22.227Zm-11.493,0c-0.007,5.868 -4.818,10.695 -10.668,10.702l-97.565,0c-20.581,0 -25.102,16.498 -26.475,26.592c-3.267,-3.171 -6.931,-8.521 -8.467,-17.239c-0.991,-5.431 -5.778,-9.4 -11.281,-9.353l-6.678,0c-5.85,-0.007 -10.661,-4.834 -10.668,-10.702l0,-60.051c0.007,-5.869 4.818,-10.696 10.668,-10.703l150.466,0c5.85,0.007 10.661,4.834 10.668,10.703l0,60.051Z' />\n      <path d='M172.627,0l-150.466,0c-12.152,0.014 -22.147,10.041 -22.161,22.232l0,69.66c0.014,12.191 10.009,22.218 22.161,22.232l98.616,0.015c3.862,21.508 17.953,28.44 21.549,29.87c1.074,0.554 2.296,0.758 3.491,0.582c2.397,-0.371 4.341,-2.169 4.904,-4.535c0.6,-2.153 0.427,-4.703 0.207,-7.929c-0.352,-5.145 -0.831,-12.19 2.242,-15.491c1.551,-1.666 4.273,-2.512 8.09,-2.512l11.37,0c12.152,-0.014 22.147,-10.041 22.16,-22.232l0,-69.66c-0.013,-12.192 -10.01,-22.22 -22.163,-22.232Zm10.668,91.894c-0.007,5.868 -4.818,10.695 -10.668,10.702l-11.37,0c-7.129,0 -12.677,2.077 -16.489,6.172c-5.02,5.392 -5.728,12.81 -5.576,19.061c-2.879,-3.259 -5.793,-8.286 -7.13,-15.88c-0.992,-5.431 -5.778,-9.399 -11.281,-9.353l-98.62,0c-5.85,-0.007 -10.662,-4.834 -10.668,-10.702l0,-69.66c0.005,-5.869 4.817,-10.697 10.668,-10.704l150.466,0c5.85,0.007 10.661,4.834 10.668,10.702l0,69.662Z' />\n    </g>\n  </svg>\n);\n\nexport const homeActive = (\n  <svg\n    width='100%'\n    height='100%'\n    viewBox='0 0 470 391'\n    xmlns='http://www.w3.org/2000/svg'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinecap='round'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.5'>\n    <path\n      d='M347.042,105.596c-20.594,0.047 -25.104,16.512 -26.475,26.592c-3.267,-3.171 -6.931,-8.521 -8.467,-17.239c-0.991,-5.431 -5.778,-9.4 -11.281,-9.353l-6.678,0c-5.85,-0.007 -10.661,-4.834 -10.668,-10.702l0,-60.051c0.007,-5.869 4.818,-10.696 10.668,-10.703l150.466,0c5.85,0.007 10.661,4.834 10.668,10.703l0,60.051c-0.007,5.842 -4.775,10.652 -10.668,10.702l-97.565,0Z'\n      fill='#fff'\n    />\n    <path\n      d='M164.257,105.596c-7.179,0.019 -12.693,2.095 -16.489,6.172c-5.02,5.392 -5.728,12.81 -5.576,19.061c-2.879,-3.259 -5.793,-8.286 -7.13,-15.88c-0.992,-5.431 -5.778,-9.399 -11.281,-9.353l-98.62,0c-5.85,-0.007 -10.662,-4.834 -10.668,-10.702l0,-69.66c0.005,-5.869 4.817,-10.697 10.668,-10.704l150.466,0c5.85,0.007 10.661,4.834 10.668,10.702l0,69.662c-0.007,5.842 -4.776,10.652 -10.668,10.702l-11.37,0Z'\n      fill='#fff'\n    />\n    <path\n      d='M232.949,102.819c-29.686,0.033 -54.104,24.53 -54.138,54.312l0,24.274c0.125,29.709 24.525,54.085 54.138,54.085c29.613,0 54.013,-24.376 54.137,-54.085l0,-24.274c-0.033,-29.782 -24.451,-54.279 -54.137,-54.312Z'\n      fill='none'\n      stroke='#fff'\n      strokeWidth='6'\n    />\n    <path\n      d='M275.594,181.405c-0.111,23.393 -19.327,42.58 -42.645,42.58c-23.318,0 -42.535,-19.187 -42.645,-42.58l0,-24.274c0.11,-23.394 19.327,-42.581 42.645,-42.581c23.318,0 42.534,19.187 42.645,42.581l0,24.274Z'\n      fill='#fff'\n    />\n    <path\n      d='M322.786,387.435l-179.674,0c-3.151,-0.001 -5.744,-2.603 -5.744,-5.765l0,-18.509l-124.791,0c-3.207,-0.055 -5.746,-2.636 -5.746,-5.765l0,-47.812c0.007,-28.879 23.28,-52.825 52.057,-53.561c1.871,-0.044 3.651,0.829 4.765,2.338c6.649,9.017 17.189,14.348 28.37,14.348c10.576,0 20.611,-4.77 27.309,-12.982c1.615,-1.975 3.138,-3.844 6.202,-3.617c9.071,0.559 17.848,3.445 25.487,8.383c1.102,-1.345 2.256,-2.654 3.481,-3.913c10.933,-11.281 25.859,-17.813 41.539,-18.178c1.869,-0.037 3.646,0.835 4.764,2.338c7.751,10.512 20.036,16.726 33.069,16.726c12.328,0 24.026,-5.561 31.833,-15.133c1.826,-2.235 3.263,-4.009 6.269,-3.843c16.681,1.018 32.204,8.972 42.806,21.933c8.184,-5.277 17.664,-8.185 27.39,-8.402c1.872,-0.046 3.652,0.828 4.765,2.338c6.649,9.018 17.189,14.348 28.37,14.348c10.576,0 20.612,-4.77 27.31,-12.982c1.614,-1.975 3.137,-3.844 6.202,-3.616c27.973,1.782 50.04,25.354 50.059,53.475l0,47.812c0,3.129 -2.539,5.71 -5.746,5.765l-124.6,0l0,18.509c0,3.129 -2.539,5.71 -5.746,5.765Z'\n      fill='none'\n      stroke='#fff'\n      strokeWidth='6'\n    />\n    <path\n      d='M193.51,254.078l-0.001,0c-25.143,2.156 -44.644,23.45 -44.65,48.695l0,73.13l168.182,0l0,-73.133c-0.026,-24.624 -18.579,-45.585 -42.949,-48.522c-9.994,11.88 -24.724,18.746 -40.22,18.746c-15.543,0 -30.312,-6.908 -40.362,-18.916Z'\n      fill='#fff'\n    />\n    <path\n      d='M447.382,351.631l0,-42.047c-0.021,-21.051 -15.775,-39.013 -36.584,-41.713c-8.883,10.383 -21.862,16.366 -35.501,16.366c-13.713,0 -26.755,-6.049 -35.639,-16.528c-6.558,0.585 -12.883,2.734 -18.445,6.268c4.805,8.831 7.321,18.734 7.317,28.796l0,48.858l118.852,0Z'\n      fill='#fff'\n    />\n    <path\n      d='M137.366,351.631l0,-48.858c-0.015,-10.029 2.473,-19.905 7.237,-28.722c-5.173,-3.294 -11.006,-5.404 -17.083,-6.179c-8.884,10.382 -21.862,16.365 -35.5,16.365c-13.713,0 -26.755,-6.048 -35.639,-16.528c-21.448,1.997 -38.051,20.265 -38.057,41.875l0,42.047l119.042,0Z'\n      fill='#fff'\n    />\n    <path\n      d='M422.597,203.349l0,-21.247c0,-26.474 -21.715,-48.259 -48.104,-48.259c-26.388,0 -48.103,21.785 -48.103,48.259l0,21.247c0,26.474 21.715,48.259 48.103,48.259c26.389,0 48.104,-21.785 48.104,-48.259Z'\n      fill='none'\n      stroke='#fff'\n      strokeWidth='6'\n    />\n    <path\n      d='M337.883,203.349l0,-21.247c0,-20.149 16.526,-36.729 36.61,-36.729c20.084,0 36.611,16.58 36.611,36.729l0,21.247c-0.022,20.141 -16.535,36.707 -36.611,36.729c-20.075,-0.022 -36.589,-16.588 -36.611,-36.729l0.001,0Z'\n      fill='#fff'\n    />\n    <path\n      d='M139.316,203.349l0,-21.247c0,-26.474 -21.715,-48.259 -48.103,-48.259c-26.389,0 -48.104,21.785 -48.104,48.259l0,21.247c0,26.474 21.715,48.259 48.104,48.259c26.388,0 48.103,-21.785 48.103,-48.259Z'\n      fill='none'\n      stroke='#fff'\n      strokeWidth='6'\n    />\n    <path\n      d='M54.602,203.349l0,-21.247c0,-20.149 16.527,-36.729 36.611,-36.729c20.084,0 36.61,16.58 36.61,36.729l0,21.247c-0.022,20.141 -16.535,36.707 -36.61,36.729c-20.076,-0.022 -36.589,-16.588 -36.611,-36.729Z'\n      fill='#fff'\n    />\n    <path\n      d='M347.047,117.121c-11.449,0.037 -14.281,7.276 -15.523,20.608c-0.105,1.793 -0.361,3.574 -0.766,5.324c-0.563,2.365 -2.507,4.163 -4.902,4.535c-1.195,0.177 -2.416,-0.024 -3.491,-0.577c-3.592,-1.43 -17.686,-8.36 -21.549,-29.871l-6.675,-0.014c-12.152,-0.014 -22.147,-10.041 -22.161,-22.232l0,-60.051c0.014,-12.161 9.959,-22.169 22.161,-22.233l150.466,0c12.202,0.064 22.147,10.072 22.161,22.233l0,60.051c-0.017,12.158 -9.961,22.163 -22.161,22.227l-97.56,0Z'\n      fill='none'\n      stroke='#fff'\n      strokeWidth='6'\n    />\n    <path\n      d='M444.607,24.14l-150.466,0c-5.893,0.05 -10.661,4.86 -10.668,10.703l0,60.051c0.007,5.842 4.775,10.652 10.668,10.702l6.678,0c5.56,0 10.296,3.954 11.281,9.353c1.536,8.718 5.2,14.068 8.467,17.239c1.371,-10.08 5.881,-26.545 26.475,-26.592l97.565,0c5.893,-0.05 10.661,-4.86 10.668,-10.702l0,-60.051c-0.007,-5.843 -4.775,-10.653 -10.668,-10.703Z'\n      fill='#fff'\n    />\n    <path\n      d='M164.26,117.124c-3.86,0.014 -6.551,0.859 -8.09,2.512c-3.073,3.301 -2.594,10.346 -2.242,15.491c0.22,3.226 0.393,5.776 -0.207,7.929c-0.563,2.366 -2.507,4.164 -4.904,4.535c-1.195,0.176 -2.417,-0.028 -3.491,-0.582c-3.596,-1.43 -17.687,-8.362 -21.549,-29.87l-98.616,-0.015c-12.152,-0.014 -22.147,-10.041 -22.161,-22.232l0,-69.66c0.014,-12.16 9.959,-22.168 22.161,-22.232l150.466,0c12.203,0.062 22.15,10.071 22.163,22.232l0,69.66c-0.013,12.16 -9.958,22.168 -22.16,22.232l-11.37,0Z'\n      fill='none'\n      stroke='#fff'\n      strokeWidth='6'\n    />\n    <path\n      d='M175.627,14.53l-150.466,0c-5.894,0.05 -10.663,4.861 -10.668,10.704l0,69.66c0.006,5.842 4.775,10.652 10.668,10.702l98.62,0c5.56,0.001 10.295,3.954 11.281,9.353c1.337,7.594 4.251,12.621 7.13,15.88c-0.152,-6.251 0.556,-13.669 5.576,-19.061c3.796,-4.077 9.31,-6.153 16.489,-6.172l11.37,0c5.892,-0.05 10.661,-4.86 10.668,-10.702l0,-69.662c-0.007,-5.842 -4.776,-10.652 -10.668,-10.702Z'\n      fill='#fff'\n    />\n  </svg>\n);\n\nexport const newRegular = (\n  <svg\n    width='100%'\n    height='100%'\n    viewBox='0 0 500 500'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.41421'>\n    <rect id='white_frame' x='0' y='0' width='500' height='500' fill='none' />\n    <g id='surface1'>\n      <g>\n        <path\n          d='M369.625,142.846c1.176,1.912 3.218,2.962 5.308,2.962c1.111,0 2.235,-0.298 3.253,-0.924l33.724,-20.743c2.926,-1.799 3.84,-5.632 2.038,-8.558c-1.798,-2.926 -5.631,-3.839 -8.561,-2.038l-33.72,20.744c-2.926,1.798 -3.84,5.631 -2.042,8.557Z'\n          fill='#fff'\n          fillRule='nonzero'\n        />\n        <path\n          d='M453.255,184.182l-49.439,-4.802c-3.419,-0.337 -6.461,2.171 -6.795,5.589c-0.33,3.422 2.171,6.464 5.593,6.795l49.436,4.802c0.207,0.019 0.408,0.029 0.609,0.029c3.165,0 5.874,-2.404 6.185,-5.619c0.331,-3.418 -2.171,-6.461 -5.589,-6.794Z'\n          fill='#fff'\n          fillRule='nonzero'\n        />\n        <path\n          d='M344.384,99.398c0.739,0.289 1.503,0.428 2.252,0.428c2.492,0 4.844,-1.507 5.8,-3.969l18.006,-46.293c1.247,-3.201 -0.34,-6.808 -3.542,-8.052c-3.201,-1.244 -6.807,0.34 -8.052,3.542l-18.009,46.293c-1.244,3.201 0.34,6.807 3.545,8.051Z'\n          fill='#fff'\n          fillRule='nonzero'\n        />\n        <path\n          d='M300.444,65.111c-4.18,-6.769 -13.084,-8.882 -19.856,-4.702l-7.443,4.591c-3.282,2.022 -5.577,5.204 -6.464,8.953c-0.888,3.752 -0.263,7.624 1.759,10.903l4.28,6.934l-97.825,121.106l-20.659,12.747c-2.923,1.805 -3.83,5.638 -2.025,8.561c1.176,1.905 3.214,2.955 5.301,2.955c1.111,0 2.242,-0.298 3.259,-0.927l16.269,-10.038l31.706,51.387c-4.582,-0.299 -9.151,0.651 -13.301,2.783c-0.075,0.036 -0.146,0.074 -0.221,0.113c-0.557,0.295 -1.111,0.603 -1.652,0.937l-18.602,11.535c-2.041,1.267 -3.924,2.764 -5.635,4.439c-2.07,2.025 -3.882,4.309 -5.346,6.804l-4.592,6.921l-3.376,5.081c-0.029,-0.01 -0.061,-0.019 -0.087,-0.029c-0.052,-0.023 -0.101,-0.049 -0.153,-0.071c-0.262,-0.117 -0.521,-0.247 -0.771,-0.386c-0.055,-0.029 -0.107,-0.058 -0.159,-0.087c-0.275,-0.166 -0.544,-0.344 -0.8,-0.535c-0.055,-0.039 -0.107,-0.081 -0.159,-0.123c-0.233,-0.182 -0.463,-0.376 -0.68,-0.583c-0.026,-0.026 -0.055,-0.049 -0.081,-0.075c-0.233,-0.227 -0.454,-0.473 -0.664,-0.726c-0.046,-0.055 -0.088,-0.113 -0.133,-0.168c-0.208,-0.266 -0.405,-0.538 -0.583,-0.826l-26.884,-43.572c-1.271,-2.057 -1.663,-4.484 -1.105,-6.833c0.557,-2.353 1.996,-4.345 4.05,-5.612l8.049,-4.964c2.922,-1.805 3.833,-5.638 2.028,-8.561c-1.805,-2.926 -5.638,-3.833 -8.561,-2.028l-8.048,4.964c-4.883,3.013 -8.302,7.747 -9.627,13.333c-0.852,3.607 -0.761,7.288 0.217,10.758l-5.984,3.694c-8.007,4.941 -10.502,15.475 -5.561,23.485l15.184,24.609c2.391,3.879 6.153,6.591 10.589,7.644c1.315,0.311 2.644,0.466 3.966,0.466c3.127,0 6.198,-0.865 8.927,-2.55l5.994,-3.697c1.251,1.137 2.621,2.119 4.092,2.929l-17.273,26.019l-4.073,2.78c-0.849,-0.431 -1.782,-0.703 -2.761,-0.787c-2.002,-0.169 -3.946,0.447 -5.479,1.737l-10.718,9.02c-2.499,-1.594 -5.775,-1.62 -8.341,0.13c-0.12,0.084 -0.24,0.168 -0.353,0.259l-60.346,47.634c-3.535,2.79 -5.56,6.973 -5.56,11.474l0,19.38c0,8.058 6.558,14.616 14.617,14.616l98.716,0c4.452,0 8.606,-1.989 11.396,-5.463l8.184,-10.184c1.433,-1.639 2.042,-3.739 1.825,-5.777l11.013,-9.27c1.076,-0.904 1.85,-2.064 2.285,-3.364l25.387,5.204c0.375,0.078 0.755,0.12 1.137,0.127c0.742,0.012 1.481,0.022 2.219,0.022c6.017,0 11.996,-0.609 18.278,-4.406l25.575,-15.233c0.428,0.026 0.856,0.042 1.28,0.042c3.691,0 7.326,-1.014 10.557,-2.99l20.546,-12.559c9.555,-5.839 12.582,-18.366 6.743,-27.921c-1.993,-3.266 -4.812,-5.826 -8.143,-7.511c3.224,-6.179 3.234,-13.855 -0.658,-20.225c-2.825,-4.624 -7.267,-7.884 -12.52,-9.199c1.086,-4.984 0.337,-10.372 -2.524,-15.057c-2.702,-4.43 -6.895,-7.586 -11.849,-9.008c1.354,-5.204 0.687,-10.929 -2.33,-15.871c-0.784,-1.283 -1.701,-2.449 -2.715,-3.512l123.27,-26.832l4.28,6.934c2.725,4.416 7.459,6.85 12.303,6.85c2.583,0 5.198,-0.691 7.553,-2.145l7.443,-4.592c3.279,-2.025 5.576,-5.204 6.464,-8.956c0.888,-3.749 0.263,-7.621 -1.762,-10.903l-112.299,-182.002Zm-167.982,251.718c-1.053,0.648 -2.294,0.849 -3.493,0.564c-1.202,-0.285 -2.22,-1.021 -2.871,-2.071l-15.184,-24.609c-1.338,-2.168 -0.661,-5.022 1.507,-6.364l5.278,-3.256l20.041,32.477l-5.278,3.259Zm16.739,128.827c-0.415,0.519 -1.031,0.814 -1.695,0.814l-98.716,0c-1.199,0 -2.174,-0.976 -2.174,-2.174l0,-19.38c0,-0.671 0.301,-1.293 0.826,-1.708l56.6,-44.679l51.014,59.844l-5.855,7.283Zm12.649,-18.491l-44.747,-52.495l6.626,-5.576l44.414,52.779l-6.293,5.292Zm60.981,-12.034c-3.798,2.297 -7.362,2.702 -13.304,2.624l-31.874,-6.535c-0.755,-0.156 -1.517,-0.169 -2.252,-0.049l-39.126,-46.49l3.545,-2.421c0.003,0 0.007,-0.003 0.013,-0.006c0.058,-0.043 0.117,-0.091 0.175,-0.133c0.133,-0.101 0.266,-0.201 0.389,-0.308c0.061,-0.055 0.12,-0.113 0.178,-0.169c0.127,-0.116 0.243,-0.236 0.357,-0.362c0.045,-0.049 0.094,-0.101 0.136,-0.153c0.139,-0.168 0.272,-0.34 0.392,-0.518c0.013,-0.016 0.026,-0.029 0.035,-0.046l0.03,-0.042c0.009,-0.016 0.019,-0.032 0.029,-0.048l32.901,-49.553c0.071,-0.107 0.139,-0.217 0.204,-0.327c1.659,-2.868 4.034,-5.311 6.869,-7.07l18.602,-11.535c0.344,-0.214 0.694,-0.405 1.047,-0.583c0.158,-0.081 0.32,-0.15 0.479,-0.224c0.188,-0.084 0.373,-0.169 0.564,-0.243c0.217,-0.088 0.434,-0.169 0.658,-0.243c0.113,-0.042 0.23,-0.078 0.347,-0.113c0.272,-0.085 0.547,-0.166 0.823,-0.234l0.003,0c1.001,-0.243 2.018,-0.363 3.033,-0.369c0.022,0 0.045,0 0.064,0c0.298,0 0.593,0.013 0.888,0.032c0.094,0.01 0.188,0.016 0.285,0.026c0.263,0.023 0.522,0.052 0.781,0.091c0.153,0.023 0.308,0.055 0.464,0.084c0.395,0.075 0.787,0.169 1.173,0.282c0.149,0.042 0.301,0.081 0.447,0.126c0.197,0.068 0.389,0.143 0.583,0.221c0.152,0.058 0.308,0.116 0.457,0.181c0.191,0.081 0.382,0.172 0.57,0.266c0.143,0.071 0.282,0.142 0.418,0.217c0.188,0.1 0.376,0.207 0.561,0.321c0.126,0.078 0.249,0.159 0.372,0.24c0.185,0.123 0.37,0.246 0.548,0.382c0.11,0.081 0.214,0.168 0.317,0.253c0.185,0.145 0.367,0.291 0.541,0.45c0.849,0.765 1.595,1.646 2.204,2.641l0.457,0.748l6.632,10.823l8.324,13.582l2.116,3.458c0.201,0.327 0.366,0.667 0.493,1.02c0.389,1.063 0.45,2.223 0.175,3.37c-0.395,1.65 -1.436,3.062 -2.926,3.973l-3.743,2.287l-0.003,0.004c-0.259,0.155 -0.521,0.288 -0.794,0.405c-0.058,0.026 -0.116,0.051 -0.175,0.074c-0.269,0.11 -0.541,0.201 -0.816,0.272c-0.033,0.01 -0.068,0.016 -0.101,0.023c-0.259,0.062 -0.518,0.107 -0.777,0.136c-0.052,0.007 -0.101,0.013 -0.153,0.02c-0.278,0.022 -0.557,0.029 -0.832,0.019c-0.052,-0.003 -0.104,-0.007 -0.156,-0.01c-0.282,-0.019 -0.56,-0.052 -0.836,-0.107c-0.003,-0.003 -0.006,-0.003 -0.009,-0.003c-0.295,-0.062 -0.58,-0.146 -0.862,-0.249c-0.026,-0.01 -0.049,-0.017 -0.075,-0.026c-0.577,-0.221 -1.121,-0.532 -1.61,-0.93c-0.004,0 -0.004,-0.004 -0.004,-0.004c-0.246,-0.2 -0.466,-0.414 -0.67,-0.641c-0.016,-0.02 -0.033,-0.039 -0.052,-0.062c-0.194,-0.226 -0.376,-0.463 -0.528,-0.716l-6.202,-10.138c-2.31,-3.778 -5.975,-6.429 -10.32,-7.459c-4.452,-1.06 -9.066,-0.302 -12.987,2.132c-1.578,0.978 -2.634,2.608 -2.887,4.445c-0.071,0.532 -0.159,1.053 -0.253,1.569c-0.071,0.375 -0.152,0.748 -0.236,1.117c-0.026,0.124 -0.052,0.25 -0.081,0.373c-0.11,0.467 -0.23,0.927 -0.363,1.38c-0.003,0.017 -0.01,0.036 -0.016,0.055c-0.697,2.389 -1.675,4.602 -2.933,6.614c-0.003,0.003 -0.003,0.006 -0.003,0.009c-2.317,3.714 -5.589,6.853 -9.879,9.462c-2.936,1.785 -3.869,5.612 -2.084,8.548c1.786,2.935 5.612,3.868 8.548,2.083c3.03,-1.844 5.716,-3.911 8.065,-6.189l25.98,40.973c4.786,7.423 13.058,11.729 21.615,11.729c0.454,0 0.908,-0.023 1.361,-0.048c0.178,0.324 0.36,0.644 0.554,0.965c0.733,1.196 1.575,2.297 2.511,3.299l-18.391,10.952Zm5.278,-45.739c0,0.003 0.004,0.006 0.004,0.01c0.103,0.291 0.217,0.576 0.336,0.865c0.013,0.032 0.026,0.068 0.043,0.103c0.107,0.26 0.223,0.516 0.343,0.771c0.029,0.056 0.052,0.117 0.081,0.175c0.113,0.24 0.24,0.477 0.363,0.713c0.039,0.072 0.071,0.143 0.11,0.211c0.165,0.305 0.34,0.606 0.522,0.904c0.311,0.512 0.651,1.001 1.001,1.477c0.126,0.169 0.256,0.334 0.386,0.499c0.23,0.292 0.466,0.574 0.709,0.853c0.172,0.194 0.34,0.395 0.519,0.583c0.133,0.142 0.278,0.272 0.418,0.411c0.502,0.503 1.027,0.976 1.578,1.423c0.058,0.045 0.113,0.094 0.171,0.136c1.07,0.849 2.217,1.584 3.438,2.203c-1.124,2.116 -1.866,4.41 -2.197,6.772c-4.102,-0.256 -7.983,-2.417 -10.271,-5.968l-28.601,-45.107c1.325,-2.738 2.346,-5.661 3.039,-8.775c0.444,-0.025 0.891,0.013 1.332,0.117c1.095,0.259 2.012,0.917 2.582,1.847l6.202,10.139c0.01,0.013 0.019,0.026 0.029,0.042c0.305,0.496 0.632,0.975 0.985,1.438c0.259,0.341 0.538,0.658 0.817,0.976c0.097,0.11 0.184,0.23 0.285,0.34c0.013,0.055 0.029,0.11 0.042,0.165c0.097,0.431 0.207,0.859 0.33,1.283c0.039,0.123 0.075,0.247 0.111,0.37c0.152,0.479 0.314,0.956 0.502,1.422c0.016,0.049 0.039,0.094 0.058,0.139c0.172,0.428 0.363,0.846 0.567,1.261c0.058,0.12 0.117,0.24 0.178,0.356c0.234,0.454 0.477,0.901 0.742,1.342c2.823,4.62 7.258,7.873 12.501,9.195c-0.81,3.707 -0.583,7.631 0.745,11.309Zm3.97,-74.042l2.089,-1.277c1.844,-1.127 4.015,-1.468 6.118,-0.962c2.1,0.509 3.875,1.801 5,3.645c2.323,3.804 1.121,8.791 -2.683,11.114l-2.077,1.27l-6.15,-10.035l-2.297,-3.755Zm46.364,74.729c2.044,0.492 3.771,1.753 4.87,3.548c2.261,3.703 1.088,8.557 -2.615,10.822l-20.546,12.559c-1.65,1.008 -3.568,1.361 -5.457,1.03c-0.107,-0.022 -0.217,-0.048 -0.327,-0.064c-0.055,-0.013 -0.114,-0.02 -0.169,-0.033c-2.047,-0.492 -3.774,-1.753 -4.873,-3.548c-0.492,-0.807 -0.81,-1.665 -0.988,-2.54c-0.003,-0.026 -0.003,-0.049 -0.01,-0.071c-0.492,-2.557 0.331,-5.169 2.087,-6.983c0.048,-0.049 0.094,-0.1 0.142,-0.146c0.091,-0.087 0.185,-0.172 0.279,-0.256c0.094,-0.084 0.191,-0.168 0.295,-0.246c0.074,-0.062 0.146,-0.12 0.224,-0.178c0.184,-0.136 0.369,-0.266 0.567,-0.389c0.006,-0.003 0.013,-0.007 0.016,-0.01l4.082,-2.495c0.72,-0.334 1.426,-0.7 2.113,-1.118l15.718,-9.61c1.458,-0.544 3.043,-0.645 4.592,-0.272Zm-14.312,-27.27c1.672,-0.8 3.551,-1.001 5.378,-0.56c2.1,0.505 3.876,1.801 5.003,3.645c2.323,3.804 1.118,8.787 -2.683,11.11l-3.7,2.262c-0.726,0.334 -1.439,0.71 -2.129,1.131l-15.637,9.555c-2.919,1.147 -6.205,0.473 -8.437,-1.587l-0.004,-0.004c-0.175,-0.162 -0.34,-0.327 -0.499,-0.505c-0.042,-0.049 -0.081,-0.101 -0.123,-0.149c-0.116,-0.136 -0.233,-0.272 -0.343,-0.418c-0.153,-0.204 -0.295,-0.415 -0.431,-0.632c-0.136,-0.227 -0.259,-0.454 -0.373,-0.687c-0.036,-0.074 -0.065,-0.149 -0.1,-0.227c-0.072,-0.158 -0.143,-0.32 -0.204,-0.486c-0.033,-0.087 -0.059,-0.171 -0.088,-0.259c-0.052,-0.159 -0.1,-0.314 -0.143,-0.473c-0.022,-0.087 -0.045,-0.178 -0.064,-0.266c-0.036,-0.158 -0.068,-0.32 -0.098,-0.486c-0.012,-0.084 -0.025,-0.168 -0.038,-0.252c-0.023,-0.169 -0.039,-0.337 -0.049,-0.506c-0.006,-0.081 -0.013,-0.162 -0.016,-0.243c-0.007,-0.175 -0.007,-0.35 0,-0.522c0,-0.077 0,-0.152 0.006,-0.226c0.007,-0.179 0.029,-0.354 0.049,-0.529c0.01,-0.074 0.013,-0.149 0.026,-0.223c0.022,-0.156 0.055,-0.311 0.087,-0.467c0.353,-1.665 1.225,-3.224 2.592,-4.419c0.056,-0.049 0.104,-0.107 0.159,-0.156c0.078,-0.068 0.153,-0.136 0.234,-0.201c0.194,-0.11 0.392,-0.21 0.583,-0.327l20.186,-12.339c0.292,-0.178 0.577,-0.363 0.856,-0.554Zm-9.666,-24.82c2.1,0.506 3.875,1.802 5.003,3.645c2.164,3.545 1.264,8.117 -1.947,10.606c-0.208,0.113 -0.412,0.23 -0.616,0.353l-15.585,9.526c0.051,-0.039 0.1,-0.084 0.152,-0.126c0.298,-0.237 0.596,-0.477 0.875,-0.729c0.175,-0.156 0.34,-0.321 0.508,-0.483c0.253,-0.246 0.506,-0.496 0.746,-0.758c0.165,-0.175 0.32,-0.36 0.476,-0.542c0.224,-0.265 0.444,-0.531 0.651,-0.806c0.146,-0.192 0.292,-0.386 0.431,-0.587c0.198,-0.282 0.386,-0.57 0.571,-0.865c0.126,-0.204 0.252,-0.405 0.369,-0.612c0.178,-0.311 0.34,-0.632 0.499,-0.953c0.1,-0.204 0.207,-0.402 0.298,-0.609c0.162,-0.36 0.305,-0.729 0.447,-1.102c0.065,-0.178 0.143,-0.353 0.204,-0.534c0.191,-0.561 0.363,-1.128 0.502,-1.708c0.133,-0.554 0.237,-1.111 0.318,-1.669c0.026,-0.178 0.039,-0.356 0.062,-0.534c0.045,-0.383 0.081,-0.762 0.103,-1.144c0.01,-0.208 0.013,-0.415 0.016,-0.622c0.01,-0.357 0.007,-0.71 -0.006,-1.063c-0.006,-0.211 -0.019,-0.421 -0.032,-0.632c-0.026,-0.356 -0.068,-0.713 -0.114,-1.066c-0.026,-0.198 -0.048,-0.395 -0.081,-0.59c-0.068,-0.401 -0.152,-0.797 -0.249,-1.192c-0.033,-0.143 -0.059,-0.288 -0.094,-0.431c-0.143,-0.535 -0.305,-1.063 -0.496,-1.584c-0.039,-0.101 -0.084,-0.201 -0.126,-0.305c-0.136,-0.35 -0.269,-0.703 -0.428,-1.047l1.429,-0.874c1.844,-1.128 4.014,-1.468 6.114,-0.963Zm147.932,-62.837c-0.072,0.298 -0.282,0.855 -0.891,1.231l-7.443,4.595c-0.93,0.573 -2.158,0.285 -2.735,-0.648l-78.358,-126.997c-1.801,-2.923 -5.634,-3.83 -8.56,-2.028c-2.923,1.805 -3.83,5.638 -2.026,8.56l67.154,108.836l-144.572,31.472l-38.289,-62.06l92.971,-115.095l7.511,12.176c1.805,2.923 5.638,3.83 8.56,2.029c2.926,-1.805 3.834,-5.638 2.029,-8.564l-18.719,-30.335c-0.376,-0.609 -0.314,-1.202 -0.243,-1.5c0.071,-0.301 0.282,-0.859 0.891,-1.235l7.443,-4.591c0.933,-0.577 2.158,-0.285 2.735,0.648l112.299,182.006c0.376,0.609 0.314,1.202 0.243,1.5Z'\n          fill='#fff'\n          fillRule='nonzero'\n        />\n        <path\n          d='M300.444,65.111c-4.18,-6.769 -13.084,-8.882 -19.856,-4.702l-7.443,4.591c-3.282,2.022 -5.577,5.204 -6.464,8.953c-0.888,3.752 -0.263,7.624 1.759,10.903l4.28,6.934l-97.825,121.106l-20.659,12.747c-2.923,1.805 -3.83,5.638 -2.025,8.561c1.176,1.905 3.214,2.955 5.301,2.955c1.111,0 2.242,-0.298 3.259,-0.927l16.269,-10.038l31.706,51.387c-4.582,-0.299 -9.151,0.651 -13.301,2.783c-0.075,0.036 -0.146,0.074 -0.221,0.113c-0.557,0.295 -1.111,0.603 -1.652,0.937l-18.602,11.535c-2.041,1.267 -3.924,2.764 -5.635,4.439c-2.07,2.025 -3.882,4.309 -5.346,6.804l-4.592,6.921l-3.376,5.081c-0.029,-0.01 -0.061,-0.019 -0.087,-0.029c-0.052,-0.023 -0.101,-0.049 -0.153,-0.071c-0.262,-0.117 -0.521,-0.247 -0.771,-0.386c-0.055,-0.029 -0.107,-0.058 -0.159,-0.087c-0.275,-0.166 -0.544,-0.344 -0.8,-0.535c-0.055,-0.039 -0.107,-0.081 -0.159,-0.123c-0.233,-0.182 -0.463,-0.376 -0.68,-0.583c-0.026,-0.026 -0.055,-0.049 -0.081,-0.075c-0.233,-0.227 -0.454,-0.473 -0.664,-0.726c-0.046,-0.055 -0.088,-0.113 -0.133,-0.168c-0.208,-0.266 -0.405,-0.538 -0.583,-0.826l-26.884,-43.572c-1.271,-2.057 -1.663,-4.484 -1.105,-6.833c0.557,-2.353 1.996,-4.345 4.05,-5.612l8.049,-4.964c2.922,-1.805 3.833,-5.638 2.028,-8.561c-1.805,-2.926 -5.638,-3.833 -8.561,-2.028l-8.048,4.964c-4.883,3.013 -8.302,7.747 -9.627,13.333c-0.852,3.607 -0.761,7.288 0.217,10.758l-5.984,3.694c-8.007,4.941 -10.502,15.475 -5.561,23.485l15.184,24.609c2.391,3.879 6.153,6.591 10.589,7.644c1.315,0.311 2.644,0.466 3.966,0.466c3.127,0 6.198,-0.865 8.927,-2.55l5.994,-3.697c1.251,1.137 2.621,2.119 4.092,2.929l-17.273,26.019l-4.073,2.78c-0.849,-0.431 -1.782,-0.703 -2.761,-0.787c-2.002,-0.169 -3.946,0.447 -5.479,1.737l-10.718,9.02c-2.499,-1.594 -5.775,-1.62 -8.341,0.13c-0.12,0.084 -0.24,0.168 -0.353,0.259l-60.346,47.634c-3.535,2.79 -5.56,6.973 -5.56,11.474l0,19.38c0,8.058 6.558,14.616 14.617,14.616l98.716,0c4.452,0 8.606,-1.989 11.396,-5.463l8.184,-10.184c1.433,-1.639 2.042,-3.739 1.825,-5.777l11.013,-9.27c1.076,-0.904 1.85,-2.064 2.285,-3.364l25.387,5.204c0.375,0.078 0.755,0.12 1.137,0.127c0.742,0.012 1.481,0.022 2.219,0.022c6.017,0 11.996,-0.609 18.278,-4.406l25.575,-15.233c0.428,0.026 0.856,0.042 1.28,0.042c3.691,0 7.326,-1.014 10.557,-2.99l20.546,-12.559c9.555,-5.839 12.582,-18.366 6.743,-27.921c-1.993,-3.266 -4.812,-5.826 -8.143,-7.511c3.224,-6.179 3.234,-13.855 -0.658,-20.225c-2.825,-4.624 -7.267,-7.884 -12.52,-9.199c1.086,-4.984 0.337,-10.372 -2.524,-15.057c-2.702,-4.43 -6.895,-7.586 -11.849,-9.008c1.354,-5.204 0.687,-10.929 -2.33,-15.871c-0.784,-1.283 -1.701,-2.449 -2.715,-3.512l123.27,-26.832l4.28,6.934c2.725,4.416 7.459,6.85 12.303,6.85c2.583,0 5.198,-0.691 7.553,-2.145l7.443,-4.592c3.279,-2.025 5.576,-5.204 6.464,-8.956c0.888,-3.749 0.263,-7.621 -1.762,-10.903l-112.299,-182.002Zm-167.982,251.718c-1.053,0.648 -2.294,0.849 -3.493,0.564c-1.202,-0.285 -2.22,-1.021 -2.871,-2.071l-15.184,-24.609c-1.338,-2.168 -0.661,-5.022 1.507,-6.364l5.278,-3.256l20.041,32.477l-5.278,3.259Zm16.739,128.827c-0.415,0.519 -1.031,0.814 -1.695,0.814l-98.716,0c-1.199,0 -2.174,-0.976 -2.174,-2.174l0,-19.38c0,-0.671 0.301,-1.293 0.826,-1.708l56.6,-44.679l51.014,59.844l-5.855,7.283Zm12.649,-18.491l-44.747,-52.495l6.626,-5.576l44.414,52.779l-6.293,5.292Zm60.981,-12.034c-3.798,2.297 -7.362,2.702 -13.304,2.624l-31.874,-6.535c-0.755,-0.156 -1.517,-0.169 -2.252,-0.049l-39.126,-46.49l3.545,-2.421c0.003,0 0.007,-0.003 0.013,-0.006c0.058,-0.043 0.117,-0.091 0.175,-0.133c0.133,-0.101 0.266,-0.201 0.389,-0.308c0.061,-0.055 0.12,-0.113 0.178,-0.169c0.127,-0.116 0.243,-0.236 0.357,-0.362c0.045,-0.049 0.094,-0.101 0.136,-0.153c0.139,-0.168 0.272,-0.34 0.392,-0.518c0.013,-0.016 0.026,-0.029 0.035,-0.046l0.03,-0.042c0.009,-0.016 0.019,-0.032 0.029,-0.048l32.901,-49.553c0.071,-0.107 0.139,-0.217 0.204,-0.327c1.659,-2.868 4.034,-5.311 6.869,-7.07l18.602,-11.535c0.344,-0.214 0.694,-0.405 1.047,-0.583c0.158,-0.081 0.32,-0.15 0.479,-0.224c0.188,-0.084 0.373,-0.169 0.564,-0.243c0.217,-0.088 0.434,-0.169 0.658,-0.243c0.113,-0.042 0.23,-0.078 0.347,-0.113c0.272,-0.085 0.547,-0.166 0.823,-0.234l0.003,0c1.001,-0.243 2.018,-0.363 3.033,-0.369c0.022,0 0.045,0 0.064,0c0.298,0 0.593,0.013 0.888,0.032c0.094,0.01 0.188,0.016 0.285,0.026c0.263,0.023 0.522,0.052 0.781,0.091c0.153,0.023 0.308,0.055 0.464,0.084c0.395,0.075 0.787,0.169 1.173,0.282c0.149,0.042 0.301,0.081 0.447,0.126c0.197,0.068 0.389,0.143 0.583,0.221c0.152,0.058 0.308,0.116 0.457,0.181c0.191,0.081 0.382,0.172 0.57,0.266c0.143,0.071 0.282,0.142 0.418,0.217c0.188,0.1 0.376,0.207 0.561,0.321c0.126,0.078 0.249,0.159 0.372,0.24c0.185,0.123 0.37,0.246 0.548,0.382c0.11,0.081 0.214,0.168 0.317,0.253c0.185,0.145 0.367,0.291 0.541,0.45c0.849,0.765 1.595,1.646 2.204,2.641l0.457,0.748l6.632,10.823l8.324,13.582l2.116,3.458c0.201,0.327 0.366,0.667 0.493,1.02c0.389,1.063 0.45,2.223 0.175,3.37c-0.395,1.65 -1.436,3.062 -2.926,3.973l-3.743,2.287l-0.003,0.004c-0.259,0.155 -0.521,0.288 -0.794,0.405c-0.058,0.026 -0.116,0.051 -0.175,0.074c-0.269,0.11 -0.541,0.201 -0.816,0.272c-0.033,0.01 -0.068,0.016 -0.101,0.023c-0.259,0.062 -0.518,0.107 -0.777,0.136c-0.052,0.007 -0.101,0.013 -0.153,0.02c-0.278,0.022 -0.557,0.029 -0.832,0.019c-0.052,-0.003 -0.104,-0.007 -0.156,-0.01c-0.282,-0.019 -0.56,-0.052 -0.836,-0.107c-0.003,-0.003 -0.006,-0.003 -0.009,-0.003c-0.295,-0.062 -0.58,-0.146 -0.862,-0.249c-0.026,-0.01 -0.049,-0.017 -0.075,-0.026c-0.577,-0.221 -1.121,-0.532 -1.61,-0.93c-0.004,0 -0.004,-0.004 -0.004,-0.004c-0.246,-0.2 -0.466,-0.414 -0.67,-0.641c-0.016,-0.02 -0.033,-0.039 -0.052,-0.062c-0.194,-0.226 -0.376,-0.463 -0.528,-0.716l-6.202,-10.138c-2.31,-3.778 -5.975,-6.429 -10.32,-7.459c-4.452,-1.06 -9.066,-0.302 -12.987,2.132c-1.578,0.978 -2.634,2.608 -2.887,4.445c-0.071,0.532 -0.159,1.053 -0.253,1.569c-0.071,0.375 -0.152,0.748 -0.236,1.117c-0.026,0.124 -0.052,0.25 -0.081,0.373c-0.11,0.467 -0.23,0.927 -0.363,1.38c-0.003,0.017 -0.01,0.036 -0.016,0.055c-0.697,2.389 -1.675,4.602 -2.933,6.614c-0.003,0.003 -0.003,0.006 -0.003,0.009c-2.317,3.714 -5.589,6.853 -9.879,9.462c-2.936,1.785 -3.869,5.612 -2.084,8.548c1.786,2.935 5.612,3.868 8.548,2.083c3.03,-1.844 5.716,-3.911 8.065,-6.189l25.98,40.973c4.786,7.423 13.058,11.729 21.615,11.729c0.454,0 0.908,-0.023 1.361,-0.048c0.178,0.324 0.36,0.644 0.554,0.965c0.733,1.196 1.575,2.297 2.511,3.299l-18.391,10.952Zm5.278,-45.739c0,0.003 0.004,0.006 0.004,0.01c0.103,0.291 0.217,0.576 0.336,0.865c0.013,0.032 0.026,0.068 0.043,0.103c0.107,0.26 0.223,0.516 0.343,0.771c0.029,0.056 0.052,0.117 0.081,0.175c0.113,0.24 0.24,0.477 0.363,0.713c0.039,0.072 0.071,0.143 0.11,0.211c0.165,0.305 0.34,0.606 0.522,0.904c0.311,0.512 0.651,1.001 1.001,1.477c0.126,0.169 0.256,0.334 0.386,0.499c0.23,0.292 0.466,0.574 0.709,0.853c0.172,0.194 0.34,0.395 0.519,0.583c0.133,0.142 0.278,0.272 0.418,0.411c0.502,0.503 1.027,0.976 1.578,1.423c0.058,0.045 0.113,0.094 0.171,0.136c1.07,0.849 2.217,1.584 3.438,2.203c-1.124,2.116 -1.866,4.41 -2.197,6.772c-4.102,-0.256 -7.983,-2.417 -10.271,-5.968l-28.601,-45.107c1.325,-2.738 2.346,-5.661 3.039,-8.775c0.444,-0.025 0.891,0.013 1.332,0.117c1.095,0.259 2.012,0.917 2.582,1.847l6.202,10.139c0.01,0.013 0.019,0.026 0.029,0.042c0.305,0.496 0.632,0.975 0.985,1.438c0.259,0.341 0.538,0.658 0.817,0.976c0.097,0.11 0.184,0.23 0.285,0.34c0.013,0.055 0.029,0.11 0.042,0.165c0.097,0.431 0.207,0.859 0.33,1.283c0.039,0.123 0.075,0.247 0.111,0.37c0.152,0.479 0.314,0.956 0.502,1.422c0.016,0.049 0.039,0.094 0.058,0.139c0.172,0.428 0.363,0.846 0.567,1.261c0.058,0.12 0.117,0.24 0.178,0.356c0.234,0.454 0.477,0.901 0.742,1.342c2.823,4.62 7.258,7.873 12.501,9.195c-0.81,3.707 -0.583,7.631 0.745,11.309Zm3.97,-74.042l2.089,-1.277c1.844,-1.127 4.015,-1.468 6.118,-0.962c2.1,0.509 3.875,1.801 5,3.645c2.323,3.804 1.121,8.791 -2.683,11.114l-2.077,1.27l-6.15,-10.035l-2.297,-3.755Zm46.364,74.729c2.044,0.492 3.771,1.753 4.87,3.548c2.261,3.703 1.088,8.557 -2.615,10.822l-20.546,12.559c-1.65,1.008 -3.568,1.361 -5.457,1.03c-0.107,-0.022 -0.217,-0.048 -0.327,-0.064c-0.055,-0.013 -0.114,-0.02 -0.169,-0.033c-2.047,-0.492 -3.774,-1.753 -4.873,-3.548c-0.492,-0.807 -0.81,-1.665 -0.988,-2.54c-0.003,-0.026 -0.003,-0.049 -0.01,-0.071c-0.492,-2.557 0.331,-5.169 2.087,-6.983c0.048,-0.049 0.094,-0.1 0.142,-0.146c0.091,-0.087 0.185,-0.172 0.279,-0.256c0.094,-0.084 0.191,-0.168 0.295,-0.246c0.074,-0.062 0.146,-0.12 0.224,-0.178c0.184,-0.136 0.369,-0.266 0.567,-0.389c0.006,-0.003 0.013,-0.007 0.016,-0.01l4.082,-2.495c0.72,-0.334 1.426,-0.7 2.113,-1.118l15.718,-9.61c1.458,-0.544 3.043,-0.645 4.592,-0.272Zm-14.312,-27.27c1.672,-0.8 3.551,-1.001 5.378,-0.56c2.1,0.505 3.876,1.801 5.003,3.645c2.323,3.804 1.118,8.787 -2.683,11.11l-3.7,2.262c-0.726,0.334 -1.439,0.71 -2.129,1.131l-15.637,9.555c-2.919,1.147 -6.205,0.473 -8.437,-1.587l-0.004,-0.004c-0.175,-0.162 -0.34,-0.327 -0.499,-0.505c-0.042,-0.049 -0.081,-0.101 -0.123,-0.149c-0.116,-0.136 -0.233,-0.272 -0.343,-0.418c-0.153,-0.204 -0.295,-0.415 -0.431,-0.632c-0.136,-0.227 -0.259,-0.454 -0.373,-0.687c-0.036,-0.074 -0.065,-0.149 -0.1,-0.227c-0.072,-0.158 -0.143,-0.32 -0.204,-0.486c-0.033,-0.087 -0.059,-0.171 -0.088,-0.259c-0.052,-0.159 -0.1,-0.314 -0.143,-0.473c-0.022,-0.087 -0.045,-0.178 -0.064,-0.266c-0.036,-0.158 -0.068,-0.32 -0.098,-0.486c-0.012,-0.084 -0.025,-0.168 -0.038,-0.252c-0.023,-0.169 -0.039,-0.337 -0.049,-0.506c-0.006,-0.081 -0.013,-0.162 -0.016,-0.243c-0.007,-0.175 -0.007,-0.35 0,-0.522c0,-0.077 0,-0.152 0.006,-0.226c0.007,-0.179 0.029,-0.354 0.049,-0.529c0.01,-0.074 0.013,-0.149 0.026,-0.223c0.022,-0.156 0.055,-0.311 0.087,-0.467c0.353,-1.665 1.225,-3.224 2.592,-4.419c0.056,-0.049 0.104,-0.107 0.159,-0.156c0.078,-0.068 0.153,-0.136 0.234,-0.201c0.194,-0.11 0.392,-0.21 0.583,-0.327l20.186,-12.339c0.292,-0.178 0.577,-0.363 0.856,-0.554Zm-9.666,-24.82c2.1,0.506 3.875,1.802 5.003,3.645c2.164,3.545 1.264,8.117 -1.947,10.606c-0.208,0.113 -0.412,0.23 -0.616,0.353l-15.585,9.526c0.051,-0.039 0.1,-0.084 0.152,-0.126c0.298,-0.237 0.596,-0.477 0.875,-0.729c0.175,-0.156 0.34,-0.321 0.508,-0.483c0.253,-0.246 0.506,-0.496 0.746,-0.758c0.165,-0.175 0.32,-0.36 0.476,-0.542c0.224,-0.265 0.444,-0.531 0.651,-0.806c0.146,-0.192 0.292,-0.386 0.431,-0.587c0.198,-0.282 0.386,-0.57 0.571,-0.865c0.126,-0.204 0.252,-0.405 0.369,-0.612c0.178,-0.311 0.34,-0.632 0.499,-0.953c0.1,-0.204 0.207,-0.402 0.298,-0.609c0.162,-0.36 0.305,-0.729 0.447,-1.102c0.065,-0.178 0.143,-0.353 0.204,-0.534c0.191,-0.561 0.363,-1.128 0.502,-1.708c0.133,-0.554 0.237,-1.111 0.318,-1.669c0.026,-0.178 0.039,-0.356 0.062,-0.534c0.045,-0.383 0.081,-0.762 0.103,-1.144c0.01,-0.208 0.013,-0.415 0.016,-0.622c0.01,-0.357 0.007,-0.71 -0.006,-1.063c-0.006,-0.211 -0.019,-0.421 -0.032,-0.632c-0.026,-0.356 -0.068,-0.713 -0.114,-1.066c-0.026,-0.198 -0.048,-0.395 -0.081,-0.59c-0.068,-0.401 -0.152,-0.797 -0.249,-1.192c-0.033,-0.143 -0.059,-0.288 -0.094,-0.431c-0.143,-0.535 -0.305,-1.063 -0.496,-1.584c-0.039,-0.101 -0.084,-0.201 -0.126,-0.305c-0.136,-0.35 -0.269,-0.703 -0.428,-1.047l1.429,-0.874c1.844,-1.128 4.014,-1.468 6.114,-0.963Zm147.932,-62.837c-0.072,0.298 -0.282,0.855 -0.891,1.231l-7.443,4.595c-0.93,0.573 -2.158,0.285 -2.735,-0.648l-78.358,-126.997c-1.801,-2.923 -5.634,-3.83 -8.56,-2.028c-2.923,1.805 -3.83,5.638 -2.026,8.56l67.154,108.836l-144.572,31.472l-38.289,-62.06l92.971,-115.095l7.511,12.176c1.805,2.923 5.638,3.83 8.56,2.029c2.926,-1.805 3.834,-5.638 2.029,-8.564l-18.719,-30.335c-0.376,-0.609 -0.314,-1.202 -0.243,-1.5c0.071,-0.301 0.282,-0.859 0.891,-1.235l7.443,-4.591c0.933,-0.577 2.158,-0.285 2.735,0.648l112.299,182.006c0.376,0.609 0.314,1.202 0.243,1.5Z'\n          fill='#fff'\n          fillRule='nonzero'\n        />\n      </g>\n    </g>\n  </svg>\n);\nexport const newActive = (\n  <svg\n    width='100%'\n    height='100%'\n    viewBox='0 0 500 500'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinecap='round'\n    strokeMiterlimit='1.5'>\n    <rect id='white_filled' x='0' y='0' width='500' height='500' fill='none' />\n    <g>\n      <path\n        d='M303.92,68.167c-4.18,-6.769 -13.084,-8.882 -19.856,-4.702l-7.443,4.592c-3.282,2.022 -5.576,5.203 -6.464,8.952c-0.888,3.753 -0.262,7.625 1.76,10.904l4.28,6.934l-97.825,121.106l-20.66,12.747c-2.922,1.804 -3.83,5.638 -2.025,8.56c1.176,1.905 3.215,2.955 5.301,2.955c1.112,0 2.242,-0.298 3.26,-0.926l16.269,-10.039l31.705,51.387c-4.581,-0.298 -9.15,0.651 -13.301,2.783c-0.074,0.036 -0.145,0.075 -0.22,0.114c-0.557,0.294 -1.111,0.602 -1.653,0.936l-18.602,11.535c-2.041,1.267 -3.923,2.764 -5.634,4.439c-2.071,2.025 -3.882,4.31 -5.347,6.805l-4.591,6.921l-3.376,5.08c-0.029,-0.009 -0.062,-0.019 -0.088,-0.029c-0.052,-0.023 -0.1,-0.048 -0.152,-0.071c-0.262,-0.117 -0.522,-0.246 -0.771,-0.386c-0.055,-0.029 -0.107,-0.058 -0.159,-0.087c-0.275,-0.165 -0.544,-0.344 -0.8,-0.535c-0.055,-0.039 -0.107,-0.081 -0.159,-0.123c-0.233,-0.181 -0.463,-0.376 -0.681,-0.583c-0.025,-0.026 -0.055,-0.049 -0.081,-0.075c-0.233,-0.227 -0.453,-0.473 -0.664,-0.726c-0.045,-0.055 -0.087,-0.113 -0.133,-0.168c-0.207,-0.266 -0.405,-0.538 -0.583,-0.826l-26.884,-43.571c-1.27,-2.058 -1.662,-4.485 -1.105,-6.834c0.558,-2.352 1.996,-4.345 4.051,-5.612l8.048,-4.964c2.923,-1.805 3.833,-5.638 2.029,-8.561c-1.805,-2.925 -5.638,-3.833 -8.561,-2.028l-8.049,4.964c-4.883,3.013 -8.301,7.747 -9.626,13.334c-0.853,3.606 -0.762,7.287 0.217,10.757l-5.985,3.694c-8.006,4.941 -10.501,15.475 -5.56,23.485l15.183,24.609c2.392,3.879 6.154,6.591 10.589,7.644c1.316,0.311 2.644,0.466 3.966,0.466c3.127,0 6.199,-0.865 8.927,-2.55l5.995,-3.697c1.25,1.138 2.621,2.119 4.092,2.929l-17.274,26.019l-4.072,2.78c-0.849,-0.431 -1.783,-0.703 -2.761,-0.787c-2.003,-0.168 -3.947,0.447 -5.479,1.737l-10.719,9.021c-2.498,-1.595 -5.774,-1.621 -8.34,0.129c-0.12,0.084 -0.24,0.169 -0.353,0.259l-60.346,47.635c-3.535,2.789 -5.56,6.973 -5.56,11.473l0,19.38c0,8.058 6.558,14.616 14.616,14.616l98.716,0c4.453,0 8.606,-1.989 11.396,-5.463l8.185,-10.184c1.432,-1.639 2.041,-3.739 1.824,-5.777l11.014,-9.27c1.075,-0.904 1.85,-2.064 2.284,-3.363l25.387,5.203c0.376,0.078 0.755,0.12 1.137,0.127c0.742,0.013 1.481,0.022 2.22,0.022c6.017,0 11.995,-0.609 18.278,-4.406l25.575,-15.232c0.428,0.025 0.855,0.042 1.28,0.042c3.69,0 7.326,-1.015 10.556,-2.991l20.546,-12.559c9.556,-5.839 12.582,-18.366 6.743,-27.921c-1.992,-3.266 -4.811,-5.826 -8.142,-7.511c3.224,-6.179 3.233,-13.855 -0.658,-20.225c-2.825,-4.624 -7.268,-7.884 -12.52,-9.199c1.085,-4.983 0.337,-10.372 -2.524,-15.057c-2.703,-4.43 -6.895,-7.586 -11.85,-9.008c1.355,-5.204 0.687,-10.929 -2.329,-15.871c-0.785,-1.283 -1.702,-2.449 -2.716,-3.512l123.271,-26.832l4.28,6.934c2.725,4.416 7.459,6.85 12.303,6.85c2.582,0 5.197,-0.69 7.553,-2.145l7.443,-4.592c3.279,-2.025 5.576,-5.203 6.464,-8.956c0.888,-3.748 0.262,-7.621 -1.763,-10.903l-112.299,-182.002Z'\n        fill='none'\n        stroke='#fff'\n        strokeWidth='9px'\n      />\n      <path\n        d='M150.982,449.526l-98.716,0c-1.198,0 -2.174,-0.975 -2.174,-2.174l0,-19.38c0,-0.671 0.302,-1.293 0.826,-1.707l56.6,-44.68l51.014,59.844l-5.855,7.284c-0.396,0.495 -0.976,0.786 -1.695,0.813Z'\n        fill='#fff'\n        stroke='#fff'\n        strokeWidth='9px'\n      />\n      <path\n        d='M165.327,430.221l-44.747,-52.495l6.626,-5.576l44.413,52.78l-6.292,5.291Z'\n        fill='#fff'\n        stroke='#fff'\n        strokeWidth='9px'\n      />\n      <path\n        d='M226.308,418.187c-3.798,2.297 -7.362,2.702 -13.305,2.624l-31.874,-6.535c-0.755,-0.156 -1.516,-0.169 -2.252,-0.049l-39.125,-46.49l3.545,-2.421c0.003,0 0.006,-0.003 0.013,-0.006c0.058,-0.042 0.116,-0.091 0.175,-0.133c0.133,-0.1 0.265,-0.201 0.388,-0.308c0.062,-0.055 0.12,-0.113 0.179,-0.168c0.126,-0.117 0.243,-0.237 0.356,-0.363c0.045,-0.049 0.094,-0.101 0.136,-0.153c0.14,-0.168 0.272,-0.34 0.392,-0.518c0.013,-0.016 0.026,-0.029 0.036,-0.045l0.029,-0.042c0.01,-0.017 0.02,-0.033 0.029,-0.049l32.901,-49.552c0.072,-0.107 0.14,-0.218 0.204,-0.328c1.659,-2.867 4.034,-5.31 6.87,-7.07l18.602,-11.535c0.343,-0.214 0.693,-0.405 1.046,-0.583c0.159,-0.081 0.321,-0.149 0.48,-0.224c0.188,-0.084 0.372,-0.168 0.564,-0.243c0.217,-0.087 0.434,-0.168 0.657,-0.243c0.114,-0.042 0.23,-0.078 0.347,-0.113c0.272,-0.085 0.548,-0.166 0.823,-0.234l0.003,0c1.002,-0.243 2.019,-0.362 3.033,-0.369c0.023,0 0.046,0 0.065,0c0.298,0 0.593,0.013 0.888,0.032c0.094,0.01 0.188,0.017 0.285,0.026c0.262,0.023 0.522,0.052 0.781,0.091c0.152,0.023 0.308,0.055 0.463,0.084c0.395,0.075 0.788,0.169 1.173,0.282c0.149,0.042 0.301,0.081 0.447,0.127c0.198,0.068 0.389,0.142 0.583,0.22c0.153,0.058 0.308,0.117 0.457,0.181c0.192,0.081 0.383,0.172 0.571,0.266c0.142,0.071 0.282,0.143 0.418,0.217c0.188,0.101 0.375,0.208 0.56,0.321c0.127,0.078 0.25,0.159 0.373,0.24c0.184,0.123 0.369,0.246 0.547,0.382c0.111,0.081 0.214,0.169 0.318,0.253c0.185,0.146 0.366,0.291 0.541,0.45c0.849,0.765 1.594,1.646 2.203,2.641l0.457,0.748l6.633,10.823l8.324,13.583l2.116,3.457c0.201,0.327 0.366,0.667 0.492,1.021c0.389,1.062 0.451,2.222 0.175,3.369c-0.395,1.65 -1.435,3.062 -2.926,3.973l-3.742,2.288l-0.003,0.003c-0.259,0.155 -0.522,0.288 -0.794,0.405c-0.058,0.026 -0.117,0.052 -0.175,0.074c-0.269,0.111 -0.541,0.201 -0.817,0.273c-0.032,0.009 -0.068,0.016 -0.1,0.022c-0.259,0.062 -0.518,0.107 -0.778,0.136c-0.052,0.007 -0.1,0.013 -0.152,0.02c-0.279,0.022 -0.557,0.029 -0.833,0.019c-0.052,-0.003 -0.103,-0.006 -0.155,-0.01c-0.282,-0.019 -0.561,-0.051 -0.836,-0.106c-0.003,-0.004 -0.007,-0.004 -0.01,-0.004c-0.295,-0.061 -0.58,-0.146 -0.862,-0.249c-0.026,-0.01 -0.048,-0.016 -0.074,-0.026c-0.577,-0.22 -1.121,-0.532 -1.611,-0.93c-0.003,0 -0.003,-0.003 -0.003,-0.003c-0.246,-0.201 -0.467,-0.415 -0.671,-0.642c-0.016,-0.019 -0.032,-0.039 -0.052,-0.061c-0.194,-0.227 -0.375,-0.464 -0.528,-0.717l-6.201,-10.138c-2.311,-3.778 -5.975,-6.429 -10.32,-7.459c-4.453,-1.06 -9.067,-0.301 -12.987,2.132c-1.578,0.979 -2.634,2.608 -2.887,4.446c-0.072,0.531 -0.159,1.053 -0.253,1.568c-0.071,0.376 -0.152,0.748 -0.237,1.118c-0.025,0.123 -0.051,0.249 -0.081,0.372c-0.11,0.467 -0.23,0.927 -0.362,1.381c-0.004,0.016 -0.01,0.035 -0.017,0.055c-0.696,2.388 -1.675,4.601 -2.932,6.613c-0.003,0.003 -0.003,0.006 -0.003,0.01c-2.317,3.713 -5.59,6.853 -9.88,9.461c-2.935,1.785 -3.868,5.612 -2.083,8.548c1.785,2.935 5.612,3.869 8.548,2.083c3.029,-1.843 5.715,-3.911 8.064,-6.189l25.98,40.973c4.786,7.423 13.058,11.729 21.616,11.729c0.453,0 0.907,-0.022 1.361,-0.048c0.178,0.324 0.359,0.645 0.554,0.965c0.732,1.196 1.575,2.298 2.511,3.299l-18.391,10.952Z'\n        fill='#fff'\n        stroke='#fff'\n        strokeWidth='9px'\n      />\n      <path\n        d='M281.919,373.135c2.045,0.492 3.772,1.753 4.87,3.548c2.262,3.704 1.089,8.557 -2.615,10.822l-20.546,12.559c-1.649,1.008 -3.567,1.361 -5.456,1.031c-0.107,-0.023 -0.217,-0.049 -0.328,-0.065c-0.055,-0.013 -0.113,-0.02 -0.168,-0.033c-2.048,-0.492 -3.775,-1.753 -4.873,-3.548c-0.493,-0.806 -0.81,-1.665 -0.989,-2.54c-0.003,-0.026 -0.003,-0.049 -0.009,-0.071c-0.493,-2.557 0.33,-5.168 2.086,-6.983c0.049,-0.048 0.094,-0.1 0.143,-0.146c0.091,-0.087 0.185,-0.171 0.279,-0.256c0.094,-0.084 0.191,-0.168 0.294,-0.246c0.075,-0.061 0.146,-0.12 0.224,-0.178c0.185,-0.136 0.369,-0.266 0.567,-0.389c0.007,-0.003 0.013,-0.006 0.016,-0.01l4.083,-2.495c0.719,-0.333 1.426,-0.699 2.113,-1.117l15.718,-9.611c1.458,-0.544 3.042,-0.645 4.591,-0.272Z'\n        fill='#fff'\n        stroke='#fff'\n        strokeWidth='9px'\n      />\n      <path\n        d='M231.586,372.448c0,0.003 0.003,0.006 0.003,0.01c0.104,0.291 0.217,0.576 0.337,0.865c0.013,0.032 0.026,0.068 0.042,0.104c0.107,0.259 0.224,0.515 0.344,0.771c0.029,0.055 0.051,0.116 0.081,0.175c0.113,0.239 0.239,0.476 0.363,0.713c0.038,0.071 0.071,0.142 0.11,0.21c0.165,0.305 0.34,0.606 0.521,0.904c0.311,0.512 0.652,1.001 1.002,1.478c0.126,0.168 0.256,0.333 0.385,0.499c0.23,0.291 0.467,0.573 0.71,0.852c0.172,0.194 0.34,0.395 0.518,0.583c0.133,0.143 0.279,0.272 0.418,0.412c0.502,0.502 1.027,0.975 1.578,1.422c0.059,0.045 0.114,0.094 0.172,0.136c1.069,0.849 2.216,1.585 3.438,2.203c-1.125,2.116 -1.867,4.41 -2.197,6.773c-4.102,-0.256 -7.984,-2.418 -10.272,-5.969l-28.601,-45.107c1.325,-2.738 2.346,-5.66 3.04,-8.774c0.443,-0.026 0.891,0.013 1.331,0.116c1.095,0.26 2.012,0.917 2.583,1.847l6.201,10.139c0.01,0.013 0.02,0.026 0.03,0.042c0.304,0.496 0.631,0.975 0.985,1.439c0.259,0.34 0.537,0.657 0.816,0.975c0.097,0.11 0.185,0.23 0.285,0.34c0.013,0.055 0.029,0.11 0.042,0.165c0.098,0.431 0.208,0.859 0.331,1.284c0.039,0.123 0.074,0.246 0.11,0.369c0.152,0.479 0.314,0.956 0.502,1.422c0.017,0.049 0.039,0.094 0.059,0.14c0.171,0.427 0.363,0.845 0.567,1.26c0.058,0.12 0.116,0.24 0.178,0.357c0.233,0.453 0.476,0.9 0.742,1.341c2.822,4.621 7.258,7.874 12.501,9.196c-0.81,3.706 -0.584,7.63 0.745,11.308Z'\n        fill='#fff'\n        stroke='#fff'\n        strokeWidth='9px'\n      />\n      <path\n        d='M267.607,345.865c1.672,-0.8 3.551,-1.001 5.379,-0.56c2.1,0.505 3.875,1.801 5.003,3.645c2.323,3.804 1.118,8.787 -2.683,11.111l-3.7,2.261c-0.726,0.334 -1.439,0.71 -2.129,1.131l-15.637,9.556c-2.92,1.147 -6.205,0.473 -8.438,-1.588l-0.003,-0.003c-0.175,-0.162 -0.34,-0.328 -0.499,-0.506c-0.042,-0.048 -0.081,-0.1 -0.123,-0.149c-0.117,-0.136 -0.234,-0.272 -0.344,-0.418c-0.152,-0.204 -0.295,-0.415 -0.431,-0.632c-0.136,-0.227 -0.259,-0.453 -0.372,-0.687c-0.036,-0.074 -0.065,-0.149 -0.101,-0.226c-0.071,-0.159 -0.142,-0.321 -0.204,-0.486c-0.032,-0.088 -0.058,-0.172 -0.087,-0.26c-0.052,-0.158 -0.101,-0.314 -0.143,-0.473c-0.023,-0.087 -0.045,-0.178 -0.065,-0.265c-0.035,-0.159 -0.068,-0.321 -0.097,-0.487c-0.013,-0.084 -0.026,-0.168 -0.039,-0.252c-0.023,-0.169 -0.039,-0.337 -0.048,-0.506c-0.007,-0.081 -0.013,-0.162 -0.017,-0.243c-0.006,-0.175 -0.006,-0.35 0,-0.521c0,-0.078 0,-0.153 0.007,-0.227c0.006,-0.178 0.029,-0.353 0.048,-0.528c0.01,-0.075 0.013,-0.149 0.026,-0.224c0.023,-0.155 0.055,-0.311 0.088,-0.467c0.353,-1.665 1.225,-3.224 2.592,-4.419c0.055,-0.049 0.104,-0.107 0.159,-0.156c0.078,-0.068 0.152,-0.136 0.233,-0.201c0.194,-0.11 0.392,-0.21 0.583,-0.327l20.187,-12.339c0.291,-0.178 0.577,-0.362 0.855,-0.554Z'\n        fill='#fff'\n        stroke='#fff'\n        strokeWidth='9px'\n      />\n      <path\n        d='M257.942,321.045c2.099,0.506 3.875,1.802 5.003,3.646c2.164,3.544 1.263,8.116 -1.948,10.605c-0.207,0.113 -0.411,0.23 -0.615,0.353l-15.586,9.526c0.052,-0.039 0.101,-0.084 0.152,-0.126c0.299,-0.237 0.597,-0.476 0.875,-0.729c0.175,-0.156 0.341,-0.321 0.509,-0.483c0.253,-0.246 0.505,-0.496 0.745,-0.758c0.166,-0.175 0.321,-0.36 0.477,-0.541c0.223,-0.266 0.443,-0.532 0.651,-0.807c0.146,-0.191 0.291,-0.386 0.431,-0.587c0.197,-0.282 0.385,-0.57 0.57,-0.865c0.126,-0.204 0.253,-0.405 0.369,-0.612c0.179,-0.311 0.341,-0.632 0.499,-0.953c0.101,-0.204 0.208,-0.402 0.299,-0.609c0.162,-0.36 0.304,-0.729 0.447,-1.102c0.064,-0.178 0.142,-0.353 0.204,-0.534c0.191,-0.561 0.363,-1.128 0.502,-1.708c0.133,-0.554 0.237,-1.111 0.318,-1.669c0.026,-0.178 0.038,-0.356 0.061,-0.534c0.046,-0.383 0.081,-0.762 0.104,-1.144c0.01,-0.207 0.013,-0.415 0.016,-0.622c0.01,-0.356 0.007,-0.71 -0.006,-1.063c-0.007,-0.21 -0.02,-0.421 -0.033,-0.632c-0.026,-0.356 -0.068,-0.713 -0.113,-1.066c-0.026,-0.197 -0.049,-0.395 -0.081,-0.589c-0.068,-0.402 -0.153,-0.798 -0.25,-1.193c-0.032,-0.142 -0.058,-0.288 -0.094,-0.431c-0.142,-0.534 -0.304,-1.063 -0.495,-1.584c-0.039,-0.101 -0.085,-0.201 -0.127,-0.305c-0.136,-0.35 -0.269,-0.703 -0.428,-1.046l1.429,-0.875c1.844,-1.128 4.015,-1.468 6.115,-0.963Z'\n        fill='#fff'\n        stroke='#fff'\n        strokeWidth='9px'\n      />\n      <path\n        d='M135.938,319.885c-1.053,0.648 -2.294,0.849 -3.493,0.564c-1.202,-0.285 -2.219,-1.02 -2.871,-2.07l-15.183,-24.61c-1.338,-2.167 -0.661,-5.022 1.507,-6.363l5.278,-3.257l20.041,32.477l-5.279,3.259Z'\n        fill='#fff'\n        stroke='#fff'\n        strokeWidth='9px'\n      />\n      <path\n        d='M235.555,298.406l2.09,-1.277c1.844,-1.127 4.015,-1.467 6.118,-0.962c2.099,0.509 3.875,1.802 4.999,3.645c2.323,3.804 1.121,8.791 -2.683,11.114l-2.077,1.27l-6.15,-10.035l-2.297,-3.755Z'\n        fill='#fff'\n        stroke='#fff'\n        strokeWidth='9px'\n      />\n      <path\n        d='M405.873,258.208c-0.071,0.298 -0.282,0.856 -0.891,1.231l-7.443,4.595c-0.93,0.574 -2.158,0.285 -2.734,-0.648l-78.358,-126.997c-1.802,-2.922 -5.635,-3.83 -8.561,-2.028c-2.922,1.805 -3.83,5.638 -2.025,8.561l67.153,108.835l-144.571,31.472l-38.29,-62.06l92.972,-115.095l7.51,12.177c1.805,2.922 5.638,3.83 8.561,2.028c2.926,-1.805 3.833,-5.638 2.028,-8.564l-18.718,-30.335c-0.376,-0.609 -0.315,-1.202 -0.243,-1.5c0.071,-0.301 0.282,-0.858 0.891,-1.234l7.442,-4.592c0.934,-0.576 2.158,-0.285 2.735,0.648l112.299,182.006c0.376,0.609 0.315,1.202 0.243,1.5Z'\n        fill='#fff'\n        stroke='#fff'\n        strokeWidth='9px'\n      />\n      <path\n        d='M373.102,145.903c1.176,1.911 3.217,2.961 5.307,2.961c1.112,0 2.236,-0.298 3.253,-0.923l33.724,-20.744c2.926,-1.798 3.84,-5.632 2.039,-8.557c-1.799,-2.926 -5.632,-3.84 -8.561,-2.039l-33.721,20.744c-2.926,1.799 -3.84,5.632 -2.041,8.558Z'\n        fill='none'\n        stroke='#fff'\n        strokeWidth='7px'\n        strokeLinecap='butt'\n        strokeLinejoin='round'\n        strokeMiterlimit='1.41421'\n      />\n      <path\n        d='M456.731,187.238l-49.439,-4.802c-3.418,-0.337 -6.461,2.171 -6.794,5.589c-0.331,3.422 2.171,6.464 5.592,6.795l49.436,4.802c0.207,0.019 0.408,0.029 0.609,0.029c3.166,0 5.875,-2.404 6.186,-5.618c0.33,-3.419 -2.171,-6.461 -5.59,-6.795Z'\n        fill='none'\n        stroke='#fff'\n        strokeWidth='7px'\n        strokeLinecap='butt'\n        strokeLinejoin='round'\n        strokeMiterlimit='1.41421'\n      />\n      <path\n        d='M347.861,102.455c0.738,0.288 1.503,0.427 2.252,0.427c2.491,0 4.844,-1.506 5.799,-3.969l18.006,-46.293c1.248,-3.201 -0.34,-6.807 -3.541,-8.052c-3.202,-1.244 -6.808,0.341 -8.052,3.542l-18.009,46.293c-1.244,3.201 0.34,6.807 3.545,8.052Z'\n        fill='none'\n        stroke='#fff'\n        strokeWidth='7px'\n        strokeLinecap='butt'\n        strokeLinejoin='round'\n        strokeMiterlimit='1.41421'\n      />\n      <path\n        d='M150.982,449.526c0.719,-0.027 1.299,-0.318 1.695,-0.813l5.855,-7.284l-51.014,-59.844l-56.6,44.68c-0.524,0.414 -0.826,1.036 -0.826,1.707l0,19.38c0,1.199 0.976,2.174 2.174,2.174l98.716,0Z'\n        fill='#fff'\n      />\n      <path\n        d='M226.308,418.187c-3.798,2.297 -7.362,2.702 -13.305,2.624l-31.874,-6.535c-0.755,-0.156 -1.516,-0.169 -2.252,-0.049l-39.125,-46.49l3.545,-2.421c0.003,0 0.006,-0.003 0.013,-0.006c0.058,-0.042 0.116,-0.091 0.175,-0.133c0.133,-0.1 0.265,-0.201 0.388,-0.308c0.062,-0.055 0.12,-0.113 0.179,-0.168c0.126,-0.117 0.243,-0.237 0.356,-0.363c0.045,-0.049 0.094,-0.101 0.136,-0.153c0.14,-0.168 0.272,-0.34 0.392,-0.518c0.013,-0.016 0.026,-0.029 0.036,-0.045l0.029,-0.042c0.01,-0.017 0.02,-0.033 0.029,-0.049l32.901,-49.552c0.072,-0.107 0.14,-0.218 0.204,-0.328c1.659,-2.867 4.034,-5.31 6.87,-7.07l18.602,-11.535c0.343,-0.214 0.693,-0.405 1.046,-0.583c0.159,-0.081 0.321,-0.149 0.48,-0.224c0.188,-0.084 0.372,-0.168 0.564,-0.243c0.217,-0.087 0.434,-0.168 0.657,-0.243c0.114,-0.042 0.23,-0.078 0.347,-0.113c0.272,-0.085 0.548,-0.166 0.823,-0.234l0.003,0c1.002,-0.243 2.019,-0.362 3.033,-0.369c0.023,0 0.046,0 0.065,0c0.298,0 0.593,0.013 0.888,0.032c0.094,0.01 0.188,0.017 0.285,0.026c0.262,0.023 0.522,0.052 0.781,0.091c0.152,0.023 0.308,0.055 0.463,0.084c0.395,0.075 0.788,0.169 1.173,0.282c0.149,0.042 0.301,0.081 0.447,0.127c0.198,0.068 0.389,0.142 0.583,0.22c0.153,0.058 0.308,0.117 0.457,0.181c0.192,0.081 0.383,0.172 0.571,0.266c0.142,0.071 0.282,0.143 0.418,0.217c0.188,0.101 0.375,0.208 0.56,0.321c0.127,0.078 0.25,0.159 0.373,0.24c0.184,0.123 0.369,0.246 0.547,0.382c0.111,0.081 0.214,0.169 0.318,0.253c0.185,0.146 0.366,0.291 0.541,0.45c0.849,0.765 1.594,1.646 2.203,2.641l0.457,0.748l6.633,10.823l8.324,13.583l2.116,3.457c0.201,0.327 0.366,0.667 0.492,1.021c0.389,1.062 0.451,2.222 0.175,3.369c-0.395,1.65 -1.435,3.062 -2.926,3.973l-3.742,2.288l-0.003,0.003c-0.259,0.155 -0.522,0.288 -0.794,0.405c-0.058,0.026 -0.117,0.052 -0.175,0.074c-0.269,0.111 -0.541,0.201 -0.817,0.273c-0.032,0.009 -0.068,0.016 -0.1,0.022c-0.259,0.062 -0.518,0.107 -0.778,0.136c-0.052,0.007 -0.1,0.013 -0.152,0.02c-0.279,0.022 -0.557,0.029 -0.833,0.019c-0.052,-0.003 -0.103,-0.006 -0.155,-0.01c-0.282,-0.019 -0.561,-0.051 -0.836,-0.106c-0.003,-0.004 -0.007,-0.004 -0.01,-0.004c-0.295,-0.061 -0.58,-0.146 -0.862,-0.249c-0.026,-0.01 -0.048,-0.016 -0.074,-0.026c-0.577,-0.22 -1.121,-0.532 -1.611,-0.93c-0.003,0 -0.003,-0.003 -0.003,-0.003c-0.246,-0.201 -0.467,-0.415 -0.671,-0.642c-0.016,-0.019 -0.032,-0.039 -0.052,-0.061c-0.194,-0.227 -0.375,-0.464 -0.528,-0.717l-6.201,-10.138c-2.311,-3.778 -5.975,-6.429 -10.32,-7.459c-4.453,-1.06 -9.067,-0.301 -12.987,2.132c-1.578,0.979 -2.634,2.608 -2.887,4.446c-0.072,0.531 -0.159,1.053 -0.253,1.568c-0.071,0.376 -0.152,0.748 -0.237,1.118c-0.025,0.123 -0.051,0.249 -0.081,0.372c-0.11,0.467 -0.23,0.927 -0.362,1.381c-0.004,0.016 -0.01,0.035 -0.017,0.055c-0.696,2.388 -1.675,4.601 -2.932,6.613c-0.003,0.003 -0.003,0.006 -0.003,0.01c-2.317,3.713 -5.59,6.853 -9.88,9.461c-2.935,1.785 -3.868,5.612 -2.083,8.548c1.785,2.935 5.612,3.869 8.548,2.083c3.029,-1.843 5.715,-3.911 8.064,-6.189l25.98,40.973c4.786,7.423 13.058,11.729 21.616,11.729c0.453,0 0.907,-0.022 1.361,-0.048c0.178,0.324 0.359,0.645 0.554,0.965c0.732,1.196 1.575,2.298 2.511,3.299l-18.391,10.952Z'\n        fill='#fff'\n      />\n      <path\n        d='M281.919,373.135c2.045,0.492 3.772,1.753 4.87,3.548c2.262,3.704 1.089,8.557 -2.615,10.822l-20.546,12.559c-1.649,1.008 -3.567,1.361 -5.456,1.031c-0.107,-0.023 -0.217,-0.049 -0.328,-0.065c-0.055,-0.013 -0.113,-0.02 -0.168,-0.033c-2.048,-0.492 -3.775,-1.753 -4.873,-3.548c-0.493,-0.806 -0.81,-1.665 -0.989,-2.54c-0.003,-0.026 -0.003,-0.049 -0.009,-0.071c-0.493,-2.557 0.33,-5.168 2.086,-6.983c0.049,-0.048 0.094,-0.1 0.143,-0.146c0.091,-0.087 0.185,-0.171 0.279,-0.256c0.094,-0.084 0.191,-0.168 0.294,-0.246c0.075,-0.061 0.146,-0.12 0.224,-0.178c0.185,-0.136 0.369,-0.266 0.567,-0.389c0.007,-0.003 0.013,-0.006 0.016,-0.01l4.083,-2.495c0.719,-0.333 1.426,-0.699 2.113,-1.117l15.718,-9.611c1.458,-0.544 3.042,-0.645 4.591,-0.272Z'\n        fill='#fff'\n      />\n      <path\n        d='M231.586,372.448c0,0.003 0.003,0.006 0.003,0.01c0.104,0.291 0.217,0.576 0.337,0.865c0.013,0.032 0.026,0.068 0.042,0.104c0.107,0.259 0.224,0.515 0.344,0.771c0.029,0.055 0.051,0.116 0.081,0.175c0.113,0.239 0.239,0.476 0.363,0.713c0.038,0.071 0.071,0.142 0.11,0.21c0.165,0.305 0.34,0.606 0.521,0.904c0.311,0.512 0.652,1.001 1.002,1.478c0.126,0.168 0.256,0.333 0.385,0.499c0.23,0.291 0.467,0.573 0.71,0.852c0.172,0.194 0.34,0.395 0.518,0.583c0.133,0.143 0.279,0.272 0.418,0.412c0.502,0.502 1.027,0.975 1.578,1.422c0.059,0.045 0.114,0.094 0.172,0.136c1.069,0.849 2.216,1.585 3.438,2.203c-1.125,2.116 -1.867,4.41 -2.197,6.773c-4.102,-0.256 -7.984,-2.418 -10.272,-5.969l-28.601,-45.107c1.325,-2.738 2.346,-5.66 3.04,-8.774c0.443,-0.026 0.891,0.013 1.331,0.116c1.095,0.26 2.012,0.917 2.583,1.847l6.201,10.139c0.01,0.013 0.02,0.026 0.03,0.042c0.304,0.496 0.631,0.975 0.985,1.439c0.259,0.34 0.537,0.657 0.816,0.975c0.097,0.11 0.185,0.23 0.285,0.34c0.013,0.055 0.029,0.11 0.042,0.165c0.098,0.431 0.208,0.859 0.331,1.284c0.039,0.123 0.074,0.246 0.11,0.369c0.152,0.479 0.314,0.956 0.502,1.422c0.017,0.049 0.039,0.094 0.059,0.14c0.171,0.427 0.363,0.845 0.567,1.26c0.058,0.12 0.116,0.24 0.178,0.357c0.233,0.453 0.476,0.9 0.742,1.341c2.822,4.621 7.258,7.874 12.501,9.196c-0.81,3.706 -0.584,7.63 0.745,11.308Z'\n        fill='#fff'\n      />\n      <path\n        d='M267.607,345.865c1.672,-0.8 3.551,-1.001 5.379,-0.56c2.1,0.505 3.875,1.801 5.003,3.645c2.323,3.804 1.118,8.787 -2.683,11.111l-3.7,2.261c-0.726,0.334 -1.439,0.71 -2.129,1.131l-15.637,9.556c-2.92,1.147 -6.205,0.473 -8.438,-1.588l-0.003,-0.003c-0.175,-0.162 -0.34,-0.328 -0.499,-0.506c-0.042,-0.048 -0.081,-0.1 -0.123,-0.149c-0.117,-0.136 -0.234,-0.272 -0.344,-0.418c-0.152,-0.204 -0.295,-0.415 -0.431,-0.632c-0.136,-0.227 -0.259,-0.453 -0.372,-0.687c-0.036,-0.074 -0.065,-0.149 -0.101,-0.226c-0.071,-0.159 -0.142,-0.321 -0.204,-0.486c-0.032,-0.088 -0.058,-0.172 -0.087,-0.26c-0.052,-0.158 -0.101,-0.314 -0.143,-0.473c-0.023,-0.087 -0.045,-0.178 -0.065,-0.265c-0.035,-0.159 -0.068,-0.321 -0.097,-0.487c-0.013,-0.084 -0.026,-0.168 -0.039,-0.252c-0.023,-0.169 -0.039,-0.337 -0.048,-0.506c-0.007,-0.081 -0.013,-0.162 -0.017,-0.243c-0.006,-0.175 -0.006,-0.35 0,-0.521c0,-0.078 0,-0.153 0.007,-0.227c0.006,-0.178 0.029,-0.353 0.048,-0.528c0.01,-0.075 0.013,-0.149 0.026,-0.224c0.023,-0.155 0.055,-0.311 0.088,-0.467c0.353,-1.665 1.225,-3.224 2.592,-4.419c0.055,-0.049 0.104,-0.107 0.159,-0.156c0.078,-0.068 0.152,-0.136 0.233,-0.201c0.194,-0.11 0.392,-0.21 0.583,-0.327l20.187,-12.339c0.291,-0.178 0.577,-0.362 0.855,-0.554Z'\n        fill='#fff'\n      />\n      <path\n        d='M257.942,321.045c2.099,0.506 3.875,1.802 5.003,3.646c2.164,3.544 1.263,8.116 -1.948,10.605c-0.207,0.113 -0.411,0.23 -0.615,0.353l-15.586,9.526c0.052,-0.039 0.101,-0.084 0.152,-0.126c0.299,-0.237 0.597,-0.476 0.875,-0.729c0.175,-0.156 0.341,-0.321 0.509,-0.483c0.253,-0.246 0.505,-0.496 0.745,-0.758c0.166,-0.175 0.321,-0.36 0.477,-0.541c0.223,-0.266 0.443,-0.532 0.651,-0.807c0.146,-0.191 0.291,-0.386 0.431,-0.587c0.197,-0.282 0.385,-0.57 0.57,-0.865c0.126,-0.204 0.253,-0.405 0.369,-0.612c0.179,-0.311 0.341,-0.632 0.499,-0.953c0.101,-0.204 0.208,-0.402 0.299,-0.609c0.162,-0.36 0.304,-0.729 0.447,-1.102c0.064,-0.178 0.142,-0.353 0.204,-0.534c0.191,-0.561 0.363,-1.128 0.502,-1.708c0.133,-0.554 0.237,-1.111 0.318,-1.669c0.026,-0.178 0.038,-0.356 0.061,-0.534c0.046,-0.383 0.081,-0.762 0.104,-1.144c0.01,-0.207 0.013,-0.415 0.016,-0.622c0.01,-0.356 0.007,-0.71 -0.006,-1.063c-0.007,-0.21 -0.02,-0.421 -0.033,-0.632c-0.026,-0.356 -0.068,-0.713 -0.113,-1.066c-0.026,-0.197 -0.049,-0.395 -0.081,-0.589c-0.068,-0.402 -0.153,-0.798 -0.25,-1.193c-0.032,-0.142 -0.058,-0.288 -0.094,-0.431c-0.142,-0.534 -0.304,-1.063 -0.495,-1.584c-0.039,-0.101 -0.085,-0.201 -0.127,-0.305c-0.136,-0.35 -0.269,-0.703 -0.428,-1.046l1.429,-0.875c1.844,-1.128 4.015,-1.468 6.115,-0.963Z'\n        fill='#fff'\n      />\n      <path\n        d='M135.938,319.885c-1.053,0.648 -2.294,0.849 -3.493,0.564c-1.202,-0.285 -2.219,-1.02 -2.871,-2.07l-15.183,-24.61c-1.338,-2.167 -0.661,-5.022 1.507,-6.363l5.278,-3.257l20.041,32.477l-5.279,3.259Z'\n        fill='#fff'\n      />\n      <path\n        d='M235.555,298.406l2.09,-1.277c1.844,-1.127 4.015,-1.467 6.118,-0.962c2.099,0.509 3.875,1.802 4.999,3.645c2.323,3.804 1.121,8.791 -2.683,11.114l-2.077,1.27l-6.15,-10.035l-2.297,-3.755Z'\n        fill='#fff'\n      />\n      <path\n        d='M405.873,258.208c-0.071,0.298 -0.282,0.856 -0.891,1.231l-7.443,4.595c-0.93,0.574 -2.158,0.285 -2.734,-0.648l-78.358,-126.997c-1.802,-2.922 -5.635,-3.83 -8.561,-2.028c-2.922,1.805 -3.83,5.638 -2.025,8.561l67.153,108.835l-144.571,31.472l-38.29,-62.06l92.972,-115.095l7.51,12.177c1.805,2.922 5.638,3.83 8.561,2.028c2.926,-1.805 3.833,-5.638 2.028,-8.564l-18.718,-30.335c-0.376,-0.609 -0.315,-1.202 -0.243,-1.5c0.071,-0.301 0.282,-0.858 0.891,-1.234l7.442,-4.592c0.934,-0.576 2.158,-0.285 2.735,0.648l112.299,182.006c0.376,0.609 0.315,1.202 0.243,1.5Z'\n        fill='#fff'\n      />\n    </g>\n  </svg>\n);\n\nexport const profileRegular = (\n  <svg\n    width='100%'\n    height='100%'\n    viewBox='0 0 500 500'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.41421'>\n    <rect id='white_frame' x='0' y='0' width='500' height='500' fill='none' />\n    <path\n      d='M373.263,339.756l-65.367,-33.259c-6.166,-3.141 -9.998,-9.45 -9.998,-16.469l0,-23.545c1.567,-1.95 3.217,-4.171 4.92,-6.622c8.478,-12.187 15.273,-25.752 20.213,-40.383c9.655,-4.506 15.923,-14.22 15.923,-25.188l0,-27.855c0,-6.706 -2.463,-13.203 -6.842,-18.28l0,-37.04c0.383,-3.83 1.888,-26.629 -14.315,-45.438c-14.055,-16.316 -36.861,-24.589 -67.797,-24.589c-30.936,0 -53.742,8.273 -67.797,24.582c-16.203,18.809 -14.698,41.615 -14.315,45.445l0,37.04c-4.379,5.077 -6.842,11.574 -6.842,18.28l0,27.855c0,8.475 3.784,16.379 10.243,21.65c6.268,25.258 19.385,44.29 23.97,50.397l0,23.043c0,6.741 -3.613,12.925 -9.422,16.156l-61.044,33.885c-19.85,11.024 -32.174,32.152 -32.174,55.16l0,22.549c0,33.05 102.948,41.782 157.381,41.782c54.433,0 157.381,-8.732 157.381,-41.782l0,-21.191c0,-23.941 -13.077,-45.473 -34.118,-56.183Zm20.432,77.374c0,9.45 -50.717,27.855 -143.695,27.855c-92.978,0 -143.695,-18.405 -143.695,-27.855l0,-22.549c0,-17.904 9.593,-34.359 25.037,-42.924l61.043,-33.886c10.216,-5.675 16.559,-16.56 16.559,-28.391l0,-27.987l-1.594,-1.936c-0.164,-0.202 -16.936,-20.85 -23.334,-49.199l-0.622,-2.758l-2.334,-1.532c-3.961,-2.604 -6.329,-6.97 -6.329,-11.678l0,-27.855c0,-3.907 1.629,-7.549 4.585,-10.271l2.258,-2.069l0,-43.37l-0.062,-0.912c-0.021,-0.188 -2.347,-19.492 10.982,-34.965c11.339,-13.161 30.69,-19.833 57.506,-19.833c26.721,0 46.03,6.623 57.382,19.694c13.323,15.327 11.12,34.937 11.106,35.104l-0.062,44.282l2.258,2.076c2.956,2.715 4.585,6.357 4.585,10.264l0,27.855c0,6.079 -3.914,11.4 -9.73,13.224l-3.408,1.066l-1.095,3.447c-4.577,14.491 -11.098,27.876 -19.392,39.784c-2.032,2.931 -4.009,5.529 -5.727,7.513l-1.704,1.978l0,28.726c0,12.325 6.727,23.405 17.558,28.92l65.368,33.259c16.381,8.335 26.556,25.09 26.556,43.732l0,21.191Z'\n      fill='#fff'\n      fillRule='nonzero'\n    />\n  </svg>\n);\nexport const profileActive = (\n  <svg\n    width='100%'\n    height='100%'\n    viewBox='0 0 500 500'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.41421'>\n    <rect id='white_filled' x='0' y='0' width='500' height='500' fill='none' />\n    <path\n      d='M381.063,339.756l-65.367,-33.259c-6.166,-3.141 -9.998,-9.45 -9.998,-16.469l0,-23.545c1.567,-1.95 3.216,-4.171 4.92,-6.622c8.478,-12.187 15.273,-25.752 20.213,-40.383c9.655,-4.506 15.923,-14.22 15.923,-25.188l0,-27.855c0,-6.706 -2.463,-13.203 -6.842,-18.28l0,-37.04c0.383,-3.83 1.888,-26.629 -14.315,-45.438c-14.055,-16.316 -36.861,-24.589 -67.797,-24.589c-30.936,0 -53.742,8.273 -67.797,24.582c-16.203,18.809 -14.698,41.615 -14.315,45.445l0,37.04c-4.379,5.077 -6.842,11.574 -6.842,18.28l0,27.855c0,8.475 3.784,16.379 10.243,21.65c6.268,25.258 19.385,44.29 23.97,50.397l0,23.043c0,6.741 -3.613,12.925 -9.422,16.156l-61.044,33.885c-19.85,11.024 -32.174,32.152 -32.174,55.16l0,22.549c0,33.05 102.948,41.782 157.381,41.782c54.433,0 157.381,-8.732 157.381,-41.782l0,-21.191c0,-23.941 -13.077,-45.473 -34.118,-56.183Z'\n      fill='#fff'\n      fillRule='nonzero'\n    />\n  </svg>\n);\n\nexport const mineRegular = (\n  <svg\n    width='85%'\n    height='85%'\n    viewBox='0 0 420 420'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.41421'>\n    <g>\n      <path\n        d='M409.651,0l-402.708,0c-3.809,0 -6.943,3.134 -6.943,6.943l0,402.708c0,3.809 3.134,6.943 6.943,6.943l402.708,0c3.809,0 6.943,-3.134 6.943,-6.943l0,-402.708c0,-3.809 -3.134,-6.943 -6.943,-6.943Zm-395.765,13.886l388.821,0l0,27.773l-388.821,0l0,-27.773Zm0,388.821l0,-347.161l388.821,0l0,347.161l-388.821,0Z'\n        fill='#fff'\n        fillRule='nonzero'\n      />\n      <path\n        d='M32.703,22.843c-2.77,-2.555 -7.09,-2.555 -9.86,0c-0.613,0.676 -1.106,1.45 -1.458,2.291c-0.356,0.835 -0.544,1.732 -0.555,2.639c-0.024,0.911 0.166,1.815 0.555,2.638c0.354,0.841 0.847,1.615 1.458,2.292c1.983,1.983 4.99,2.562 7.568,1.458c0.841,-0.354 1.615,-0.847 2.292,-1.458c0.611,-0.677 1.104,-1.451 1.458,-2.292c0.74,-1.68 0.74,-3.596 0,-5.277c-0.353,-0.841 -0.846,-1.615 -1.458,-2.291Z'\n        fill='#fff'\n        fillRule='nonzero'\n      />\n      <path\n        d='M54.99,25.134c-0.156,-0.442 -0.365,-0.865 -0.624,-1.256l-0.834,-1.035c-1.992,-1.966 -4.987,-2.543 -7.568,-1.458c-2.638,0.998 -4.37,3.568 -4.305,6.388c0,0.023 0,0.047 0,0.07c0,3.771 3.103,6.874 6.874,6.874c0.931,0 1.852,-0.189 2.708,-0.556c0.84,-0.354 1.615,-0.847 2.291,-1.458c1.303,-1.308 2.029,-3.084 2.014,-4.93c-0.014,-0.466 -0.063,-0.93 -0.146,-1.389c-0.069,-0.435 -0.208,-0.857 -0.41,-1.25Z'\n        fill='#fff'\n        fillRule='nonzero'\n      />\n      <path\n        d='M64.503,22.843c-1.272,1.328 -1.992,3.091 -2.014,4.93c0.011,0.907 0.2,1.804 0.556,2.638c0.353,0.841 0.846,1.615 1.458,2.292c2.72,2.668 7.138,2.668 9.859,0c0.611,-0.677 1.104,-1.451 1.458,-2.292c0.356,-0.834 0.545,-1.731 0.556,-2.638c-0.011,-1.841 -0.733,-3.608 -2.014,-4.93c-2.769,-2.555 -7.09,-2.555 -9.859,0Z'\n        fill='#fff'\n        fillRule='nonzero'\n      />\n      <rect x='291.616' y='69.432' width='69.432' height='13.886' fill='#fff' />\n      <rect x='291.616' y='97.205' width='97.205' height='13.886' fill='#fff' />\n      <rect\n        x='291.616'\n        y='124.978'\n        width='97.205'\n        height='13.886'\n        fill='#fff'\n      />\n      <rect\n        x='291.616'\n        y='166.638'\n        width='69.432'\n        height='13.886'\n        fill='#fff'\n      />\n      <rect x='291.616' y='194.41' width='97.205' height='13.886' fill='#fff' />\n      <rect\n        x='291.616'\n        y='222.183'\n        width='97.205'\n        height='13.886'\n        fill='#fff'\n      />\n      <rect\n        x='291.616'\n        y='249.956'\n        width='97.205'\n        height='13.886'\n        fill='#fff'\n      />\n      <rect\n        x='291.616'\n        y='291.616'\n        width='69.432'\n        height='13.886'\n        fill='#fff'\n      />\n      <rect\n        x='291.616'\n        y='319.389'\n        width='97.205'\n        height='13.886'\n        fill='#fff'\n      />\n      <rect\n        x='291.616'\n        y='347.162'\n        width='97.205'\n        height='13.886'\n        fill='#fff'\n      />\n      <rect\n        x='291.616'\n        y='374.934'\n        width='97.205'\n        height='13.886'\n        fill='#fff'\n      />\n      <path\n        d='M256.9,69.432l-222.184,0c-3.809,0 -6.943,3.135 -6.943,6.944l0,69.432c0,3.809 3.134,6.943 6.943,6.943l222.184,0c3.809,0 6.943,-3.134 6.943,-6.943l0,-69.432c0,-3.809 -3.134,-6.944 -6.943,-6.944Zm-6.944,69.433l-208.297,0l0,-55.546l208.297,0l0,55.546Z'\n        fill='#fff'\n        fillRule='nonzero'\n      />\n      <rect\n        x='27.773'\n        y='166.638'\n        width='111.092'\n        height='13.886'\n        fill='#fff'\n      />\n      <rect x='27.773' y='194.41' width='236.07' height='13.886' fill='#fff' />\n      <rect\n        x='27.773'\n        y='222.183'\n        width='180.524'\n        height='13.886'\n        fill='#fff'\n      />\n      <path\n        d='M90.262,263.843l-55.546,0c-3.809,0 -6.943,3.134 -6.943,6.943l0,55.546c0,3.809 3.134,6.943 6.943,6.943l55.546,0c3.809,0 6.943,-3.134 6.943,-6.943l0,-55.546c0,-3.809 -3.134,-6.943 -6.943,-6.943Zm-6.943,55.546l-41.66,0l0,-41.66l41.66,0l0,41.66Z'\n        fill='#fff'\n        fillRule='nonzero'\n      />\n      <rect x='27.773' y='347.162' width='69.432' height='13.886' fill='#fff' />\n      <path\n        d='M173.581,263.843l-55.546,0c-3.809,0 -6.943,3.134 -6.943,6.943l0,55.546c0,3.809 3.134,6.943 6.943,6.943l55.546,0c3.809,0 6.943,-3.134 6.943,-6.943l0,-55.546c0,-3.809 -3.134,-6.943 -6.943,-6.943Zm-6.943,55.546l-41.66,0l0,-41.66l41.66,0l0,41.66Z'\n        fill='#fff'\n        fillRule='nonzero'\n      />\n      <path\n        d='M256.9,263.843l-55.546,0c-3.809,0 -6.944,3.134 -6.944,6.943l0,55.546c0,3.809 3.135,6.943 6.944,6.943l55.546,0c3.809,0 6.943,-3.134 6.943,-6.943l0,-55.546c0,-3.809 -3.134,-6.943 -6.943,-6.943Zm-6.944,55.546l-41.659,0l0,-41.66l41.659,0l0,41.66Z'\n        fill='#fff'\n        fillRule='nonzero'\n      />\n      <rect\n        x='111.092'\n        y='347.162'\n        width='69.432'\n        height='13.886'\n        fill='#fff'\n      />\n      <rect x='194.41' y='347.162' width='69.432' height='13.886' fill='#fff' />\n      <rect x='27.773' y='374.934' width='69.432' height='13.886' fill='#fff' />\n      <rect\n        x='111.092'\n        y='374.934'\n        width='69.432'\n        height='13.886'\n        fill='#fff'\n      />\n      <rect x='194.41' y='374.934' width='69.432' height='13.886' fill='#fff' />\n    </g>\n  </svg>\n);\n\nexport const mineActive = (\n  <svg\n    width='100%'\n    height='100%'\n    viewBox='0 0 417 420'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinecap='round'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.5'>\n    <g>\n      <path\n        d='M0,409.651c0,3.809 3.134,6.943 6.943,6.943l-0.069,0c-3.794,0 -6.874,-3.08 -6.874,-6.874l0,-0.069Zm13.886,-354.105l388.821,0l0,347.161l-388.821,0l0,-347.161Zm166.638,333.275l0,-13.887l-69.432,0l0,13.887l69.432,0Zm-83.319,0l0,-13.887l-69.432,0l0,13.887l69.432,0Zm166.638,0l0,-13.887l-69.433,0l0,13.887l69.433,0Zm124.978,0l0,-13.887l-97.205,0l0,13.887l97.205,0Zm-208.297,-27.773l0,-13.886l-69.432,0l0,13.886l69.432,0Zm-83.319,0l0,-13.886l-69.432,0l0,13.886l69.432,0Zm166.638,0l0,-13.886l-69.433,0l0,13.886l69.433,0Zm124.978,0l0,-13.886l-97.205,0l0,13.886l97.205,0Zm-131.921,-97.205l-55.546,0c-3.809,0 -6.944,3.134 -6.944,6.943l0,55.546c0,3.809 3.135,6.943 6.944,6.943l55.546,0c3.809,0 6.943,-3.134 6.943,-6.943l0,-55.546c0,-3.809 -3.134,-6.943 -6.943,-6.943Zm-166.638,0l-55.546,0c-3.809,0 -6.943,3.134 -6.943,6.943l0,55.546c0,3.809 3.134,6.943 6.943,6.943l55.546,0c3.809,0 6.943,-3.134 6.943,-6.943l0,-55.546c0,-3.809 -3.134,-6.943 -6.943,-6.943Zm83.319,0l-55.546,0c-3.809,0 -6.943,3.134 -6.943,6.943l0,55.546c0,3.809 3.134,6.943 6.943,6.943l55.546,0c3.809,0 6.943,-3.134 6.943,-6.943l0,-55.546c0,-3.809 -3.134,-6.943 -6.943,-6.943Zm215.24,69.432l0,-13.886l-97.205,0l0,13.886l97.205,0Zm-180.524,-55.546l41.659,0l0,41.66l-41.659,0l0,-41.66Zm-166.638,0l41.66,0l0,41.66l-41.66,0l0,-41.66Zm83.319,0l41.66,0l0,41.66l-41.66,0l0,-41.66Zm236.07,27.773l0,-13.886l-69.432,0l0,13.886l69.432,0Zm27.773,-41.659l0,-13.887l-97.205,0l0,13.887l97.205,0Zm-180.524,-27.773l0,-13.887l-180.524,0l0,13.887l180.524,0Zm180.524,0l0,-13.887l-97.205,0l0,13.887l97.205,0Zm0,-27.773l0,-13.887l-97.205,0l0,13.887l97.205,0Zm-124.978,0l0,-13.887l-236.07,0l0,13.887l236.07,0Zm-124.978,-27.773l0,-13.886l-111.092,0l0,13.886l111.092,0Zm222.183,0l0,-13.886l-69.432,0l0,13.886l69.432,0Zm-104.148,-111.092l-222.184,0c-3.809,0 -6.943,3.135 -6.943,6.944l0,69.432c0,3.809 3.134,6.943 6.943,6.943l222.184,0c3.809,0 6.943,-3.134 6.943,-6.943l0,-69.432c0,-3.809 -3.134,-6.944 -6.943,-6.944Zm131.921,69.433l0,-13.887l-97.205,0l0,13.887l97.205,0Zm-347.162,-55.546l208.297,0l0,55.546l-208.297,0l0,-55.546Zm347.162,27.773l0,-13.887l-97.205,0l0,13.887l97.205,0Zm-27.773,-27.773l0,-13.887l-69.432,0l0,13.887l69.432,0Zm-347.162,-69.433l388.821,0l0,27.773l-388.821,0l0,-27.773Zm41.104,11.248c-0.156,-0.442 -0.365,-0.865 -0.624,-1.256l-0.834,-1.035c-1.992,-1.966 -4.987,-2.543 -7.568,-1.458c-2.638,0.998 -4.37,3.568 -4.305,6.388c0,0.023 0,0.047 0,0.07c0,3.771 3.103,6.874 6.874,6.874c0.931,0 1.852,-0.189 2.708,-0.556c0.84,-0.354 1.615,-0.847 2.291,-1.458c1.303,-1.308 2.029,-3.084 2.014,-4.93c-0.014,-0.466 -0.063,-0.93 -0.146,-1.389c-0.069,-0.435 -0.208,-0.857 -0.41,-1.25Zm-22.287,-2.291c-2.77,-2.555 -7.09,-2.555 -9.86,0c-0.613,0.676 -1.106,1.45 -1.458,2.291c-0.356,0.835 -0.544,1.732 -0.555,2.639c-0.024,0.911 0.166,1.815 0.555,2.638c0.354,0.841 0.847,1.615 1.458,2.292c1.983,1.983 4.99,2.562 7.568,1.458c0.841,-0.354 1.615,-0.847 2.292,-1.458c0.611,-0.677 1.104,-1.451 1.458,-2.292c0.74,-1.68 0.74,-3.596 0,-5.277c-0.353,-0.841 -0.846,-1.615 -1.458,-2.291Zm31.8,0c-1.272,1.328 -1.992,3.091 -2.014,4.93c0.011,0.907 0.2,1.804 0.556,2.638c0.353,0.841 0.846,1.615 1.458,2.292c2.72,2.668 7.138,2.668 9.859,0c0.611,-0.677 1.104,-1.451 1.458,-2.292c0.356,-0.834 0.545,-1.731 0.556,-2.638c-0.011,-1.841 -0.733,-3.608 -2.014,-4.93c-2.769,-2.555 -7.09,-2.555 -9.859,0Zm345.148,393.751c3.809,0 6.943,-3.134 6.943,-6.943l0,0.069c0,3.794 -3.08,6.874 -6.874,6.874l-0.069,0Zm6.943,-409.651c0,-3.809 -3.134,-6.943 -6.943,-6.943l0.069,0c3.794,0 6.874,3.08 6.874,6.874l0,0.069Zm-416.594,-0.069c0,-3.794 3.08,-6.874 6.874,-6.874l0.069,0c-3.809,0 -6.943,3.134 -6.943,6.943l0,-0.069Z'\n        fill='#fff'\n        fillRule='nonzero'\n      />\n      <path\n        d='M413.122,10.231c0,-3.731 -3.028,-6.759 -6.759,-6.759l-396.132,0c-3.731,0 -6.759,3.028 -6.759,6.759l0,399.604c0,3.73 3.028,6.759 6.759,6.759l396.132,0c3.731,0 6.759,-3.029 6.759,-6.759l0,-399.604Z'\n        fill='none'\n        stroke='#fff'\n        strokeWidth='6px'\n      />\n    </g>\n  </svg>\n);\n","import React from \"react\";\n\nimport { iconCreateNew } from \"../../../icons\";\n\nimport style from \"./styles/NewButton.module.scss\";\n\nconst NewButton = (props: { action: () => void }) => {\n  return (\n    <button className={style.new} onClick={() => props.action()}>\n      {iconCreateNew}\n    </button>\n  );\n};\n\nexport default NewButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../../../store\";\n\nimport { goBack } from \"../../../icons\";\n\nimport style from \"./styles/NavButton.module.scss\";\n\n/** Function to create icon\n * @function iconFactory\n * @param {string} name\n * @param {boolean} active\n * @return {object} ReactElement\n */\nconst iconFactory = (props: { icon: string; module: string }) => {\n  const iconName = `${props.icon}${\n    props.module === props.icon ? \"Active\" : \"Regular\"\n  }`;\n  const ICON = require(\"./NavIcons\");\n  const icons: any = ICON;\n  return icons[iconName];\n};\n\n/**\n * Functional component to display a button\n * @function NavButton\n * @param {object} props - An object, containing options (such as mode:string) and a child to display\n * @returns {object} - React Element - JSX functional component\n */\nconst NavButton = (props: {\n  mode: string;\n  active?: boolean;\n  icon?: string;\n  module: string;\n  children?: any;\n  action?: (arg0?: any) => void;\n}) => {\n  const { mode } = props;\n  const testId = `${mode}__button`;\n\n  const actionHandler = (action?: any) => {\n    if (props.action) props.action(action);\n  };\n\n  /**\n   * Function to create button element\n   * @function buttonFactory\n   * @param {string} style - Style of the element\n   * @returns {object} - React component\n   */\n  const buttonFactory = (style: string, children: any, action: string) => (\n    <button\n      data-testid={testId}\n      className={style}\n      onClick={() => actionHandler(action)}>\n      {children}\n    </button>\n  );\n\n  let component;\n  // build component\n  switch (mode) {\n    case \"empty\":\n      component = <button data-testid={testId} className={style.navButtonEmpty} />;\n      break;\n    case \"nav\":\n      const icon = props.icon || \"\";\n      component = buttonFactory(\n        style.navButton,\n        iconFactory({ icon, module: props.module }),\n        icon\n      );\n      break;\n    default:\n      const modeDetails = mode.split(\"-\");\n      if (modeDetails[0] === \"return\") {\n        component = buttonFactory(style.return, goBack, modeDetails[1]);\n      } else {\n        component = null;\n      }\n  }\n  return component;\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    module: state.module\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(NavButton);\n","import React from \"react\";\n\nconst EntranceButton = (props: { action: (arg0: string) => void }) => {\n  return (\n    <div\n      className='enter'\n      data-testid='welcome__button_entrance'\n      onClick={() => props.action(\"login\")}>\n      <span>ENTER</span>\n      <span>כניסה</span>\n      <span>دخول</span>\n    </div>\n  );\n};\n\nexport default EntranceButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport styleFactory from \"../../modules/style_factory\";\n\nimport { AppState } from \"../../store\";\nimport { setModule, setLoading } from \"../../store/users/actions\";\n\nimport NavButton from \"./components/NavButton\";\nimport EntranceButton from \"./components/EntranceButton\";\n\nimport { Spacer } from \"../../layout/Utils\";\n\n/**\n * Functional component to display a footer wrapper with buttons\n * @function Navigation\n * @param {object} props - Mode option to show either full size label-button or navigation buttons\n * @returns {object} - React Element - JSX functional component\n */\nconst Navigation = (props: any) => {\n  const { direction } = props.language;\n\n  // toggle module to show\n  const action = (module: string) => {\n    switch (module) {\n      case \"confirmation\":\n        props.setModule(\"confirmation\");\n        break;\n      default:\n        props.setModule(module);\n    }\n  };\n  // set the variable\n  let component;\n  // choose what to show\n  switch (props.module) {\n    case \"welcome\":\n      component = (\n        <nav className={styleFactory(\"footer\", direction)}>\n          <EntranceButton action={action} />\n        </nav>\n      );\n      break;\n    case \"login\":\n      component = (\n        <nav className={styleFactory(\"header\", direction)}>\n          <NavButton mode='return-welcome' action={action} />\n          <h1>Our Change</h1>\n          <Spacer size={10} units='%' />\n        </nav>\n      );\n      break;\n    case \"register\":\n      component = (\n        <nav className={styleFactory(\"header\", direction)}>\n          <NavButton mode='return-welcome' action={action} />\n          <h1>Our Change</h1>\n          <Spacer size={10} units='%' />\n        </nav>\n      );\n      break;\n    case \"new\":\n      component = (\n        <nav className={styleFactory(\"header\", direction)}>\n          <NavButton mode='return-home' action={action} />\n          <h1>Create New</h1>\n          <Spacer size={10} units='%' />\n        </nav>\n      );\n      break;\n    case \"confirmation\":\n      component = (\n        <nav className={styleFactory(\"header\", direction)}>\n          <NavButton mode='confirmation' action={action}>\n            RETURN\n          </NavButton>\n        </nav>\n      );\n      break;\n    default:\n      component = (\n        <nav className={styleFactory(\"footer\", direction)}>\n          <NavButton mode='nav' icon='home' action={action} />\n          <NavButton mode='nav' icon='municipality' action={action} />\n          <NavButton mode='empty' />\n          <NavButton mode='nav' icon='mine' action={action} />\n          <NavButton mode='nav' icon='profile' active={true} action={action} />\n        </nav>\n      );\n  }\n  return component;\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    module: state.module,\n    language: state.language\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { setModule, setLoading }\n)(Navigation);\n","import React from \"react\";\n\nexport const VectorTitle = () => (\n  <svg\n    viewBox='0 0 295 160'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.414'>\n    <path\n      d='M0.235,0.004C0.207,0.008 0.181,0.007 0.157,0C0.134,-0.007 0.113,-0.017 0.094,-0.03C0.076,-0.044 0.06,-0.06 0.046,-0.079C0.033,-0.098 0.022,-0.118 0.014,-0.14C0.008,-0.184 0.009,-0.224 0.019,-0.26C0.028,-0.296 0.041,-0.33 0.059,-0.36C0.076,-0.391 0.096,-0.42 0.119,-0.446C0.141,-0.473 0.163,-0.499 0.184,-0.523C0.188,-0.521 0.192,-0.521 0.195,-0.523C0.198,-0.525 0.2,-0.528 0.203,-0.531C0.205,-0.535 0.208,-0.538 0.21,-0.541C0.213,-0.544 0.217,-0.547 0.221,-0.548C0.223,-0.554 0.227,-0.559 0.231,-0.563L0.258,-0.585C0.263,-0.589 0.266,-0.594 0.27,-0.6C0.276,-0.601 0.282,-0.603 0.287,-0.606C0.292,-0.61 0.296,-0.613 0.3,-0.617C0.305,-0.621 0.309,-0.625 0.313,-0.628C0.318,-0.631 0.324,-0.634 0.33,-0.636L0.33,-0.648C0.344,-0.655 0.355,-0.662 0.361,-0.67C0.368,-0.678 0.376,-0.688 0.385,-0.7C0.392,-0.701 0.398,-0.701 0.402,-0.701C0.406,-0.701 0.413,-0.702 0.422,-0.703C0.428,-0.714 0.433,-0.722 0.438,-0.728C0.444,-0.733 0.451,-0.739 0.461,-0.745C0.471,-0.74 0.481,-0.737 0.492,-0.736C0.503,-0.735 0.513,-0.73 0.522,-0.721C0.523,-0.713 0.525,-0.707 0.529,-0.703C0.533,-0.698 0.537,-0.694 0.542,-0.691C0.547,-0.687 0.551,-0.684 0.556,-0.68C0.56,-0.676 0.563,-0.67 0.564,-0.663C0.568,-0.663 0.57,-0.664 0.571,-0.665C0.572,-0.666 0.574,-0.667 0.577,-0.666C0.578,-0.661 0.58,-0.657 0.581,-0.653C0.582,-0.65 0.584,-0.647 0.585,-0.645C0.587,-0.642 0.589,-0.639 0.59,-0.636C0.592,-0.632 0.593,-0.629 0.595,-0.624C0.591,-0.616 0.589,-0.608 0.586,-0.599C0.583,-0.59 0.578,-0.584 0.57,-0.581C0.57,-0.576 0.572,-0.573 0.576,-0.573C0.58,-0.572 0.582,-0.57 0.583,-0.565C0.584,-0.56 0.583,-0.555 0.58,-0.551C0.598,-0.52 0.615,-0.488 0.63,-0.455C0.645,-0.421 0.662,-0.389 0.681,-0.358C0.679,-0.349 0.68,-0.34 0.682,-0.332C0.684,-0.323 0.687,-0.314 0.691,-0.306C0.694,-0.297 0.698,-0.289 0.701,-0.28C0.704,-0.272 0.707,-0.263 0.708,-0.255C0.709,-0.244 0.709,-0.232 0.708,-0.219C0.707,-0.207 0.704,-0.194 0.7,-0.183C0.696,-0.171 0.691,-0.16 0.685,-0.15C0.678,-0.14 0.671,-0.132 0.662,-0.127C0.652,-0.114 0.639,-0.103 0.623,-0.095C0.607,-0.087 0.593,-0.077 0.58,-0.066C0.571,-0.061 0.561,-0.057 0.551,-0.055C0.54,-0.053 0.53,-0.05 0.519,-0.048C0.51,-0.043 0.5,-0.038 0.488,-0.033C0.477,-0.028 0.465,-0.023 0.452,-0.02C0.44,-0.016 0.427,-0.013 0.415,-0.01C0.403,-0.008 0.392,-0.007 0.382,-0.009C0.358,0 0.336,0.006 0.313,0.009C0.291,0.012 0.265,0.01 0.235,0.004ZM0.248,-0.352C0.242,-0.337 0.234,-0.323 0.225,-0.311C0.216,-0.299 0.208,-0.287 0.199,-0.274C0.191,-0.262 0.183,-0.249 0.177,-0.235C0.171,-0.221 0.168,-0.204 0.167,-0.186C0.18,-0.174 0.195,-0.168 0.213,-0.166C0.231,-0.163 0.25,-0.163 0.269,-0.165C0.287,-0.166 0.306,-0.169 0.325,-0.172C0.344,-0.175 0.361,-0.177 0.376,-0.177C0.376,-0.183 0.379,-0.186 0.384,-0.186C0.411,-0.188 0.437,-0.196 0.46,-0.208C0.483,-0.221 0.508,-0.234 0.533,-0.247C0.536,-0.255 0.541,-0.262 0.546,-0.268C0.551,-0.273 0.554,-0.282 0.555,-0.293C0.551,-0.299 0.549,-0.304 0.548,-0.308C0.547,-0.312 0.547,-0.317 0.547,-0.325C0.53,-0.349 0.515,-0.374 0.503,-0.402C0.491,-0.43 0.476,-0.456 0.46,-0.48C0.459,-0.477 0.456,-0.474 0.452,-0.471C0.448,-0.467 0.444,-0.468 0.439,-0.473C0.438,-0.466 0.435,-0.462 0.431,-0.459C0.427,-0.457 0.422,-0.456 0.417,-0.456C0.413,-0.456 0.408,-0.457 0.403,-0.459C0.398,-0.461 0.394,-0.464 0.39,-0.467C0.367,-0.449 0.344,-0.431 0.322,-0.414C0.299,-0.397 0.279,-0.377 0.261,-0.354C0.257,-0.353 0.256,-0.352 0.255,-0.353C0.254,-0.353 0.252,-0.353 0.248,-0.352Z'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='matrix(73 0 0 73 71.633 54.393)'\n    />\n    <path\n      d='M0.576,-0.556C0.577,-0.541 0.58,-0.529 0.583,-0.519C0.586,-0.508 0.59,-0.498 0.594,-0.488C0.597,-0.479 0.6,-0.47 0.603,-0.461C0.606,-0.453 0.608,-0.442 0.609,-0.43C0.604,-0.413 0.6,-0.397 0.598,-0.383C0.596,-0.368 0.593,-0.354 0.591,-0.338C0.58,-0.315 0.57,-0.295 0.561,-0.277C0.551,-0.26 0.543,-0.244 0.537,-0.231C0.534,-0.228 0.531,-0.224 0.529,-0.22L0.517,-0.198C0.515,-0.194 0.513,-0.192 0.512,-0.19L0.492,-0.197L0.488,-0.173L0.475,-0.169L0.465,-0.157C0.452,-0.136 0.439,-0.118 0.426,-0.103C0.412,-0.088 0.397,-0.075 0.379,-0.064C0.362,-0.053 0.343,-0.042 0.321,-0.032C0.299,-0.022 0.274,-0.012 0.247,0C0.236,-0.001 0.226,-0.002 0.218,-0.002C0.21,-0.003 0.202,-0.003 0.195,-0.004C0.183,-0.004 0.168,-0.005 0.149,-0.007C0.147,-0.012 0.145,-0.016 0.141,-0.018C0.137,-0.02 0.133,-0.021 0.13,-0.021C0.119,-0.026 0.111,-0.033 0.105,-0.043C0.099,-0.054 0.094,-0.064 0.089,-0.076C0.086,-0.083 0.082,-0.09 0.079,-0.096C0.076,-0.102 0.072,-0.109 0.068,-0.115L0.085,-0.12L0.063,-0.144L0.054,-0.154L0.053,-0.17C0.051,-0.215 0.05,-0.256 0.05,-0.293C0.051,-0.331 0.056,-0.364 0.065,-0.394L0.065,-0.404C0.067,-0.419 0.069,-0.431 0.071,-0.44C0.073,-0.449 0.075,-0.458 0.076,-0.467C0.078,-0.481 0.081,-0.494 0.085,-0.507C0.094,-0.509 0.101,-0.513 0.105,-0.518C0.11,-0.524 0.114,-0.529 0.117,-0.533C0.126,-0.534 0.132,-0.533 0.136,-0.529C0.139,-0.526 0.142,-0.521 0.146,-0.514C0.149,-0.508 0.153,-0.501 0.158,-0.494C0.163,-0.487 0.17,-0.481 0.18,-0.478C0.181,-0.472 0.183,-0.467 0.185,-0.461C0.187,-0.456 0.19,-0.45 0.192,-0.443C0.198,-0.432 0.202,-0.421 0.207,-0.409C0.211,-0.397 0.213,-0.385 0.214,-0.374C0.207,-0.362 0.202,-0.347 0.199,-0.331C0.195,-0.315 0.193,-0.298 0.192,-0.282C0.191,-0.265 0.191,-0.249 0.193,-0.234C0.194,-0.219 0.197,-0.206 0.201,-0.195L0.207,-0.183L0.224,-0.185C0.243,-0.19 0.261,-0.195 0.277,-0.202C0.293,-0.208 0.308,-0.215 0.321,-0.224C0.335,-0.232 0.348,-0.242 0.36,-0.253C0.373,-0.265 0.386,-0.278 0.399,-0.293C0.413,-0.308 0.425,-0.325 0.435,-0.344C0.445,-0.363 0.454,-0.383 0.46,-0.404C0.467,-0.425 0.472,-0.446 0.476,-0.466C0.48,-0.487 0.482,-0.506 0.483,-0.524C0.494,-0.528 0.5,-0.536 0.5,-0.548L0.498,-0.559C0.495,-0.563 0.495,-0.567 0.498,-0.572C0.502,-0.585 0.511,-0.594 0.525,-0.601C0.536,-0.594 0.545,-0.587 0.553,-0.579C0.561,-0.571 0.569,-0.563 0.576,-0.556Z'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='matrix(73 0 0 73 131.816 54.393)'\n    />\n    <path\n      d='M0.157,-0.102C0.15,-0.076 0.144,-0.056 0.138,-0.042C0.133,-0.029 0.124,-0.015 0.113,-0.001C0.105,-0.002 0.099,-0.001 0.096,0.002C0.092,0.005 0.089,0.008 0.085,0.011C0.079,0.012 0.075,0.012 0.072,0.011L0.058,0.001C0.055,0 0.051,-0.001 0.045,-0.001C0.044,-0.006 0.042,-0.011 0.041,-0.016C0.039,-0.02 0.035,-0.022 0.027,-0.021C0.029,-0.026 0.029,-0.03 0.028,-0.034C0.028,-0.037 0.027,-0.041 0.026,-0.043C0.025,-0.046 0.024,-0.049 0.023,-0.052C0.023,-0.055 0.023,-0.059 0.024,-0.063C0.021,-0.063 0.019,-0.066 0.017,-0.07C0.015,-0.075 0.012,-0.079 0.01,-0.084C0.012,-0.096 0.014,-0.107 0.016,-0.117C0.018,-0.128 0.02,-0.137 0.023,-0.146C0.026,-0.156 0.028,-0.165 0.03,-0.174C0.032,-0.183 0.031,-0.192 0.027,-0.202C0.03,-0.2 0.032,-0.201 0.033,-0.204C0.035,-0.207 0.035,-0.21 0.036,-0.215C0.037,-0.22 0.037,-0.225 0.037,-0.23C0.037,-0.235 0.037,-0.239 0.036,-0.242C0.043,-0.259 0.048,-0.277 0.052,-0.294C0.056,-0.312 0.06,-0.33 0.064,-0.348C0.068,-0.365 0.071,-0.382 0.075,-0.399C0.079,-0.416 0.084,-0.432 0.091,-0.446C0.098,-0.448 0.106,-0.447 0.115,-0.444C0.124,-0.441 0.129,-0.437 0.131,-0.433C0.148,-0.446 0.163,-0.461 0.176,-0.48C0.189,-0.499 0.202,-0.517 0.216,-0.534C0.229,-0.552 0.245,-0.567 0.261,-0.581C0.278,-0.595 0.299,-0.603 0.324,-0.605C0.337,-0.596 0.352,-0.586 0.368,-0.576C0.384,-0.566 0.397,-0.552 0.407,-0.536C0.412,-0.534 0.417,-0.531 0.42,-0.528C0.424,-0.525 0.428,-0.522 0.434,-0.519L0.434,-0.507C0.441,-0.5 0.448,-0.491 0.453,-0.482C0.458,-0.472 0.462,-0.462 0.466,-0.452C0.47,-0.441 0.474,-0.43 0.478,-0.419C0.481,-0.409 0.486,-0.398 0.491,-0.389C0.49,-0.385 0.489,-0.383 0.489,-0.38C0.489,-0.378 0.49,-0.376 0.491,-0.373C0.492,-0.37 0.493,-0.368 0.493,-0.365C0.494,-0.363 0.494,-0.359 0.493,-0.354C0.491,-0.326 0.482,-0.303 0.465,-0.285C0.449,-0.268 0.429,-0.253 0.405,-0.242C0.382,-0.23 0.357,-0.221 0.33,-0.213C0.303,-0.205 0.279,-0.197 0.258,-0.188C0.258,-0.185 0.259,-0.184 0.261,-0.184C0.264,-0.184 0.264,-0.182 0.264,-0.179C0.279,-0.169 0.292,-0.161 0.301,-0.155C0.31,-0.149 0.319,-0.145 0.327,-0.141C0.335,-0.137 0.344,-0.133 0.353,-0.13C0.362,-0.127 0.376,-0.124 0.393,-0.12C0.41,-0.116 0.423,-0.113 0.432,-0.111C0.442,-0.109 0.45,-0.107 0.458,-0.105C0.466,-0.103 0.474,-0.102 0.482,-0.101C0.49,-0.1 0.502,-0.099 0.517,-0.098C0.522,-0.092 0.528,-0.085 0.532,-0.077C0.536,-0.069 0.539,-0.06 0.54,-0.052C0.541,-0.044 0.542,-0.036 0.541,-0.029C0.54,-0.021 0.538,-0.015 0.534,-0.011C0.535,-0.009 0.536,-0.008 0.539,-0.008C0.541,-0.009 0.543,-0.008 0.546,-0.008C0.542,-0.005 0.539,-0.002 0.536,0.002C0.534,0.006 0.531,0.01 0.528,0.014C0.526,0.018 0.523,0.021 0.52,0.024C0.516,0.027 0.512,0.029 0.506,0.029C0.486,0.037 0.46,0.038 0.43,0.031C0.399,0.024 0.36,0.011 0.313,-0.007C0.29,-0.016 0.271,-0.024 0.256,-0.031C0.242,-0.038 0.229,-0.044 0.218,-0.051C0.208,-0.058 0.198,-0.065 0.189,-0.073C0.18,-0.081 0.17,-0.09 0.157,-0.102ZM0.297,-0.437C0.29,-0.426 0.282,-0.417 0.273,-0.408C0.264,-0.4 0.256,-0.391 0.248,-0.382C0.239,-0.374 0.232,-0.364 0.226,-0.353C0.219,-0.342 0.215,-0.33 0.212,-0.315C0.235,-0.318 0.258,-0.324 0.283,-0.334C0.308,-0.345 0.331,-0.354 0.354,-0.363C0.351,-0.383 0.344,-0.4 0.333,-0.412C0.321,-0.424 0.309,-0.433 0.297,-0.437Z'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='matrix(73 0 0 73 181.804 54.393)'\n    />\n    <g>\n      <path\n        d='M0.091,-0.085C0.072,-0.099 0.056,-0.117 0.044,-0.139C0.032,-0.16 0.023,-0.183 0.016,-0.207C0.009,-0.231 0.005,-0.256 0.002,-0.282C0,-0.307 -0.001,-0.332 0,-0.355C0.006,-0.373 0.013,-0.389 0.021,-0.404C0.03,-0.418 0.039,-0.432 0.05,-0.446C0.06,-0.459 0.071,-0.472 0.083,-0.484C0.094,-0.496 0.105,-0.508 0.116,-0.521C0.12,-0.521 0.124,-0.52 0.127,-0.518C0.13,-0.525 0.133,-0.531 0.139,-0.536C0.144,-0.541 0.149,-0.546 0.155,-0.55C0.161,-0.555 0.167,-0.559 0.173,-0.563C0.179,-0.567 0.184,-0.572 0.188,-0.578C0.204,-0.582 0.218,-0.588 0.231,-0.595C0.244,-0.602 0.256,-0.61 0.268,-0.618C0.279,-0.627 0.291,-0.634 0.304,-0.642C0.316,-0.649 0.33,-0.654 0.347,-0.658C0.353,-0.665 0.36,-0.67 0.369,-0.675C0.377,-0.679 0.386,-0.684 0.395,-0.688C0.404,-0.691 0.412,-0.696 0.42,-0.7C0.429,-0.705 0.435,-0.711 0.44,-0.719C0.444,-0.714 0.45,-0.712 0.457,-0.713C0.464,-0.715 0.471,-0.717 0.477,-0.719C0.48,-0.719 0.484,-0.719 0.486,-0.717C0.489,-0.715 0.491,-0.713 0.494,-0.71C0.496,-0.708 0.498,-0.707 0.5,-0.706C0.501,-0.705 0.503,-0.707 0.505,-0.712C0.51,-0.711 0.512,-0.709 0.509,-0.705C0.507,-0.701 0.506,-0.699 0.505,-0.697C0.511,-0.699 0.517,-0.697 0.521,-0.694C0.525,-0.69 0.532,-0.688 0.541,-0.687C0.544,-0.683 0.545,-0.681 0.544,-0.679C0.543,-0.677 0.542,-0.674 0.541,-0.669C0.564,-0.662 0.579,-0.651 0.586,-0.635C0.592,-0.62 0.593,-0.604 0.588,-0.587C0.583,-0.571 0.573,-0.556 0.559,-0.542C0.545,-0.528 0.53,-0.518 0.513,-0.514C0.493,-0.508 0.474,-0.503 0.457,-0.498C0.439,-0.493 0.423,-0.487 0.407,-0.48C0.391,-0.474 0.376,-0.466 0.362,-0.458C0.348,-0.449 0.336,-0.438 0.325,-0.427C0.307,-0.422 0.291,-0.414 0.276,-0.405C0.261,-0.396 0.248,-0.386 0.235,-0.375C0.222,-0.364 0.21,-0.352 0.198,-0.34C0.187,-0.328 0.175,-0.316 0.163,-0.305C0.163,-0.294 0.161,-0.285 0.157,-0.279C0.153,-0.273 0.149,-0.268 0.145,-0.262C0.146,-0.249 0.149,-0.239 0.153,-0.23C0.157,-0.221 0.161,-0.212 0.166,-0.203C0.218,-0.188 0.273,-0.178 0.332,-0.174C0.39,-0.171 0.448,-0.169 0.505,-0.168C0.511,-0.16 0.517,-0.153 0.525,-0.146C0.532,-0.139 0.539,-0.132 0.545,-0.125C0.552,-0.118 0.556,-0.11 0.56,-0.1C0.564,-0.091 0.564,-0.079 0.563,-0.066C0.551,-0.055 0.539,-0.045 0.526,-0.035C0.513,-0.025 0.5,-0.015 0.487,-0.005C0.481,-0.004 0.474,-0.004 0.466,-0.005C0.458,-0.006 0.45,-0.006 0.441,-0.006C0.432,-0.006 0.423,-0.005 0.415,-0.004C0.406,-0.003 0.397,-0.001 0.39,0.002C0.349,0.001 0.307,-0.004 0.264,-0.013C0.221,-0.022 0.181,-0.033 0.145,-0.045C0.137,-0.053 0.13,-0.061 0.122,-0.069C0.114,-0.076 0.104,-0.082 0.091,-0.085Z'\n        fill='#fff'\n        fillRule='nonzero'\n        transform='matrix(73 0 0 73 .016 158.393)'\n      />\n      <path\n        d='M0.5,-0.095C0.501,-0.078 0.499,-0.064 0.494,-0.053C0.489,-0.042 0.482,-0.032 0.473,-0.024C0.464,-0.017 0.453,-0.01 0.441,-0.006C0.43,-0.001 0.418,0.003 0.407,0.007C0.402,0.004 0.397,0 0.392,-0.003C0.387,-0.007 0.382,-0.01 0.375,-0.012C0.367,-0.027 0.358,-0.041 0.351,-0.053C0.343,-0.065 0.339,-0.079 0.34,-0.095C0.34,-0.095 0.34,-0.099 0.341,-0.105L0.349,-0.149C0.35,-0.156 0.351,-0.16 0.351,-0.16C0.336,-0.159 0.32,-0.156 0.304,-0.15C0.287,-0.145 0.272,-0.139 0.256,-0.132C0.241,-0.125 0.227,-0.118 0.213,-0.11C0.2,-0.103 0.189,-0.097 0.181,-0.092C0.181,-0.09 0.179,-0.085 0.177,-0.078C0.174,-0.07 0.171,-0.062 0.167,-0.054C0.163,-0.046 0.159,-0.039 0.154,-0.032C0.15,-0.026 0.145,-0.022 0.141,-0.022C0.141,-0.021 0.142,-0.019 0.144,-0.017C0.145,-0.015 0.145,-0.012 0.144,-0.009C0.134,-0.006 0.126,-0.003 0.119,0.001C0.112,0.006 0.104,0.009 0.097,0.012C0.089,0.015 0.08,0.017 0.071,0.017C0.062,0.017 0.051,0.013 0.039,0.007C0.039,0.003 0.037,0 0.034,-0.003C0.031,-0.006 0.028,-0.009 0.024,-0.011C0.02,-0.014 0.017,-0.015 0.015,-0.017C0.012,-0.019 0.011,-0.02 0.011,-0.021C0.007,-0.021 0.006,-0.023 0.007,-0.028C0.007,-0.034 0.01,-0.035 0.015,-0.032C0.007,-0.041 0.003,-0.049 0.001,-0.056C0,-0.063 -0.004,-0.072 -0.01,-0.082C-0.008,-0.083 -0.007,-0.086 -0.006,-0.089C-0.005,-0.092 -0.005,-0.095 -0.004,-0.098C-0.003,-0.1 -0.002,-0.102 -0.001,-0.104C0,-0.105 0.002,-0.104 0.004,-0.103C0.003,-0.108 0.003,-0.113 0.004,-0.117C0.005,-0.121 0.007,-0.125 0.008,-0.128C0.009,-0.131 0.01,-0.134 0.011,-0.138C0.011,-0.141 0.01,-0.145 0.008,-0.148C0.018,-0.163 0.025,-0.178 0.028,-0.195C0.032,-0.211 0.034,-0.227 0.034,-0.24C0.039,-0.245 0.043,-0.251 0.046,-0.26C0.05,-0.268 0.053,-0.277 0.055,-0.286C0.057,-0.294 0.057,-0.303 0.057,-0.311C0.057,-0.319 0.056,-0.326 0.054,-0.331C0.054,-0.334 0.058,-0.335 0.064,-0.334C0.068,-0.355 0.071,-0.38 0.073,-0.407C0.074,-0.434 0.077,-0.459 0.081,-0.484C0.085,-0.508 0.091,-0.53 0.101,-0.548C0.11,-0.567 0.124,-0.579 0.145,-0.585C0.148,-0.571 0.153,-0.559 0.16,-0.549C0.166,-0.538 0.173,-0.528 0.18,-0.519C0.188,-0.51 0.195,-0.5 0.203,-0.49C0.21,-0.48 0.217,-0.469 0.224,-0.457C0.223,-0.445 0.222,-0.43 0.22,-0.414C0.218,-0.398 0.215,-0.381 0.212,-0.364C0.209,-0.347 0.207,-0.331 0.204,-0.315C0.201,-0.3 0.198,-0.286 0.195,-0.275C0.196,-0.272 0.198,-0.27 0.201,-0.27C0.204,-0.269 0.204,-0.266 0.202,-0.261C0.218,-0.265 0.234,-0.268 0.251,-0.271C0.268,-0.275 0.285,-0.278 0.302,-0.282C0.319,-0.286 0.335,-0.291 0.351,-0.295C0.367,-0.3 0.382,-0.306 0.396,-0.313C0.399,-0.339 0.403,-0.364 0.408,-0.39C0.413,-0.415 0.414,-0.441 0.41,-0.468C0.413,-0.47 0.416,-0.474 0.418,-0.478C0.42,-0.481 0.423,-0.484 0.428,-0.485C0.424,-0.498 0.423,-0.511 0.424,-0.524C0.424,-0.538 0.427,-0.551 0.431,-0.563C0.435,-0.576 0.442,-0.586 0.45,-0.595C0.458,-0.604 0.468,-0.61 0.479,-0.612C0.487,-0.602 0.493,-0.591 0.498,-0.579C0.503,-0.567 0.509,-0.555 0.514,-0.542C0.52,-0.53 0.526,-0.519 0.532,-0.508C0.538,-0.498 0.546,-0.488 0.556,-0.48C0.558,-0.462 0.559,-0.442 0.56,-0.422C0.561,-0.402 0.562,-0.381 0.563,-0.36C0.557,-0.336 0.552,-0.312 0.545,-0.289C0.539,-0.265 0.535,-0.241 0.532,-0.215C0.528,-0.21 0.524,-0.204 0.521,-0.197C0.519,-0.191 0.516,-0.184 0.514,-0.177C0.511,-0.17 0.508,-0.164 0.505,-0.158C0.502,-0.152 0.498,-0.146 0.493,-0.142C0.496,-0.134 0.496,-0.126 0.495,-0.12C0.493,-0.113 0.495,-0.104 0.5,-0.095Z'\n        fill='#fff'\n        fillRule='nonzero'\n        transform='matrix(73 0 0 73 51.947 158.393)'\n      />\n      <path\n        d='M0.517,-0.082C0.513,-0.071 0.507,-0.06 0.5,-0.048C0.492,-0.037 0.483,-0.027 0.473,-0.018C0.463,-0.009 0.452,-0.002 0.439,0.004C0.427,0.01 0.414,0.013 0.4,0.014C0.392,0.012 0.386,0.01 0.383,0.007C0.38,0.005 0.377,0.003 0.374,0.001L0.364,-0.005L0.353,-0.01L0.356,-0.022C0.358,-0.028 0.357,-0.032 0.355,-0.035C0.354,-0.038 0.35,-0.042 0.344,-0.047C0.342,-0.049 0.34,-0.051 0.338,-0.053C0.336,-0.055 0.334,-0.057 0.333,-0.059L0.316,-0.077L0.343,-0.084C0.359,-0.089 0.37,-0.094 0.375,-0.102C0.381,-0.109 0.383,-0.121 0.382,-0.138C0.369,-0.14 0.358,-0.141 0.349,-0.139C0.34,-0.137 0.331,-0.134 0.322,-0.132C0.311,-0.129 0.299,-0.126 0.287,-0.124C0.275,-0.121 0.261,-0.12 0.247,-0.12C0.242,-0.12 0.237,-0.12 0.232,-0.121C0.228,-0.121 0.223,-0.121 0.218,-0.122L0.208,-0.124C0.207,-0.131 0.205,-0.135 0.204,-0.136C0.203,-0.137 0.201,-0.138 0.2,-0.14C0.197,-0.143 0.194,-0.147 0.19,-0.153C0.186,-0.158 0.186,-0.165 0.188,-0.174C0.184,-0.18 0.182,-0.186 0.182,-0.191C0.178,-0.184 0.175,-0.175 0.173,-0.167L0.169,-0.157L0.159,-0.155C0.158,-0.155 0.157,-0.153 0.156,-0.151C0.156,-0.149 0.155,-0.147 0.155,-0.146L0.15,-0.129L0.143,-0.122C0.141,-0.116 0.14,-0.11 0.138,-0.104C0.136,-0.099 0.134,-0.093 0.132,-0.088C0.129,-0.079 0.126,-0.071 0.124,-0.063C0.121,-0.055 0.12,-0.047 0.121,-0.039L0.117,-0.028C0.114,-0.024 0.11,-0.021 0.106,-0.019C0.103,-0.017 0.099,-0.015 0.095,-0.013C0.093,-0.011 0.092,-0.01 0.089,-0.009C0.087,-0.008 0.085,-0.007 0.084,-0.007L0.081,0.004L0.069,0.006C0.062,0.007 0.057,0.008 0.054,0.009C0.051,0.009 0.048,0.01 0.044,0.01L0.034,0.009C0.027,0.003 0.021,-0.002 0.018,-0.005C0.014,-0.009 0.009,-0.012 0.004,-0.016C-0.002,-0.023 -0.005,-0.029 -0.006,-0.033C-0.007,-0.037 -0.007,-0.041 -0.008,-0.044C-0.009,-0.048 -0.01,-0.051 -0.01,-0.054C-0.011,-0.056 -0.011,-0.058 -0.013,-0.06L-0.025,-0.071L-0.015,-0.08L-0.014,-0.097C-0.001,-0.13 0.013,-0.162 0.028,-0.192C0.042,-0.223 0.058,-0.254 0.073,-0.286L0.104,-0.349C0.103,-0.351 0.103,-0.353 0.103,-0.355C0.103,-0.358 0.103,-0.361 0.104,-0.364C0.112,-0.375 0.118,-0.385 0.122,-0.394C0.127,-0.403 0.131,-0.412 0.136,-0.421C0.141,-0.432 0.146,-0.443 0.152,-0.453C0.157,-0.464 0.164,-0.474 0.173,-0.485L0.188,-0.492C0.19,-0.493 0.193,-0.494 0.195,-0.495C0.198,-0.496 0.201,-0.496 0.204,-0.496L0.219,-0.494C0.237,-0.503 0.253,-0.514 0.267,-0.53C0.28,-0.545 0.294,-0.563 0.309,-0.585L0.318,-0.599L0.331,-0.591C0.334,-0.589 0.339,-0.587 0.345,-0.585C0.351,-0.584 0.357,-0.582 0.363,-0.58C0.375,-0.577 0.386,-0.575 0.396,-0.571C0.407,-0.568 0.415,-0.563 0.422,-0.557C0.426,-0.546 0.428,-0.538 0.429,-0.533C0.429,-0.528 0.43,-0.523 0.432,-0.518C0.434,-0.507 0.435,-0.495 0.437,-0.484C0.439,-0.473 0.44,-0.461 0.44,-0.447C0.444,-0.436 0.446,-0.425 0.449,-0.415C0.451,-0.404 0.453,-0.393 0.455,-0.382C0.458,-0.366 0.462,-0.351 0.465,-0.336C0.468,-0.322 0.472,-0.308 0.478,-0.295C0.483,-0.295 0.486,-0.295 0.487,-0.294C0.491,-0.295 0.494,-0.296 0.498,-0.297C0.501,-0.298 0.505,-0.298 0.51,-0.299L0.521,-0.3L0.524,-0.29C0.525,-0.287 0.528,-0.284 0.534,-0.28C0.543,-0.28 0.549,-0.278 0.553,-0.275C0.557,-0.272 0.56,-0.269 0.563,-0.266C0.566,-0.263 0.569,-0.261 0.571,-0.26L0.586,-0.254L0.578,-0.239C0.572,-0.228 0.562,-0.216 0.55,-0.206C0.538,-0.195 0.525,-0.186 0.51,-0.179C0.51,-0.175 0.511,-0.171 0.511,-0.167C0.512,-0.164 0.512,-0.16 0.514,-0.156C0.516,-0.145 0.517,-0.134 0.519,-0.122C0.52,-0.11 0.52,-0.098 0.519,-0.086L0.517,-0.082ZM0.234,-0.251C0.254,-0.252 0.272,-0.254 0.288,-0.255C0.304,-0.257 0.321,-0.26 0.341,-0.264C0.336,-0.283 0.331,-0.304 0.326,-0.325C0.321,-0.346 0.315,-0.367 0.31,-0.388L0.304,-0.378C0.291,-0.364 0.278,-0.349 0.266,-0.332C0.254,-0.315 0.244,-0.299 0.235,-0.284C0.231,-0.278 0.228,-0.272 0.224,-0.267C0.22,-0.261 0.216,-0.255 0.213,-0.249C0.217,-0.25 0.221,-0.25 0.224,-0.25C0.228,-0.25 0.231,-0.25 0.234,-0.251Z'\n        fill='#fff'\n        fillRule='nonzero'\n        transform='matrix(73 0 0 73 101.739 158.393)'\n      />\n      <path\n        d='M0.2,-0.178C0.194,-0.176 0.19,-0.173 0.188,-0.167L0.173,-0.134C0.171,-0.129 0.168,-0.127 0.163,-0.127C0.162,-0.122 0.161,-0.117 0.158,-0.113C0.155,-0.109 0.152,-0.105 0.149,-0.101C0.147,-0.097 0.145,-0.092 0.144,-0.087C0.142,-0.083 0.143,-0.077 0.146,-0.07C0.14,-0.066 0.137,-0.061 0.136,-0.054C0.134,-0.047 0.133,-0.04 0.131,-0.033C0.13,-0.027 0.127,-0.021 0.123,-0.017C0.119,-0.012 0.112,-0.01 0.102,-0.011C0.1,-0.008 0.099,-0.007 0.101,-0.006C0.102,-0.005 0.103,-0.003 0.104,0.001C0.096,0 0.091,0 0.087,0.002C0.084,0.005 0.079,0.006 0.074,0.007C0.062,0.003 0.052,-0.004 0.043,-0.014C0.035,-0.023 0.028,-0.034 0.022,-0.046C0.016,-0.058 0.01,-0.071 0.005,-0.083C0,-0.095 -0.004,-0.106 -0.009,-0.115C-0.007,-0.122 -0.007,-0.129 -0.008,-0.136C-0.009,-0.143 -0.011,-0.149 -0.015,-0.153C0.017,-0.221 0.052,-0.293 0.09,-0.37C0.128,-0.447 0.163,-0.523 0.197,-0.598C0.212,-0.592 0.227,-0.585 0.242,-0.578C0.256,-0.57 0.27,-0.562 0.282,-0.552C0.294,-0.542 0.304,-0.531 0.313,-0.518C0.321,-0.505 0.326,-0.491 0.329,-0.476C0.328,-0.472 0.326,-0.47 0.325,-0.471C0.323,-0.472 0.322,-0.472 0.32,-0.47C0.323,-0.466 0.324,-0.464 0.325,-0.463C0.325,-0.462 0.325,-0.46 0.325,-0.459C0.324,-0.458 0.324,-0.456 0.324,-0.454C0.324,-0.451 0.325,-0.448 0.327,-0.444C0.325,-0.445 0.323,-0.445 0.322,-0.443C0.321,-0.442 0.319,-0.442 0.315,-0.443C0.318,-0.436 0.319,-0.43 0.318,-0.426C0.317,-0.421 0.315,-0.417 0.313,-0.414C0.312,-0.41 0.31,-0.406 0.309,-0.402C0.307,-0.398 0.308,-0.392 0.31,-0.386C0.308,-0.386 0.306,-0.385 0.305,-0.384L0.3,-0.378C0.299,-0.377 0.298,-0.377 0.296,-0.378C0.298,-0.364 0.299,-0.349 0.298,-0.335C0.297,-0.321 0.297,-0.306 0.296,-0.292C0.296,-0.277 0.296,-0.262 0.297,-0.246C0.298,-0.23 0.3,-0.213 0.304,-0.196C0.327,-0.21 0.346,-0.228 0.36,-0.249C0.374,-0.271 0.385,-0.295 0.394,-0.321C0.403,-0.348 0.41,-0.377 0.414,-0.407C0.419,-0.438 0.424,-0.469 0.429,-0.501C0.435,-0.507 0.439,-0.514 0.442,-0.522C0.446,-0.531 0.449,-0.54 0.451,-0.549C0.454,-0.559 0.456,-0.568 0.459,-0.578C0.462,-0.587 0.465,-0.596 0.469,-0.604C0.479,-0.602 0.487,-0.599 0.494,-0.594C0.5,-0.589 0.507,-0.584 0.513,-0.579C0.519,-0.573 0.525,-0.568 0.531,-0.563C0.538,-0.558 0.546,-0.555 0.556,-0.554C0.563,-0.543 0.571,-0.532 0.577,-0.521C0.584,-0.511 0.588,-0.5 0.59,-0.488C0.587,-0.483 0.584,-0.477 0.583,-0.471C0.581,-0.464 0.579,-0.458 0.577,-0.451C0.575,-0.445 0.573,-0.439 0.569,-0.433C0.566,-0.428 0.562,-0.423 0.556,-0.419C0.554,-0.402 0.551,-0.387 0.548,-0.373C0.545,-0.359 0.542,-0.345 0.54,-0.331C0.537,-0.317 0.534,-0.303 0.532,-0.289C0.53,-0.274 0.53,-0.258 0.53,-0.24C0.525,-0.225 0.52,-0.209 0.514,-0.192C0.508,-0.175 0.503,-0.16 0.5,-0.146C0.49,-0.138 0.481,-0.128 0.476,-0.116C0.47,-0.104 0.464,-0.093 0.457,-0.081C0.454,-0.078 0.453,-0.078 0.452,-0.079C0.451,-0.08 0.449,-0.081 0.445,-0.082C0.446,-0.079 0.446,-0.077 0.445,-0.076C0.445,-0.075 0.444,-0.074 0.443,-0.073C0.442,-0.072 0.441,-0.07 0.441,-0.068C0.441,-0.066 0.441,-0.064 0.442,-0.061C0.433,-0.057 0.425,-0.051 0.418,-0.044C0.411,-0.037 0.403,-0.03 0.395,-0.024C0.387,-0.019 0.377,-0.015 0.366,-0.013C0.354,-0.011 0.34,-0.013 0.321,-0.02C0.295,-0.039 0.271,-0.062 0.25,-0.087C0.23,-0.112 0.213,-0.143 0.2,-0.178Z'\n        fill='#fff'\n        fillRule='nonzero'\n        transform='matrix(73 0 0 73 151.46 158.393)'\n      />\n      <path\n        d='M0.692,-0.176C0.677,-0.148 0.656,-0.126 0.631,-0.111C0.605,-0.096 0.577,-0.083 0.547,-0.073C0.516,-0.063 0.484,-0.054 0.451,-0.046C0.417,-0.038 0.385,-0.028 0.354,-0.016C0.344,-0.016 0.336,-0.015 0.33,-0.015C0.323,-0.014 0.316,-0.013 0.31,-0.012C0.304,-0.011 0.298,-0.01 0.292,-0.009C0.286,-0.008 0.28,-0.007 0.272,-0.007C0.27,-0.007 0.268,-0.007 0.268,-0.005C0.267,-0.004 0.266,-0.002 0.265,-0.001C0.254,0.001 0.244,0.002 0.235,0.002L0.213,0.002C0.205,0.002 0.197,0.003 0.189,0.005C0.181,0.008 0.174,0.008 0.167,0.008C0.118,0.005 0.08,-0.012 0.052,-0.044C0.025,-0.077 0.009,-0.121 0.006,-0.179C0.007,-0.182 0.006,-0.184 0.004,-0.185C0.003,-0.185 0.001,-0.186 0,-0.188C0,-0.194 0.001,-0.2 0.002,-0.204C0.004,-0.209 0.004,-0.215 0.003,-0.222C0.02,-0.257 0.039,-0.291 0.061,-0.322C0.082,-0.353 0.108,-0.38 0.138,-0.403C0.142,-0.407 0.146,-0.411 0.149,-0.415C0.153,-0.419 0.156,-0.423 0.159,-0.427C0.162,-0.431 0.165,-0.434 0.169,-0.437C0.173,-0.44 0.178,-0.442 0.184,-0.443C0.197,-0.459 0.214,-0.473 0.232,-0.486C0.251,-0.499 0.271,-0.512 0.292,-0.524C0.313,-0.536 0.333,-0.548 0.354,-0.56C0.375,-0.572 0.393,-0.586 0.41,-0.601C0.417,-0.597 0.423,-0.596 0.426,-0.598C0.429,-0.599 0.433,-0.599 0.437,-0.598C0.441,-0.588 0.447,-0.581 0.456,-0.577C0.464,-0.573 0.472,-0.569 0.48,-0.565C0.488,-0.561 0.496,-0.556 0.503,-0.55C0.51,-0.544 0.516,-0.536 0.52,-0.526C0.516,-0.526 0.514,-0.525 0.514,-0.522C0.514,-0.519 0.515,-0.516 0.517,-0.513C0.518,-0.51 0.518,-0.507 0.518,-0.504C0.518,-0.501 0.515,-0.5 0.511,-0.5C0.511,-0.497 0.514,-0.495 0.517,-0.495C0.521,-0.494 0.522,-0.493 0.522,-0.489C0.522,-0.486 0.522,-0.483 0.52,-0.481C0.518,-0.479 0.518,-0.476 0.52,-0.472C0.507,-0.463 0.492,-0.455 0.476,-0.447C0.46,-0.439 0.444,-0.431 0.426,-0.422C0.409,-0.414 0.391,-0.404 0.373,-0.394C0.354,-0.384 0.336,-0.372 0.318,-0.359C0.301,-0.346 0.283,-0.332 0.265,-0.316C0.246,-0.3 0.229,-0.283 0.212,-0.266C0.195,-0.248 0.179,-0.23 0.164,-0.211C0.149,-0.193 0.136,-0.174 0.126,-0.156L0.135,-0.142C0.156,-0.14 0.175,-0.14 0.193,-0.142C0.211,-0.144 0.229,-0.143 0.247,-0.139C0.249,-0.14 0.25,-0.142 0.251,-0.145C0.252,-0.147 0.253,-0.149 0.256,-0.15C0.293,-0.154 0.327,-0.16 0.359,-0.168C0.391,-0.177 0.424,-0.185 0.457,-0.194C0.452,-0.196 0.447,-0.198 0.443,-0.2C0.439,-0.201 0.435,-0.203 0.431,-0.204C0.427,-0.207 0.428,-0.21 0.431,-0.212C0.435,-0.215 0.438,-0.217 0.44,-0.22C0.431,-0.225 0.424,-0.231 0.418,-0.239C0.413,-0.247 0.41,-0.257 0.408,-0.271C0.412,-0.274 0.414,-0.278 0.414,-0.282C0.414,-0.287 0.412,-0.29 0.408,-0.293C0.406,-0.294 0.404,-0.294 0.403,-0.293L0.4,-0.287C0.4,-0.286 0.398,-0.286 0.396,-0.287C0.396,-0.293 0.398,-0.298 0.4,-0.302C0.402,-0.306 0.404,-0.31 0.405,-0.315L0.473,-0.36C0.48,-0.355 0.489,-0.349 0.499,-0.343C0.509,-0.337 0.52,-0.331 0.532,-0.325C0.543,-0.319 0.555,-0.312 0.567,-0.306C0.579,-0.3 0.59,-0.294 0.601,-0.288C0.61,-0.284 0.618,-0.279 0.625,-0.272C0.632,-0.266 0.639,-0.259 0.646,-0.252C0.652,-0.246 0.659,-0.239 0.666,-0.232C0.672,-0.226 0.68,-0.22 0.689,-0.216C0.688,-0.207 0.688,-0.201 0.69,-0.195C0.692,-0.19 0.693,-0.184 0.692,-0.176Z'\n        fill='#fff'\n        fillRule='nonzero'\n        transform='matrix(73 0 0 73 199.97 158.393)'\n      />\n      <path\n        d='M0.545,-0.55C0.546,-0.545 0.546,-0.542 0.545,-0.54C0.545,-0.537 0.545,-0.535 0.544,-0.533C0.544,-0.531 0.544,-0.529 0.544,-0.527C0.544,-0.525 0.545,-0.521 0.546,-0.517C0.532,-0.494 0.516,-0.479 0.499,-0.471C0.481,-0.463 0.461,-0.457 0.44,-0.454C0.42,-0.45 0.398,-0.446 0.376,-0.442C0.355,-0.438 0.333,-0.43 0.312,-0.417C0.303,-0.42 0.295,-0.42 0.289,-0.417C0.282,-0.414 0.272,-0.413 0.259,-0.414C0.255,-0.41 0.25,-0.407 0.244,-0.406C0.238,-0.404 0.232,-0.402 0.227,-0.4C0.229,-0.395 0.23,-0.389 0.23,-0.382C0.23,-0.376 0.23,-0.371 0.232,-0.367C0.255,-0.365 0.28,-0.366 0.308,-0.368C0.336,-0.371 0.363,-0.372 0.39,-0.373C0.39,-0.37 0.39,-0.368 0.389,-0.367C0.387,-0.366 0.387,-0.364 0.388,-0.361C0.392,-0.358 0.397,-0.354 0.401,-0.349C0.406,-0.344 0.41,-0.34 0.415,-0.335C0.42,-0.33 0.424,-0.327 0.429,-0.324C0.434,-0.321 0.44,-0.32 0.446,-0.32C0.449,-0.315 0.451,-0.309 0.452,-0.303C0.453,-0.297 0.452,-0.291 0.449,-0.284C0.439,-0.277 0.428,-0.27 0.418,-0.262C0.408,-0.255 0.397,-0.248 0.385,-0.242C0.374,-0.236 0.362,-0.232 0.349,-0.228C0.336,-0.224 0.322,-0.223 0.307,-0.224L0.299,-0.224C0.298,-0.224 0.296,-0.225 0.293,-0.227C0.288,-0.223 0.28,-0.222 0.271,-0.224C0.262,-0.225 0.254,-0.224 0.249,-0.221C0.242,-0.224 0.233,-0.225 0.223,-0.225C0.213,-0.225 0.204,-0.226 0.196,-0.229C0.186,-0.215 0.176,-0.2 0.168,-0.185C0.16,-0.169 0.152,-0.152 0.146,-0.135C0.168,-0.132 0.186,-0.13 0.201,-0.131C0.215,-0.132 0.229,-0.133 0.242,-0.134C0.255,-0.136 0.269,-0.138 0.282,-0.139C0.296,-0.141 0.313,-0.141 0.334,-0.141C0.347,-0.148 0.362,-0.153 0.38,-0.155C0.398,-0.157 0.415,-0.161 0.43,-0.166C0.435,-0.164 0.439,-0.161 0.443,-0.156C0.447,-0.151 0.451,-0.146 0.455,-0.142C0.458,-0.138 0.462,-0.134 0.466,-0.131C0.47,-0.128 0.475,-0.126 0.48,-0.127C0.483,-0.124 0.485,-0.121 0.486,-0.118C0.487,-0.114 0.488,-0.111 0.488,-0.107C0.489,-0.104 0.49,-0.101 0.492,-0.099C0.493,-0.097 0.496,-0.096 0.5,-0.097C0.49,-0.075 0.479,-0.059 0.466,-0.047C0.454,-0.036 0.439,-0.027 0.423,-0.021C0.407,-0.016 0.389,-0.011 0.369,-0.008C0.349,-0.005 0.327,-0.001 0.303,0.004C0.297,0.005 0.292,0.005 0.288,0.003C0.284,0.002 0.28,0.001 0.274,0.001C0.259,0.004 0.242,0.007 0.221,0.01C0.2,0.012 0.179,0.013 0.157,0.013C0.136,0.012 0.115,0.009 0.096,0.004C0.076,0 0.06,-0.009 0.048,-0.021C0.043,-0.026 0.039,-0.031 0.038,-0.038C0.036,-0.044 0.032,-0.049 0.024,-0.052C0.024,-0.06 0.022,-0.07 0.021,-0.08C0.019,-0.09 0.017,-0.101 0.015,-0.113C0.013,-0.124 0.011,-0.135 0.01,-0.146C0.009,-0.158 0.01,-0.168 0.012,-0.177C0.014,-0.187 0.018,-0.195 0.024,-0.203C0.03,-0.211 0.032,-0.219 0.03,-0.229C0.034,-0.229 0.035,-0.231 0.036,-0.234C0.037,-0.237 0.039,-0.238 0.044,-0.237C0.048,-0.249 0.052,-0.26 0.057,-0.271C0.061,-0.281 0.066,-0.291 0.071,-0.301C0.076,-0.311 0.081,-0.32 0.085,-0.331C0.09,-0.341 0.095,-0.352 0.1,-0.364C0.09,-0.373 0.084,-0.382 0.08,-0.392C0.075,-0.402 0.072,-0.412 0.07,-0.422C0.068,-0.432 0.067,-0.443 0.065,-0.454C0.064,-0.464 0.062,-0.475 0.059,-0.486C0.065,-0.496 0.073,-0.504 0.083,-0.51C0.092,-0.516 0.102,-0.521 0.113,-0.525C0.124,-0.529 0.136,-0.533 0.149,-0.535C0.162,-0.538 0.176,-0.541 0.19,-0.544C0.216,-0.552 0.24,-0.559 0.26,-0.563C0.281,-0.568 0.301,-0.572 0.321,-0.575C0.341,-0.578 0.361,-0.58 0.383,-0.583C0.404,-0.586 0.429,-0.59 0.456,-0.595C0.462,-0.589 0.467,-0.586 0.473,-0.586C0.475,-0.592 0.478,-0.594 0.482,-0.591C0.486,-0.589 0.487,-0.591 0.486,-0.597C0.493,-0.586 0.501,-0.576 0.511,-0.569C0.521,-0.561 0.533,-0.555 0.545,-0.55Z'\n        fill='#fff'\n        fillRule='nonzero'\n        transform='matrix(73 0 0 73 254.895 158.393)'\n      />\n    </g>\n  </svg>\n);\n\nexport const VectorSubTitle = () => (\n  <svg\n    viewBox='0 0 437 74'\n    fillRule='evenodd'\n    clipRule='evenodd'\n    strokeLinejoin='round'\n    strokeMiterlimit='1.414'>\n    <path\n      d='M160.947,28L160.947,4.302L166.113,1.555L166.113,28L160.947,28Z'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <path\n      d='M132.165,28L132.165,23.04L138.274,23.04C143.084,23.04 146.911,21.605 149.754,18.735C147.895,15.482 145.64,13.856 142.989,13.856C140.802,13.856 138.41,15.045 135.814,17.423L135.814,12.872C138.11,10.357 140.706,9.1 143.604,9.1C145.736,9.1 147.813,9.879 149.836,11.437C151.858,12.995 153.649,15.209 155.207,18.079L155.207,20.129C153.239,22.643 150.785,24.584 147.847,25.951C144.909,27.317 141.704,28 138.233,28L132.165,28Z'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <rect\n      x='128.065'\n      y='23.04'\n      width='7.216'\n      height='4.96'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <rect\n      x='123.965'\n      y='23.04'\n      width='7.216'\n      height='4.96'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <rect\n      x='119.865'\n      y='23.04'\n      width='7.216'\n      height='4.96'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <rect\n      x='115.765'\n      y='23.04'\n      width='7.216'\n      height='4.96'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <path\n      d='M107.975,5.656C107.155,5.656 106.499,5.41 106.007,4.918C105.515,4.426 105.269,3.756 105.269,2.909C105.269,2.116 105.515,1.474 106.007,0.982C106.499,0.49 107.155,0.244 107.975,0.244C108.795,0.244 109.444,0.483 109.922,0.961C110.4,1.439 110.64,2.089 110.64,2.909C110.64,4.74 109.751,5.656 107.975,5.656ZM114.535,23.04L118.225,23.04L118.225,28L114.043,28C112.047,28 110.394,27.468 109.082,26.402C107.77,27.468 106.116,28 104.121,28L99.939,28L99.939,23.04L103.629,23.04C104.667,23.04 105.405,22.814 105.843,22.363C106.28,21.912 106.499,21.154 106.499,20.088L106.499,12.503L111.665,9.797L111.665,20.088C111.665,21.154 111.883,21.912 112.321,22.363C112.758,22.814 113.496,23.04 114.535,23.04Z'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <path\n      d='M98.217,28C95.729,28 93.802,27.208 92.436,25.623C91.26,24.256 90.673,22.493 90.673,20.334L90.673,4.262L95.839,1.556L95.839,20.088C95.839,21.154 96.057,21.912 96.495,22.363C96.932,22.814 97.67,23.04 98.709,23.04L102.399,23.04L102.399,28L98.217,28Z'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <path\n      d='M64.187,28L64.187,4.303L69.353,1.556L69.353,28L64.187,28Z'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <path\n      d='M45.614,28L45.614,23.04L48.197,23.04C49.454,23.04 50.349,22.766 50.882,22.22C51.415,21.673 51.682,20.744 51.682,19.432L51.682,4.303L56.807,1.556L56.807,19.473C56.807,22.124 56,24.242 54.388,25.828C52.912,27.276 50.944,28 48.484,28L45.614,28Z'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <rect\n      x='41.514'\n      y='23.04'\n      width='7.216'\n      height='4.96'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <rect\n      x='37.414'\n      y='23.04'\n      width='7.216'\n      height='4.96'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <rect\n      x='33.314'\n      y='23.04'\n      width='7.216'\n      height='4.96'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <rect\n      x='29.214'\n      y='23.04'\n      width='7.216'\n      height='4.96'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <rect\n      x='25.114'\n      y='23.04'\n      width='7.216'\n      height='4.96'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <rect\n      x='21.014'\n      y='23.04'\n      width='7.216'\n      height='4.96'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <rect\n      x='16.914'\n      y='23.04'\n      width='7.216'\n      height='4.96'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n    <path\n      d='M4.982,6.189C4.162,6.189 3.506,5.943 3.014,5.451C2.522,4.959 2.276,4.289 2.276,3.442C2.276,2.649 2.522,2.007 3.014,1.515C3.506,1.023 4.162,0.777 4.982,0.777C5.802,0.777 6.452,1.016 6.93,1.494C7.408,1.972 7.647,2.622 7.647,3.442C7.647,5.273 6.759,6.189 4.982,6.189ZM11.255,6.189C10.435,6.189 9.779,5.936 9.287,5.43C8.795,4.924 8.549,4.262 8.549,3.442C8.549,2.649 8.802,2.007 9.308,1.515C9.814,1.023 10.463,0.777 11.255,0.777C12.075,0.777 12.725,1.016 13.203,1.494C13.681,1.972 13.92,2.622 13.92,3.442C13.92,5.273 13.032,6.189 11.255,6.189ZM15.683,23.04L19.373,23.04L19.373,28L15.191,28C13.196,28 11.542,27.468 10.23,26.402C8.918,27.468 7.265,28 5.269,28L1.087,28L1.087,23.04L4.777,23.04C5.816,23.04 6.554,22.814 6.991,22.363C7.429,21.912 7.647,21.154 7.647,20.088L7.647,12.503L12.813,9.797L12.813,20.088C12.813,21.154 13.032,21.912 13.469,22.363C13.907,22.814 14.645,23.04 15.683,23.04Z'\n      fill='#fff'\n      fillRule='nonzero'\n      transform='translate(-2.873 -.645) scale(2.64327)'\n    />\n  </svg>\n);\n\nexport const VectorLogo = () => (\n  <svg viewBox='0 0 274 274' fillRule='evenodd' clipRule='evenodd'>\n    <g transform='translate(13.962 3.284)'>\n      <g\n        id='loudspeaker'\n        transform='translate(42.408 39.085)'\n        fill='#fff'\n        fillRule='nonzero'>\n        <path\n          id='Path'\n          d='M137.399,42.661C137.909,43.525 138.793,44 139.698,44C140.18,44 140.667,43.865 141.108,43.583L155.717,34.207C156.984,33.394 157.38,31.661 156.6,30.339C155.821,29.016 154.16,28.603 152.891,29.418L138.284,38.794C137.016,39.606 136.62,41.339 137.399,42.661Z'\n        />\n        <path\n          id='Path1'\n          d='M173.821,61.802L154.647,59.018C153.321,58.822 152.141,60.276 152.011,62.259C151.883,64.243 152.853,66.007 154.18,66.199L173.353,68.983C173.434,68.994 173.512,69 173.59,69C174.817,69 175.868,67.606 175.989,65.742C176.117,63.76 175.147,61.996 173.821,61.802Z'\n        />\n        <path\n          id='Path2'\n          d='M133.303,28.789C133.546,28.931 133.797,29 134.043,29C134.861,29 135.634,28.256 135.947,27.04L141.86,4.185C142.27,2.604 141.748,0.824 140.697,0.21C139.646,-0.405 138.462,0.377 138.053,1.958L132.139,24.813C131.731,26.394 132.251,28.175 133.303,28.789Z'\n        />\n        <path\n          id='Shape'\n          d='M109.103,12.837C107.39,10.033 103.742,9.158 100.967,10.889L97.917,12.792C96.572,13.629 95.632,14.948 95.268,16.501C94.905,18.056 95.161,19.66 95.989,21.019L97.743,23.892L57.66,74.069L49.195,79.35C47.997,80.098 47.626,81.686 48.365,82.897C48.847,83.687 49.682,84.122 50.537,84.122C50.993,84.122 51.456,83.998 51.873,83.738L58.539,79.579L71.53,100.869C69.653,100.746 67.781,101.139 66.08,102.023C66.049,102.037 66.02,102.054 65.99,102.07C65.761,102.192 65.534,102.319 65.313,102.458L57.691,107.237C56.854,107.762 56.083,108.382 55.382,109.076C54.533,109.915 53.791,110.862 53.191,111.895L51.31,114.763L49.926,116.868C49.914,116.864 49.901,116.86 49.891,116.856C49.869,116.847 49.849,116.836 49.828,116.826C49.721,116.778 49.614,116.724 49.512,116.667C49.49,116.655 49.468,116.643 49.447,116.63C49.334,116.562 49.224,116.488 49.119,116.409C49.097,116.393 49.075,116.375 49.054,116.358C48.959,116.283 48.864,116.202 48.775,116.116C48.765,116.106 48.753,116.096 48.742,116.085C48.647,115.991 48.556,115.889 48.47,115.785C48.451,115.762 48.434,115.738 48.416,115.715C48.331,115.605 48.25,115.492 48.177,115.372L37.161,97.32C36.641,96.467 36.48,95.462 36.708,94.488C36.937,93.514 37.526,92.688 38.368,92.163L41.666,90.107C42.863,89.359 43.236,87.771 42.497,86.56C41.757,85.347 40.187,84.971 38.989,85.719L35.691,87.776C33.691,89.025 32.29,90.986 31.747,93.3C31.398,94.795 31.435,96.32 31.836,97.757L29.384,99.288C26.103,101.335 25.081,105.7 27.105,109.018L33.327,119.215C34.307,120.822 35.848,121.945 37.666,122.382C38.205,122.511 38.749,122.575 39.291,122.575C40.572,122.575 41.83,122.217 42.948,121.518L45.404,119.987C45.917,120.458 46.479,120.865 47.081,121.2L40.004,131.981L38.335,133.132C37.987,132.954 37.604,132.841 37.204,132.806C36.383,132.736 35.586,132.992 34.958,133.526L30.567,137.263C29.543,136.603 28.201,136.592 27.149,137.317C27.1,137.352 27.051,137.387 27.004,137.424L2.278,157.161C0.83,158.317 0,160.05 0,161.914L0,169.944C0,173.283 2.687,176 5.989,176L46.437,176C48.262,176 49.964,175.176 51.107,173.737L54.46,169.517C55.047,168.838 55.297,167.968 55.208,167.123L59.721,163.282C60.161,162.908 60.479,162.427 60.657,161.889L71.059,164.045C71.213,164.077 71.368,164.095 71.525,164.097C71.829,164.103 72.131,164.107 72.434,164.107C74.9,164.107 77.349,163.854 79.923,162.281L90.403,155.97C90.578,155.981 90.753,155.987 90.927,155.987C92.439,155.987 93.929,155.567 95.253,154.748L103.671,149.545C107.586,147.125 108.826,141.935 106.434,137.976C105.618,136.623 104.462,135.562 103.098,134.864C104.419,132.304 104.423,129.124 102.828,126.484C101.67,124.569 99.85,123.218 97.698,122.673C98.143,120.608 97.836,118.376 96.664,116.434C95.557,114.599 93.839,113.292 91.809,112.702C92.364,110.546 92.09,108.174 90.854,106.127C90.533,105.595 90.157,105.112 89.741,104.671L140.251,93.554L142.005,96.427C143.121,98.257 145.061,99.265 147.046,99.265C148.104,99.265 149.175,98.979 150.14,98.376L153.19,96.474C154.534,95.635 155.475,94.318 155.839,92.763C156.203,91.21 155.946,89.606 155.116,88.246L109.103,12.837ZM40.273,117.131C39.842,117.4 39.333,117.483 38.842,117.365C38.349,117.247 37.932,116.942 37.666,116.507L31.444,106.311C30.896,105.412 31.173,104.23 32.062,103.674L34.224,102.325L42.436,115.781L40.273,117.131ZM47.132,170.508C46.962,170.723 46.71,170.845 46.437,170.845L5.989,170.845C5.498,170.845 5.098,170.441 5.098,169.944L5.098,161.914C5.098,161.637 5.222,161.379 5.437,161.207L28.628,142.695L49.531,167.49L47.132,170.508ZM52.315,162.846L33.98,141.096L36.695,138.786L54.893,160.654L52.315,162.846ZM77.301,157.86C75.745,158.812 74.285,158.98 71.85,158.948L58.79,156.24C58.481,156.175 58.169,156.17 57.867,156.22L41.836,136.957L43.288,135.954C43.289,135.954 43.291,135.953 43.293,135.952C43.317,135.934 43.341,135.914 43.365,135.897C43.42,135.855 43.474,135.813 43.524,135.769C43.55,135.746 43.574,135.722 43.598,135.699C43.649,135.651 43.697,135.601 43.744,135.549C43.762,135.529 43.782,135.507 43.799,135.486C43.856,135.416 43.911,135.345 43.96,135.271C43.965,135.264 43.971,135.259 43.975,135.252L43.987,135.235C43.99,135.228 43.994,135.221 43.998,135.215L57.479,114.684C57.509,114.639 57.537,114.594 57.563,114.548C58.243,113.36 59.216,112.348 60.378,111.619L68,106.84C68.141,106.751 68.284,106.672 68.429,106.598C68.494,106.564 68.56,106.536 68.625,106.505C68.702,106.47 68.778,106.435 68.856,106.405C68.945,106.368 69.034,106.335 69.126,106.304C69.172,106.286 69.22,106.272 69.268,106.257C69.379,106.222 69.492,106.188 69.605,106.16L69.606,106.16C70.017,106.06 70.433,106.01 70.849,106.007L70.875,106.007C70.998,106.007 71.118,106.013 71.239,106.021C71.278,106.025 71.316,106.027 71.356,106.031C71.464,106.041 71.57,106.053 71.676,106.069C71.738,106.078 71.802,106.092 71.866,106.104C72.028,106.135 72.189,106.174 72.347,106.221C72.408,106.238 72.47,106.254 72.53,106.273C72.611,106.301 72.689,106.332 72.769,106.364C72.831,106.388 72.895,106.413 72.956,106.439C73.034,106.473 73.113,106.511 73.19,106.55C73.248,106.579 73.305,106.609 73.361,106.64C73.438,106.681 73.515,106.725 73.591,106.772C73.642,106.805 73.693,106.838 73.743,106.872C73.819,106.923 73.895,106.974 73.968,107.03C74.013,107.064 74.055,107.1 74.098,107.135C74.173,107.195 74.248,107.256 74.319,107.321C74.667,107.638 74.973,108.003 75.222,108.416L75.409,108.726L78.127,113.21L81.538,118.838L82.405,120.27C82.487,120.406 82.555,120.547 82.607,120.693C82.766,121.133 82.791,121.614 82.678,122.089C82.516,122.772 82.09,123.358 81.479,123.735L79.946,124.683L79.945,124.684C79.838,124.749 79.731,124.804 79.619,124.852C79.596,124.863 79.572,124.873 79.548,124.883C79.438,124.928 79.326,124.966 79.213,124.996C79.2,125 79.185,125.002 79.172,125.005C79.066,125.03 78.96,125.049 78.853,125.061C78.832,125.064 78.812,125.067 78.791,125.069C78.677,125.079 78.563,125.081 78.45,125.077C78.429,125.076 78.407,125.075 78.386,125.073C78.271,125.065 78.156,125.052 78.044,125.029C78.042,125.028 78.041,125.028 78.04,125.028C77.919,125.002 77.802,124.967 77.686,124.924C77.676,124.92 77.666,124.918 77.656,124.914C77.42,124.822 77.196,124.694 76.996,124.528C76.995,124.528 76.995,124.527 76.995,124.527C76.894,124.444 76.803,124.355 76.72,124.261C76.713,124.253 76.707,124.245 76.699,124.236C76.619,124.142 76.545,124.044 76.482,123.939L73.941,119.738C72.994,118.173 71.493,117.075 69.712,116.648C67.888,116.209 65.998,116.523 64.391,117.531C63.745,117.937 63.312,118.612 63.208,119.373C63.179,119.593 63.143,119.809 63.105,120.023C63.076,120.179 63.042,120.333 63.008,120.486C62.997,120.537 62.987,120.589 62.975,120.64C62.929,120.834 62.88,121.024 62.826,121.212C62.825,121.219 62.822,121.227 62.819,121.235C62.534,122.225 62.133,123.142 61.618,123.975C61.616,123.977 61.616,123.978 61.616,123.979C60.667,125.518 59.326,126.819 57.568,127.899C56.366,128.639 55.983,130.225 56.715,131.441C57.446,132.657 59.014,133.044 60.217,132.304C61.458,131.54 62.559,130.684 63.522,129.74L74.167,146.716C76.128,149.792 79.517,151.576 83.024,151.576C83.209,151.576 83.395,151.566 83.581,151.556C83.654,151.69 83.729,151.823 83.808,151.956C84.108,152.451 84.453,152.908 84.837,153.322L77.301,157.86ZM79.464,138.909C79.464,138.911 79.465,138.912 79.465,138.913C79.508,139.034 79.554,139.152 79.603,139.272C79.609,139.285 79.614,139.3 79.621,139.315C79.665,139.422 79.712,139.528 79.761,139.634C79.773,139.657 79.783,139.683 79.795,139.707C79.841,139.806 79.893,139.904 79.943,140.002C79.959,140.032 79.973,140.061 79.989,140.089C80.056,140.216 80.128,140.34 80.202,140.464C80.33,140.676 80.469,140.879 80.613,141.076C80.664,141.146 80.717,141.214 80.771,141.283C80.865,141.404 80.962,141.52 81.061,141.636C81.132,141.716 81.201,141.8 81.274,141.878C81.328,141.937 81.388,141.99 81.445,142.048C81.651,142.256 81.866,142.452 82.092,142.637C82.115,142.656 82.138,142.676 82.162,142.694C82.6,143.046 83.07,143.35 83.571,143.607C83.11,144.483 82.806,145.434 82.67,146.413C80.99,146.306 79.399,145.411 78.462,143.94L66.743,125.251C67.286,124.116 67.704,122.905 67.988,121.615C68.17,121.604 68.353,121.621 68.534,121.663C68.982,121.771 69.358,122.043 69.592,122.429L72.133,126.629C72.137,126.635 72.141,126.64 72.145,126.647C72.27,126.852 72.404,127.051 72.548,127.243C72.655,127.384 72.769,127.515 72.883,127.647C72.923,127.693 72.959,127.742 73,127.788C73.005,127.811 73.012,127.834 73.017,127.856C73.057,128.035 73.102,128.212 73.152,128.388C73.168,128.439 73.183,128.49 73.198,128.541C73.26,128.74 73.326,128.937 73.403,129.13C73.41,129.151 73.419,129.169 73.427,129.188C73.498,129.365 73.576,129.539 73.66,129.71C73.683,129.76 73.707,129.81 73.733,129.858C73.828,130.046 73.928,130.231 74.037,130.414C75.193,132.328 77.011,133.676 79.159,134.224C78.827,135.76 78.92,137.386 79.464,138.909ZM81.09,108.232L81.947,107.703C82.702,107.236 83.592,107.095 84.453,107.304C85.314,107.515 86.041,108.05 86.502,108.814C87.454,110.39 86.961,112.457 85.403,113.419L84.552,113.945L82.032,109.788L81.09,108.232ZM100.088,139.194C100.926,139.398 101.633,139.92 102.083,140.664C103.01,142.198 102.529,144.209 101.012,145.148L92.593,150.351C91.917,150.769 91.132,150.915 90.357,150.778C90.314,150.769 90.269,150.758 90.223,150.752C90.201,150.746 90.177,150.743 90.154,150.738C89.315,150.534 88.608,150.012 88.158,149.268C87.956,148.934 87.826,148.578 87.753,148.216C87.751,148.205 87.751,148.195 87.749,148.186C87.547,147.127 87.884,146.045 88.604,145.293C88.624,145.273 88.642,145.251 88.662,145.232C88.699,145.196 88.738,145.161 88.776,145.126C88.815,145.092 88.855,145.057 88.897,145.024C88.928,144.999 88.957,144.975 88.989,144.951C89.064,144.894 89.14,144.84 89.221,144.789C89.224,144.788 89.226,144.787 89.228,144.785L90.901,143.752C91.195,143.613 91.485,143.462 91.766,143.289L98.207,139.307C98.804,139.081 99.453,139.04 100.088,139.194ZM94.224,127.895C94.909,127.564 95.679,127.481 96.428,127.663C97.288,127.873 98.015,128.41 98.477,129.173C99.429,130.75 98.935,132.814 97.378,133.777L95.862,134.714C95.565,134.852 95.272,135.008 94.99,135.182L88.582,139.142C87.386,139.617 86.04,139.338 85.125,138.484L85.124,138.482C85.052,138.415 84.984,138.347 84.919,138.273C84.902,138.253 84.886,138.231 84.869,138.211C84.821,138.155 84.773,138.098 84.728,138.038C84.666,137.953 84.607,137.866 84.552,137.776C84.496,137.682 84.445,137.588 84.399,137.492C84.384,137.461 84.372,137.43 84.358,137.398C84.329,137.332 84.299,137.265 84.274,137.196C84.261,137.16 84.25,137.125 84.238,137.089C84.217,137.023 84.197,136.959 84.18,136.893C84.171,136.857 84.161,136.819 84.153,136.783C84.139,136.717 84.125,136.65 84.114,136.581C84.108,136.546 84.103,136.512 84.098,136.477C84.088,136.407 84.082,136.337 84.078,136.267C84.075,136.234 84.072,136.2 84.071,136.167C84.068,136.094 84.068,136.022 84.071,135.95C84.071,135.918 84.071,135.887 84.074,135.856C84.076,135.783 84.086,135.71 84.094,135.638C84.098,135.607 84.099,135.576 84.104,135.545C84.114,135.481 84.127,135.416 84.14,135.352C84.285,134.662 84.642,134.016 85.202,133.52C85.225,133.5 85.245,133.476 85.267,133.456C85.299,133.428 85.33,133.4 85.363,133.373C85.443,133.327 85.524,133.286 85.602,133.237L93.873,128.125C93.993,128.051 94.109,127.975 94.224,127.895ZM90.263,117.612C91.124,117.821 91.851,118.358 92.313,119.122C93.2,120.591 92.831,122.485 91.515,123.516C91.43,123.563 91.347,123.611 91.263,123.662L84.877,127.609C84.898,127.593 84.918,127.575 84.939,127.557C85.061,127.459 85.184,127.36 85.298,127.255C85.369,127.191 85.437,127.122 85.506,127.055C85.61,126.953 85.713,126.85 85.812,126.741C85.879,126.668 85.943,126.592 86.007,126.517C86.098,126.407 86.189,126.296 86.274,126.182C86.333,126.103 86.393,126.023 86.45,125.939C86.531,125.823 86.608,125.703 86.684,125.581C86.736,125.496 86.787,125.413 86.835,125.327C86.908,125.198 86.975,125.065 87.04,124.932C87.081,124.848 87.125,124.766 87.162,124.68C87.228,124.531 87.287,124.378 87.345,124.224C87.372,124.15 87.403,124.077 87.429,124.002C87.507,123.77 87.577,123.535 87.634,123.295C87.689,123.065 87.731,122.834 87.765,122.603C87.775,122.529 87.781,122.456 87.79,122.382C87.808,122.223 87.823,122.066 87.832,121.908C87.836,121.822 87.838,121.736 87.839,121.65C87.843,121.502 87.842,121.356 87.836,121.21C87.834,121.122 87.828,121.035 87.823,120.948C87.812,120.8 87.795,120.653 87.777,120.506C87.766,120.424 87.757,120.342 87.743,120.262C87.715,120.095 87.681,119.932 87.641,119.768C87.628,119.709 87.617,119.648 87.603,119.589C87.544,119.368 87.478,119.149 87.399,118.933C87.384,118.891 87.365,118.85 87.348,118.807C87.292,118.662 87.238,118.515 87.172,118.373L87.758,118.011C88.513,117.543 89.403,117.402 90.263,117.612ZM150.877,91.577C150.848,91.7 150.762,91.931 150.512,92.087L147.463,93.99C147.082,94.228 146.578,94.109 146.342,93.722L114.235,41.104C113.497,39.893 111.927,39.517 110.728,40.263C109.53,41.011 109.158,42.599 109.898,43.81L137.414,88.904L78.176,101.943L62.487,76.23L100.582,28.543L103.659,33.588C104.399,34.799 105.969,35.175 107.167,34.429C108.366,33.681 108.738,32.093 107.998,30.881L100.328,18.312C100.174,18.06 100.199,17.814 100.229,17.691C100.258,17.566 100.344,17.335 100.594,17.179L103.643,15.277C104.026,15.038 104.528,15.159 104.764,15.545L150.778,90.955C150.932,91.207 150.906,91.453 150.877,91.577Z'\n        />\n      </g>\n    </g>\n    <g transform='translate(13.962 3.284)'>\n      <circle\n        cx='124.5'\n        cy='124.5'\n        r='124.5'\n        fill='none'\n        stroke='#fff'\n        strokeWidth='6'\n        id='Oval'\n        transform='translate(-1.592 9.085)'\n      />\n    </g>\n  </svg>\n);\n","import React from \"react\";\n\nimport Logo from '../components/Logo'\n\nimport style from \"./style/Loading.module.scss\";\nimport { VectorLogo } from \"../icons/Welcome\";\n\nconst Loading = () => (\n    <div className={style.wrapper}>\n      <div className={style.logo}>\n        <VectorLogo />\n      </div>\n      <div className={style.loader}>\n        <div className={style.outer} />\n        <div className={style.middle} />\n        <div className={style.inner} />\n      </div>\n    </div>\n);\n\nexport default Loading;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../store\";\n\nimport Logo from \"../components/Logo\";\nimport { VectorLogo, VectorTitle, VectorSubTitle } from \"../icons/Welcome\";\nimport Page from \"../layout/Page\";\nimport Center from \"../layout/Center\";\n\nimport style from \"./style/Welcome.module.scss\";\n\nconst Welcome = (props: any) => {\n  return (\n    <Page welcome>\n      <div className={style.pageContent}>\n        <div className='app-logo'>\n          <VectorLogo />\n        </div>\n        <div className='app-title'>\n          <VectorTitle />\n        </div>\n        <div  className={style.divider}/>\n        <div className='app-subTitle'>\n          <VectorSubTitle />\n        </div>\n      </div>\n    </Page>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    language: state.language\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Welcome);\n","import React, { useEffect, useState, Suspense } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { AppState } from \"./store\";\n\nimport {\n  setModule,\n  setToken,\n  checkToken,\n  login,\n  fetchLocations,\n  fetchData\n} from \"./store/users/actions\";\n\nimport NewButton from \"./features/New/components/NewButton\";\nimport Navigation from \"./features/Navigation\";\n\nimport Loading from \"./pages/Loading\";\nimport Welcome from \"./pages/Welcome\";\nimport Enter from \"./pages/Enter\";\n\nimport { data } from \"./store/types\";\nimport \"./style/App.scss\";\n\nconst App = (props: {\n  token: string;\n  module: string;\n  loginResult: data;\n  help: boolean;\n  vote: data;\n  check: data;\n  setModule: (arg0: string) => void;\n  setToken: (arg0: string) => void;\n  checkToken: (arg0: string) => void;\n  location: data;\n  fetchLocations: () => void;\n  fetchData: (arg0: string) => void;\n  cookies: any;\n}) => {\n  const { token } = props;\n  const { cookies } = props;\n  const [loading, setLoading] = useState(true);\n  const [int, setInt] = useState(false);\n  const [fetch, setFetch] = useState(false);\n\n  axios.defaults.headers = { token };\n\n  console.log(props.check);\n  // set cookies if token changes\n  useEffect(() => {\n    console.log(Object.keys(props.location).length);\n    // if 'clear'\n    if (props.token === \"clear\") {\n      console.log(0);\n      cookies.set(\"token\", \"\");\n      props.setToken(\"\");\n      props.setModule(\"welcome\");\n    } else if (\n      props.token !== \"\" &&\n      props.token !== \"clear\" &&\n      Object.keys(props.location).length > 0\n    ) {\n      // if token IS\n      cookies.set(\"token\", props.token);\n      console.log(5);\n      props.setModule(\"home\");\n    } else if (props.token !== \"\" && props.token !== \"clear\") {\n      props.fetchData(token);\n    } else if (cookies.get(\"token\") && cookies.get(\"token\").length > 0) {\n      console.log(2);\n      props.checkToken(cookies.get(\"token\"));\n    } else {\n      console.log(\"6 - no token, no cookie\");\n      props.setModule(\"welcome\");\n    }\n  }, [token, cookies]);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [props.module]);\n\n  useEffect(() => {\n    console.log(7);\n    if (Object.keys(props.location).length > 0) {\n      console.log(\"object\");\n      // props.setLanguage(props.location.lang);\n      props.setModule(\"home\");\n    }\n  }, [props.location]);\n\n\n\n  useEffect(() => {\n    console.log(10);\n    // props.checkToken(cookies.get(\"token\"));\n    // console.log(props.check.status);\n    // console.log(fetch);\n    if (props.check.status) {\n      // setFetch(true);\n       props.fetchData(token);\n    } else {\n      // setFetch(false);\n    }\n  }, [props.check.status]);\n\n  // fetch locations\n  useEffect(() => {\n    props.fetchLocations();\n  }, []);\n\n  const handleNewButtonClick = () => {\n    props.setModule(\"new\");\n  };\n  const AppComponent = (props: { children: any }) => (\n    <div className='app'>{props.children}</div>\n  );\n  const LazyComponent = (props: { children: any }) => (\n    <Suspense fallback={<Loading />}>{props.children}</Suspense>\n  );\n\n  const componentFactory = (CFProps: {\n    children: any;\n    lazy?: boolean;\n    nav?: boolean;\n    new?: boolean;\n  }) => {\n    const Help = React.lazy(() => import(\"./features/Help\"));\n    const help = props.help ? (\n      <LazyComponent>\n        <Help />\n      </LazyComponent>\n    ) : null;\n    const nav = CFProps.nav ? <Navigation /> : null;\n    const newButton = CFProps.new ? (\n      <NewButton action={handleNewButtonClick} />\n    ) : null;\n    let content = CFProps.lazy ? (\n      <AppComponent>\n        {help}\n        {nav}\n        {newButton}\n        <LazyComponent>{CFProps.children}</LazyComponent>\n      </AppComponent>\n    ) : (\n      <AppComponent>\n        {help}\n        {nav}\n        {newButton}\n        {CFProps.children}\n      </AppComponent>\n    );\n    return content;\n  };\n  let show;\n  switch (props.module) {\n    case \"welcome\":\n      show = componentFactory({ children: <Welcome />, nav: true });\n      break;\n    case \"login\":\n      show = componentFactory({ children: <Enter />, nav: true });\n      break;\n    case \"confirmation\":\n      const Confirmation = React.lazy(() => import(\"./pages/Confirmation\"));\n      show = componentFactory({\n        children: <Confirmation />,\n        nav: true,\n        lazy: true\n      });\n      break;\n    case \"municipality\":\n      const Municipality = React.lazy(() => import(\"./pages/Municipality\"));\n      show = componentFactory({\n        children: <Municipality />,\n        nav: true,\n        lazy: true,\n        new: true\n      });\n      break;\n    case \"new\":\n      const New = React.lazy(() => import(\"./pages/New\"));\n      show = componentFactory({\n        children: <New />,\n        nav: true,\n        lazy: true\n      });\n      break;\n    case \"profile\":\n      const Profile = React.lazy(() => import(\"./pages/Profile\"));\n      show = componentFactory({\n        children: <Profile />,\n        nav: true,\n        lazy: true,\n        new: true\n      });\n      break;\n    case \"home\":\n      const Home = React.lazy(() => import(\"./pages/Home\"));\n      show = componentFactory({\n        children: <Home />,\n        nav: true,\n        lazy: true,\n        new: true\n      });\n      break;\n    case \"mine\":\n      const Mine = React.lazy(() => import(\"./pages/Mine\"));\n      show = componentFactory({\n        children: <Mine />,\n        nav: true,\n        lazy: true,\n        new: true\n      });\n    case \"register\":\n      const Register = React.lazy(() => import(\"./pages/Enter\"));\n      show = componentFactory({\n        children: <Register register />,\n        nav: true,\n        lazy: true,\n        new: false\n      });\n      break;\n  }\n\n  const content = loading ? <Loading /> : show || <Loading />;\n\n  return content;\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    token: state.token,\n    module: state.module,\n    loginResult: state.login,\n    location: state.locationData,\n    help: state.help,\n    vote: state.vote,\n    check: state.checkTokenResult\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    setModule,\n    setToken,\n    checkToken,\n    login,\n    fetchLocations,\n    fetchData\n  }\n)(withCookies(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport axios from \"axios\";\nimport { logger } from \"redux-logger\";\n\nimport { setStep, showHelp } from \"./app/reducers\";\nimport { submitPost, updatePost } from \"./post/reducers\";\nimport {\n  vote,\n  setToken,\n  checkToken,\n  login,\n  setModule,\n  register,\n  fetchLocations,\n  setLoading,\n  setAuth,\n  setLocationData,\n  setMessage,\n  changeMode,\n  loadData,\n  setLanguage,\n  setPosts\n} from \"./users/reducers\";\nimport * as TYPE from \"./types\";\nimport { apiState } from \"./defaults\";\n\nimport data from \"../data/translation.json\";\n\nconst self =\n  window.location.hostname === \"localhost\"\n    ? \"http://localhost:8080/api\"\n    : process.env.REACT_APP_SELF\n    ? process.env.REACT_APP_SELF\n    : `https://${window.location.hostname}/api`;\n\naxios.defaults.baseURL = self;\n\nconst rootReducer = combineReducers({\n  vote: vote,\n  token: setToken,\n  checkTokenResult: checkToken,\n  login: login,\n  module: setModule,\n  locations: fetchLocations,\n  loading: setLoading,\n  register: register,\n  data: loadData,\n  language: setLanguage,\n  locationData: setLocationData,\n  auth: setAuth,\n  submitPost: submitPost,\n  help: showHelp,\n  message: setMessage,\n  mode: changeMode,\n  step: setStep,\n  posts: setPosts,\n  update: updatePost\n});\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default function configureStore() {\n  const middlewares = [thunk, logger];\n\n  const middleWareEnhancer = applyMiddleware(...middlewares);\n\n  interface state {\n    token: string;\n    checkTokenResult: any;\n    login: TYPE.apiResponse;\n    module: string;\n    locations: any;\n    loading: boolean;\n    register: TYPE.apiResponse;\n    data: TYPE.indexedObjAny;\n    language: TYPE.indexedObjAny;\n    locationData: TYPE.data;\n    auth: boolean;\n    step: number;\n    submitPost: TYPE.apiResponse;\n    help: boolean;\n    message: string;\n    mode: string;\n    vote: TYPE.apiResponse;\n    posts: any;\n    update: TYPE.apiResponse;\n  }\n\n  const initialState: state = {\n    token: \"\",\n    checkTokenResult: \"\",\n    login: apiState,\n    module: \"\",\n    locations: \"\",\n    loading: false,\n    register: apiState,\n    data: data,\n    language: data.language.en,\n    locationData: {},\n    auth: false,\n    step: 1,\n    submitPost: apiState,\n    help: false,\n    message: \"\",\n    mode: \"login\",\n    vote: apiState,\n    posts: [],\n    update: apiState\n  };\n\n  const store = createStore(rootReducer, initialState, middleWareEnhancer);\n\n  return store;\n}\n","import { Action } from \"./types\";\nimport { data } from \"../types\";\nimport { apiState } from \"../defaults\";\n\nexport const setToken = (state = \"\", action: Action) => {\n  switch (action.type) {\n    case \"SET\":\n      return action.token;\n  }\n  return state;\n};\nexport const setLoading = (state = false, action: Action): boolean => {\n  switch (action.type) {\n    case \"SET_LOADING\":\n      return action.loading;\n  }\n  return false;\n};\n\nexport const checkToken = (state = { token: \"\" }, action: Action) => {\n  switch (action.type) {\n    case \"CHECK\":\n      return { ...state, ...action.payload };\n  }\n  return { ...state };\n};\n\n\n\nexport const changeMode = (state = \"login\", action: Action) => {\n  switch (action.type) {\n    case \"CHANGE_MODE\":\n      return action.mode;\n  }\n  return state;\n};\n\nexport const login = (state = apiState, action: Action) => {\n  switch (action.type) {\n    case \"LOGIN\":\n      return { ...state, ...action.payload };\n  }\n  return { ...state };\n};\n\nexport const setMessage = (state = \"\", action: Action) => {\n  switch (action.type) {\n    case \"SET_MESSAGE\":\n      return action.message || state;\n  }\n  return state;\n};\n\nexport const register = (state = apiState, action: Action) => {\n  switch (action.type) {\n    case \"REGISTER\":\n      return { ...state, ...action.payload };\n  }\n  return { ...state };\n};\nexport const fetchLocations = (state = apiState, action: Action) => {\n  switch (action.type) {\n    case \"FETCH_LOCATIONS\":\n      return action.payload;\n  }\n  return { ...state };\n};\n\nexport const setModule = (state = \"\", action: Action): string => {\n  switch (action.type) {\n    case \"SET_MODULE\":\n      return action.module ? action.module : state;\n  }\n  return state;\n};\n\nexport const setAuth = (state = false, action: Action): boolean => {\n  switch (action.type) {\n    case \"SET_AUTH\":\n      return action ? true : false;\n  }\n  return state;\n};\n\nexport const setLocationData = (state = {}, action: Action): data => {\n  switch (action.type) {\n    case \"SET_LOCATION_DATA\":\n      return { ...action.data };\n  }\n  return state;\n};\n\n/**\n * Reducer function to process the loadData action\n * @function loadData\n * @param state\n * @param action\n * @returns {string}\n */\nexport const loadData = (state = {}, action: Action): data => {\n  switch (action.type) {\n    case \"LOAD_DATA\":\n      return { ...action.data };\n  }\n  return state;\n};\n\n/**\n * Reducer function to process the setLanguage action\n * @function setLanguage\n * @param state\n * @param action\n * @returns {string}\n */\nexport const setLanguage = (state = {}, action: Action): data => {\n  switch (action.type) {\n    case \"SET_LANGUAGE\":\n      return { ...action.data };\n  }\n  return state;\n};\n\nexport const vote = (state = apiState, action: Action) => {\n  switch (action.type) {\n    case \"VOTE\":\n      return action.payload;\n  }\n  return state;\n};\n\nexport const fetchData = (state = apiState, action: Action) => {\n  switch (action.type) {\n    case \"FETCH_DATA\":\n      return action.payload;\n  }\n  return state;\n};\n\nexport const setPosts = (state = [], action: Action) => {\n  switch (action.type) {\n    case \"SET_POSTS\":\n      return action.posts;\n  }\n  return state;\n};\n","import { Action } from \"./types\";\nimport { apiState } from \"../defaults\";\n\nexport const submitPost = (state = apiState, action: Action) => {\n  switch (action.type) {\n    case \"SUBMIT_POST\":\n      return { ...state, ...action.payload };\n  }\n  return state;\n};\nexport const updatePost = (state = apiState, action: Action) => {\n  switch (action.type) {\n    case \"UPDATE_POST\":\n      return { ...state, ...action.payload };\n  }\n  return state;\n};\n","import { Action } from \"./types\";\nimport { data } from \"../types\";\n\n/**\n * Reducer function to process the loadData action\n * @function loadData\n * @param state\n * @param action\n * @returns {string}\n */\nexport const loadData = (state = {}, action: Action): data => {\n  switch (action.type) {\n    case \"LOAD_DATA\":\n      return { ...action.data };\n  }\n  return state;\n};\n\n/**\n * Reducer function to process the setLanguage action\n * @function setLanguage\n * @param state\n * @param action\n * @returns {string}\n */\nexport const setLanguage = (state = {}, action: Action): data => {\n  switch (action.type) {\n    case \"SET_LANGUAGE\":\n      return { ...action.data };\n  }\n  return state;\n};\n\n/**\n * Reducer function to process the setStep action\n *\n * @param state\n * @param action\n *\n * @returns {string}\n */\nexport const setStep = (state = 1, action: Action): number => {\n  switch (action.type) {\n    case \"SET_STEP\":\n      return action.step;\n  }\n  return state;\n};\n\n/**\n * Reducer function to process the showHelp action\n *\n * @param state\n * @param action\n *\n * @returns {string}\n */\nexport const showHelp = (state = false, action: Action): boolean => {\n  switch (action.type) {\n    case \"SHOW_HELP\":\n      return action.show;\n  }\n  return state;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { CookiesProvider } from \"react-cookie\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store\";\n\nimport \"./style/start.scss\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <CookiesProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </CookiesProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}